{
  "overall": 959,
  "successes": [
    {
      "name": "1Forge Finance APIs",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /quotes' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 2,
        "numOpsQuery": 2,
        "numOpsMutation": 0,
        "numQueriesCreated": 1,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Authentiq",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'HEAD /key/{PK}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /scope/{job}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /scope/{job}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'HEAD /scope/{job}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'HEAD /scope/{job}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /scope/{job}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 14,
        "numOpsQuery": 2,
        "numOpsMutation": 12,
        "numQueriesCreated": 2,
        "numMutationsCreated": 9
      }
    },
    {
      "name": "Afterbanks",
      "report": {
        "warnings": [],
        "numOps": 3,
        "numOpsQuery": 1,
        "numOpsMutation": 2,
        "numQueriesCreated": 1,
        "numMutationsCreated": 2
      }
    },
    {
      "name": "airportsapi",
      "report": {
        "warnings": [],
        "numOps": 1,
        "numOpsQuery": 1,
        "numOpsMutation": 0,
        "numQueriesCreated": 1,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "AWS Certificate Manager",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DeleteCertificate' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#RemoveTagsFromCertificate' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#ResendValidationEmail' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 10,
        "numOpsQuery": 0,
        "numOpsMutation": 10,
        "numQueriesCreated": 0,
        "numMutationsCreated": 6
      }
    },
    {
      "name": "Alexa For Business",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 36,
        "numOpsQuery": 0,
        "numOpsMutation": 36,
        "numQueriesCreated": 0,
        "numMutationsCreated": 36
      }
    },
    {
      "name": "Amazon API Gateway",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /apikeys/{api_Key}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /restapis/{restapi_id}/authorizers/{authorizer_id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /domainnames/{domain_name}/basepathmappings/{base_path}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /clientcertificates/{clientcertificate_id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /restapis/{restapi_id}/deployments/{deployment_id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /restapis/{restapi_id}/documentation/parts/{part_id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /restapis/{restapi_id}/documentation/versions/{doc_version}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /domainnames/{domain_name}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /restapis/{restapi_id}/gatewayresponses/{response_type}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /restapis/{restapi_id}/resources/{resource_id}/methods/{http_method}/integration' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /restapis/{restapi_id}/resources/{resource_id}/methods/{http_method}/integration/responses/{status_code}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /restapis/{restapi_id}/resources/{resource_id}/methods/{http_method}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /restapis/{restapi_id}/resources/{resource_id}/methods/{http_method}/responses/{status_code}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /restapis/{restapi_id}/models/{model_name}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /restapis/{restapi_id}/requestvalidators/{requestvalidator_id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /restapis/{restapi_id}/resources/{resource_id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /restapis/{restapi_id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /restapis/{restapi_id}/stages/{stage_name}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /usageplans/{usageplanId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /usageplans/{usageplanId}/keys/{keyId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /vpclinks/{vpclink_id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /restapis/{restapi_id}/stages/{stage_name}/cache/authorizers' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /restapis/{restapi_id}/stages/{stage_name}/cache/data' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /tags/{resource_arn}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /tags/{resource_arn}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"A request to get information about the current <a>ApiKeys</a> resource.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Request to describe an existing <a>Authorizers</a> resource.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"A request to get information about a collection of <a>BasePathMapping</a> resources.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Requests API Gateway to get information about a <a>Deployments</a> collection.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Gets the documentation parts of an API. The result may be filtered by the type, name, or path of API entities (targets).\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Gets the documentation versions of an API.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Request to describe a collection of <a>DomainName</a> resources.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Request to list existing <a>Models</a> defined for a <a>RestApi</a> resource.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Gets the <a>RequestValidators</a> collection of a given <a>RestApi</a>.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"The GET request to list existing <a>RestApis</a> defined for your collection.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Requests API Gateway to get information about one or more <a>Stage</a> resources.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"The GET request to get all the usage plans of the caller's account.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"The GET request to get all the usage plan keys representing the API keys added to a specified usage plan.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Gets the <a>VpcLinks</a> collection under the caller's account in a selected region.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"A request to get information about the current <a>ApiKey</a> resource.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Request to describe an existing <a>Authorizer</a> resource.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Request to describe a <a>BasePathMapping</a> resource.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"A request to get information about the current <a>ClientCertificate</a> resource.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Requests API Gateway to get information about a <a>Deployment</a> resource.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Gets a specified documentation part of a given API.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Gets a documentation snapshot of an API.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Request to get the name of a <a>DomainName</a> resource.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Gets a <a>GatewayResponse</a> of a specified response type on the given <a>RestApi</a>.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Represents a request to get the integration configuration.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Represents a get integration response request.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Request to describe an existing <a>Method</a> resource.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Request to describe a <a>MethodResponse</a> resource.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Request to list information about a model in an existing <a>RestApi</a> resource.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Gets a <a>RequestValidator</a> of a given <a>RestApi</a>.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Request to list information about a resource.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"The GET request to list an existing <a>RestApi</a> defined for your collection. \"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Requests API Gateway to get information about a <a>Stage</a> resource.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"The GET request to get a usage plan of a given plan identifier.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"The GET request to get a usage plan key of a given key identifier.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Gets a specified VPC link under the caller's account in a region.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"A request to get information about a collection of <a>ClientCertificate</a> resources.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Requests API Gateway to get information about the current <a>Account</a> resource.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Request a new export of a <a>RestApi</a> for a particular <a>Stage</a>.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Gets the <a>GatewayResponses</a> collection on the given <a>RestApi</a>. If an API developer has not added any definitions for gateway responses, the result will be the API Gateway-generated default <a>GatewayResponses</a> collection for the supported response types.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Request to generate a sample mapping template used to transform the payload.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Request to list information about a collection of resources.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Request a new generated client SDK for a <a>RestApi</a> and <a>Stage</a>.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Get an <a>SdkType</a> instance.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Get the <a>SdkTypes</a> collection.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Gets the Tags collection for a given resource.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"The GET request to get the usage data of a usage plan in a specified time interval.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 98,
        "numOpsQuery": 46,
        "numOpsMutation": 52,
        "numQueriesCreated": 46,
        "numMutationsCreated": 27
      }
    },
    {
      "name": "Application Auto Scaling",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"example\":{},\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"example\":{},\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"example\":{},\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 10,
        "numOpsQuery": 0,
        "numOpsMutation": 10,
        "numQueriesCreated": 0,
        "numMutationsCreated": 10
      }
    },
    {
      "name": "Amazon AppStream",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 32,
        "numOpsQuery": 0,
        "numOpsMutation": 32,
        "numQueriesCreated": 0,
        "numMutationsCreated": 32
      }
    },
    {
      "name": "AWS AppSync",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 26,
        "numOpsQuery": 11,
        "numOpsMutation": 15,
        "numQueriesCreated": 11,
        "numMutationsCreated": 15
      }
    },
    {
      "name": "Amazon Athena",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 11,
        "numOpsQuery": 0,
        "numOpsMutation": 11,
        "numQueriesCreated": 0,
        "numMutationsCreated": 11
      }
    },
    {
      "name": "Auto Scaling",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#CreateAutoScalingGroup' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#CreateLaunchConfiguration' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#CreateOrUpdateTags' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DeleteAutoScalingGroup' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DeleteLaunchConfiguration' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DeleteNotificationConfiguration' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DeletePolicy' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DeleteScheduledAction' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DeleteTags' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DisableMetricsCollection' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#EnableMetricsCollection' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#ExecutePolicy' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#PutNotificationConfiguration' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#PutScheduledUpdateGroupAction' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#ResumeProcesses' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#SetDesiredCapacity' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#SetInstanceHealth' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#SuspendProcesses' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#UpdateAutoScalingGroup' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 52,
        "numOpsQuery": 0,
        "numOpsMutation": 52,
        "numQueriesCreated": 0,
        "numMutationsCreated": 32
      }
    },
    {
      "name": "AWS Migration Hub",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 16,
        "numOpsQuery": 0,
        "numOpsMutation": 16,
        "numQueriesCreated": 0,
        "numMutationsCreated": 16
      }
    },
    {
      "name": "AWS Batch",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"example\":{},\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"example\":{},\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"example\":{},\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"example\":{},\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"example\":{},\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 16,
        "numOpsQuery": 0,
        "numOpsMutation": 16,
        "numQueriesCreated": 0,
        "numMutationsCreated": 16
      }
    },
    {
      "name": "AWS Budgets",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Response of CreateBudget\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Response of CreateNotification\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Response of CreateSubscriber\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Response of DeleteBudget\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Response of DeleteNotification\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Response of DeleteSubscriber\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Response of UpdateBudget\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Response of UpdateNotification\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Response of UpdateSubscriber\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 13,
        "numOpsQuery": 0,
        "numOpsMutation": 13,
        "numQueriesCreated": 0,
        "numMutationsCreated": 13
      }
    },
    {
      "name": "AWS Cost Explorer Service",
      "report": {
        "warnings": [],
        "numOps": 4,
        "numOpsQuery": 0,
        "numOpsMutation": 4,
        "numQueriesCreated": 0,
        "numMutationsCreated": 4
      }
    },
    {
      "name": "AWS Cloud9",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 10,
        "numOpsQuery": 0,
        "numOpsMutation": 10,
        "numQueriesCreated": 0,
        "numMutationsCreated": 10
      }
    },
    {
      "name": "Amazon CloudDirectory",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /amazonclouddirectory/2017-01-11/typedlink/detach' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Represents the output of a <a>DeleteObject</a> response operation.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"The result of a batch add facet to object operation.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"An empty result that represents success.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Represents the output of an <a>AttachPolicy</a> response operation.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Represents the output of a <a>DetachPolicy</a> response operation.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Represents the output of a <a>DetachTypedLink</a> response operation.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 62,
        "numOpsQuery": 0,
        "numOpsMutation": 62,
        "numQueriesCreated": 0,
        "numMutationsCreated": 61
      }
    },
    {
      "name": "Amazon CloudFront",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /2016-11-25/origin-access-identity/cloudfront' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /2016-11-25/origin-access-identity/cloudfront' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /2016-11-25/distribution' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /2016-11-25/distribution' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /2016-11-25/distribution?WithTags' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /2016-11-25/distribution/{DistributionId}/invalidation' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /2016-11-25/distribution/{DistributionId}/invalidation' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /2016-11-25/streaming-distribution' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /2016-11-25/streaming-distribution' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /2016-11-25/streaming-distribution?WithTags' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /2016-11-25/origin-access-identity/cloudfront/{Id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /2016-11-25/origin-access-identity/cloudfront/{Id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /2016-11-25/distribution/{Id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /2016-11-25/distribution/{Id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /2016-11-25/streaming-distribution/{Id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /2016-11-25/streaming-distribution/{Id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /2016-11-25/origin-access-identity/cloudfront/{Id}/config' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /2016-11-25/origin-access-identity/cloudfront/{Id}/config' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /2016-11-25/distribution/{Id}/config' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /2016-11-25/distribution/{Id}/config' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /2016-11-25/distribution/{DistributionId}/invalidation/{Id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /2016-11-25/streaming-distribution/{Id}/config' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /2016-11-25/streaming-distribution/{Id}/config' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /2016-11-25/distributionsByWebACLId/{WebACLId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /2016-11-25/tagging' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /2016-11-25/tagging?Operation=Tag' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /2016-11-25/tagging?Operation=Untag' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 27,
        "numOpsQuery": 13,
        "numOpsMutation": 14,
        "numQueriesCreated": 0,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Amazon CloudFront",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /2017-03-25/origin-access-identity/cloudfront' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /2017-03-25/origin-access-identity/cloudfront' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /2017-03-25/distribution' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /2017-03-25/distribution' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /2017-03-25/distribution?WithTags' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /2017-03-25/distribution/{DistributionId}/invalidation' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /2017-03-25/distribution/{DistributionId}/invalidation' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /2017-03-25/streaming-distribution' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /2017-03-25/streaming-distribution' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /2017-03-25/streaming-distribution?WithTags' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /2017-03-25/origin-access-identity/cloudfront/{Id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /2017-03-25/origin-access-identity/cloudfront/{Id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /2017-03-25/distribution/{Id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /2017-03-25/distribution/{Id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /2017-03-25/service-linked-role/{RoleName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /2017-03-25/streaming-distribution/{Id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /2017-03-25/streaming-distribution/{Id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /2017-03-25/origin-access-identity/cloudfront/{Id}/config' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /2017-03-25/origin-access-identity/cloudfront/{Id}/config' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /2017-03-25/distribution/{Id}/config' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /2017-03-25/distribution/{Id}/config' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /2017-03-25/distribution/{DistributionId}/invalidation/{Id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /2017-03-25/streaming-distribution/{Id}/config' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /2017-03-25/streaming-distribution/{Id}/config' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /2017-03-25/distributionsByWebACLId/{WebACLId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /2017-03-25/tagging' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /2017-03-25/tagging?Operation=Tag' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /2017-03-25/tagging?Operation=Untag' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 28,
        "numOpsQuery": 13,
        "numOpsMutation": 15,
        "numQueriesCreated": 0,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Amazon CloudHSM",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Contains the inputs for the <a>ListAvailableZones</a> action.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 20,
        "numOpsQuery": 0,
        "numOpsMutation": 20,
        "numQueriesCreated": 0,
        "numMutationsCreated": 20
      }
    },
    {
      "name": "AWS CloudHSM V2",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 10,
        "numOpsQuery": 0,
        "numOpsMutation": 10,
        "numQueriesCreated": 0,
        "numMutationsCreated": 10
      }
    },
    {
      "name": "Amazon CloudSearch",
      "report": {
        "warnings": [],
        "numOps": 22,
        "numOpsQuery": 0,
        "numOpsMutation": 22,
        "numQueriesCreated": 0,
        "numMutationsCreated": 22
      }
    },
    {
      "name": "Amazon CloudSearch",
      "report": {
        "warnings": [],
        "numOps": 24,
        "numOpsQuery": 0,
        "numOpsMutation": 24,
        "numQueriesCreated": 0,
        "numMutationsCreated": 24
      }
    },
    {
      "name": "Amazon CloudSearch Domain",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Container for the parameters to the <code>Search</code> request.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Container for the parameters to the <code>Suggest</code> request.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 3,
        "numOpsQuery": 2,
        "numOpsMutation": 1,
        "numQueriesCreated": 2,
        "numMutationsCreated": 1
      }
    },
    {
      "name": "AWS CloudTrail",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Returns the objects or data listed below if successful. Otherwise, returns an error.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Returns the objects or data listed below if successful. Otherwise, returns an error.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Returns the objects or data listed below if successful. Otherwise, returns an error.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Returns the objects or data listed below if successful. Otherwise, returns an error.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Returns the objects or data listed below if successful. Otherwise, returns an error.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 14,
        "numOpsQuery": 0,
        "numOpsMutation": 14,
        "numQueriesCreated": 0,
        "numMutationsCreated": 14
      }
    },
    {
      "name": "AWS CodeBuild",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 15,
        "numOpsQuery": 0,
        "numOpsMutation": 15,
        "numQueriesCreated": 0,
        "numMutationsCreated": 15
      }
    },
    {
      "name": "AWS CodeCommit",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#CreateBranch' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#UpdateDefaultBranch' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#UpdateRepositoryDescription' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#UpdateRepositoryName' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 35,
        "numOpsQuery": 0,
        "numOpsMutation": 35,
        "numQueriesCreated": 0,
        "numMutationsCreated": 31
      }
    },
    {
      "name": "AWS CodeDeploy",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#ContinueDeployment' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DeleteApplication' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DeleteDeploymentConfig' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DeregisterOnPremisesInstance' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#RegisterApplicationRevision' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#RegisterOnPremisesInstance' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#RemoveTagsFromOnPremisesInstances' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#SkipWaitTimeForInstanceTermination' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#UpdateApplication' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 40,
        "numOpsQuery": 0,
        "numOpsMutation": 40,
        "numQueriesCreated": 0,
        "numMutationsCreated": 30
      }
    },
    {
      "name": "AWS CodePipeline",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DeleteCustomActionType' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DeletePipeline' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DisableStageTransition' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#EnableStageTransition' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#PutJobFailureResult' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#PutJobSuccessResult' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#PutThirdPartyJobFailureResult' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#PutThirdPartyJobSuccessResult' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 27,
        "numOpsQuery": 0,
        "numOpsMutation": 27,
        "numQueriesCreated": 0,
        "numMutationsCreated": 19
      }
    },
    {
      "name": "AWS CodeStar",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 18,
        "numOpsQuery": 0,
        "numOpsMutation": 18,
        "numQueriesCreated": 0,
        "numMutationsCreated": 18
      }
    },
    {
      "name": "Amazon Cognito Identity",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DeleteIdentityPool' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#SetIdentityPoolRoles' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#UnlinkDeveloperIdentity' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#UnlinkIdentity' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 18,
        "numOpsQuery": 0,
        "numOpsMutation": 18,
        "numQueriesCreated": 0,
        "numMutationsCreated": 14
      }
    },
    {
      "name": "Amazon Cognito Identity Provider",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#AdminAddUserToGroup' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#AdminDeleteUser' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#AdminForgetDevice' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#AdminRemoveUserFromGroup' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DeleteGroup' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DeleteIdentityProvider' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DeleteResourceServer' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DeleteUser' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DeleteUserPool' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DeleteUserPoolClient' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#ForgetDevice' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Represents the response from the server for the request to add custom attributes.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Represents the response from the server for the request to confirm registration.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Represents the response received from the server for a request to delete user attributes.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Represents the response received from the server to disable the user as an administrator.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Represents the response from the server for the request to enable a user as an administrator.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Represents the response from the server to reset a user password as an administrator.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Represents the response from the server to set user settings as an administrator.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"The status response from the request to update the device, as an administrator.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Represents the response from the server for the request to update user attributes as an administrator.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"The global sign-out response, as an administrator.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"The response from the server to the change password request.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"The response from the server that results from a user's request to retrieve a forgotten password.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Represents the response from the server for the registration confirmation.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Represents the response from the server to delete user attributes.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"The response to the request to sign out all devices.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"The response from the server for a set user settings request.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"The response to the request to update the device status.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Represents the response from the server when you make a request to update the user pool.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"A container representing the response from the server from the request to verify user attributes.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 94,
        "numOpsQuery": 0,
        "numOpsMutation": 94,
        "numQueriesCreated": 0,
        "numMutationsCreated": 83
      }
    },
    {
      "name": "Amazon Cognito Sync",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /identitypools/{IdentityPoolId}/events' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"The input for the BulkPublish operation.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"A request to delete the specific dataset.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"A request for meta data about a dataset (creation date, number of records, size) by owner and dataset name.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"A request for usage information about the identity pool.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"A request for information about the usage of an identity pool.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"The input for the GetBulkPublishDetails operation.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"A request for a list of the configured Cognito Events\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"The input for the GetIdentityPoolConfiguration operation.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Request for a list of datasets for an identity.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"A request for usage information on an identity pool.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"A request for a list of records.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Response to a SubscribeToDataset request.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"A request to SubscribeToDatasetRequest.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Response to an UnsubscribeFromDataset request.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"A request to UnsubscribeFromDataset.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 17,
        "numOpsQuery": 8,
        "numOpsMutation": 9,
        "numQueriesCreated": 8,
        "numMutationsCreated": 8
      }
    },
    {
      "name": "Amazon Comprehend",
      "report": {
        "warnings": [],
        "numOps": 11,
        "numOpsQuery": 0,
        "numOpsMutation": 11,
        "numQueriesCreated": 0,
        "numMutationsCreated": 11
      }
    },
    {
      "name": "AWS Config",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DeleteConfigurationRecorder' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DeleteDeliveryChannel' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#PutConfigRule' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#PutConfigurationRecorder' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#PutDeliveryChannel' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#StartConfigurationRecorder' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#StopConfigurationRecorder' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"The output when you delete the evaluation results for the specified Config rule.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"The output when you start the evaluation for the specified Config rule.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 27,
        "numOpsQuery": 0,
        "numOpsMutation": 27,
        "numQueriesCreated": 0,
        "numMutationsCreated": 19
      }
    },
    {
      "name": "AWS Cost and Usage Report Service",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Response of PutReportDefinition\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 3,
        "numOpsQuery": 0,
        "numOpsMutation": 3,
        "numQueriesCreated": 0,
        "numMutationsCreated": 3
      }
    },
    {
      "name": "AWS Data Pipeline",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DeletePipeline' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#SetStatus' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Contains the output of ActivatePipeline.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Contains the output of AddTags.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Contains the output of DeactivatePipeline.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Contains the output of RemoveTags.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Contains the output of SetTaskStatus.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 19,
        "numOpsQuery": 0,
        "numOpsMutation": 19,
        "numQueriesCreated": 0,
        "numMutationsCreated": 17
      }
    },
    {
      "name": "Amazon DynamoDB Accelerator (DAX)",
      "report": {
        "warnings": [],
        "numOps": 21,
        "numOpsQuery": 0,
        "numOpsMutation": 21,
        "numQueriesCreated": 0,
        "numMutationsCreated": 21
      }
    },
    {
      "name": "AWS Device Farm",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"example\":{},\"properties\":{},\"description\":\"Represents the result of a delete device pool request.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"example\":{},\"properties\":{},\"description\":\"Represents the result of a delete project request.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"example\":{},\"properties\":{},\"description\":\"The response from the server when a request is made to delete the remote access session.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"example\":{},\"properties\":{},\"description\":\"Represents the result of a delete run request.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"example\":{},\"properties\":{},\"description\":\"Represents the result of a delete upload request.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"example\":{},\"properties\":{},\"description\":\"Represents the request sent to retrieve the account settings.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 49,
        "numOpsQuery": 0,
        "numOpsMutation": 49,
        "numQueriesCreated": 0,
        "numMutationsCreated": 49
      }
    },
    {
      "name": "AWS Direct Connect",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"The response received when TagResource is called.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"The response received when UntagResource is called.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 44,
        "numOpsQuery": 0,
        "numOpsMutation": 44,
        "numQueriesCreated": 0,
        "numMutationsCreated": 44
      }
    },
    {
      "name": "AWS Application Discovery Service",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 19,
        "numOpsQuery": 0,
        "numOpsMutation": 19,
        "numQueriesCreated": 0,
        "numMutationsCreated": 19
      }
    },
    {
      "name": "AWS Database Migration Service",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"example\":{},\"properties\":{},\"description\":\"<p/>\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"example\":{},\"properties\":{},\"description\":\"<p/>\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"example\":{},\"properties\":{},\"description\":\"<p/>\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"example\":{},\"properties\":{},\"description\":\"<p/>\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 42,
        "numOpsQuery": 0,
        "numOpsMutation": 42,
        "numQueriesCreated": 0,
        "numMutationsCreated": 42
      }
    },
    {
      "name": "AWS Directory Service",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"The result of a CreateConditinalForwarder request.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"The result of a DeleteConditionalForwarder request.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"The result of a DeregisterEventTopic request.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Contains the results of the <a>DisableRadius</a> operation.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Contains the results of the <a>DisableSso</a> operation.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Contains the results of the <a>EnableRadius</a> operation.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Contains the results of the <a>EnableSso</a> operation.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Contains the inputs for the <a>GetDirectoryLimits</a> operation.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"The result of a RegisterEventTopic request.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Contains the results of the <a>RestoreFromSnapshot</a> operation.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"The result of an UpdateConditionalForwarder request.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Contains the results of the <a>UpdateRadius</a> operation.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 40,
        "numOpsQuery": 0,
        "numOpsMutation": 40,
        "numQueriesCreated": 0,
        "numMutationsCreated": 40
      }
    },
    {
      "name": "Amazon DynamoDB",
      "report": {
        "warnings": [],
        "numOps": 13,
        "numOpsQuery": 0,
        "numOpsMutation": 13,
        "numQueriesCreated": 0,
        "numMutationsCreated": 13
      }
    },
    {
      "name": "Amazon DynamoDB",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#TagResource' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#UntagResource' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"example\":{},\"properties\":{},\"description\":\"Represents the input of a <code>DescribeLimits</code> operation. Has no content.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 29,
        "numOpsQuery": 0,
        "numOpsMutation": 29,
        "numQueriesCreated": 0,
        "numMutationsCreated": 27
      }
    },
    {
      "name": "Amazon Elastic Compute Cloud",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#AssignPrivateIpAddresses' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#AssociateDhcpOptions' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#AttachInternetGateway' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#AuthorizeSecurityGroupEgress' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#AuthorizeSecurityGroupIngress' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#CancelConversionTask' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#CancelExportTask' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#CreateNetworkAclEntry' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#CreatePlacementGroup' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#CreateTags' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#CreateVpnConnectionRoute' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DeleteCustomerGateway' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DeleteDhcpOptions' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DeleteInternetGateway' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DeleteKeyPair' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DeleteNetworkAcl' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DeleteNetworkAclEntry' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DeleteNetworkInterface' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DeletePlacementGroup' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DeleteRoute' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DeleteRouteTable' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DeleteSecurityGroup' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DeleteSnapshot' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DeleteSpotDatafeedSubscription' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DeleteSubnet' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DeleteTags' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DeleteVolume' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DeleteVpc' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DeleteVpnConnection' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DeleteVpnConnectionRoute' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DeleteVpnGateway' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DeregisterImage' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DetachInternetGateway' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DetachNetworkInterface' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DetachVpnGateway' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DisableVgwRoutePropagation' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DisassociateAddress' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DisassociateRouteTable' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#EnableVgwRoutePropagation' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#EnableVolumeIO' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#ModifyIdFormat' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#ModifyIdentityIdFormat' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#ModifyImageAttribute' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#ModifyInstanceAttribute' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#ModifyNetworkInterfaceAttribute' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#ModifySnapshotAttribute' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#ModifySubnetAttribute' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#ModifyVolumeAttribute' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#ModifyVpcAttribute' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#RebootInstances' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#ReleaseAddress' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#ReplaceNetworkAclEntry' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#ReplaceRoute' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#ReportInstanceStatus' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#ResetImageAttribute' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#ResetInstanceAttribute' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#ResetNetworkInterfaceAttribute' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#ResetSnapshotAttribute' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#RevokeSecurityGroupEgress' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#RevokeSecurityGroupIngress' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#UnassignPrivateIpAddresses' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 266,
        "numOpsQuery": 0,
        "numOpsMutation": 266,
        "numQueriesCreated": 0,
        "numMutationsCreated": 205
      }
    },
    {
      "name": "Amazon EC2 Container Registry",
      "report": {
        "warnings": [],
        "numOps": 22,
        "numOpsQuery": 0,
        "numOpsMutation": 22,
        "numQueriesCreated": 0,
        "numMutationsCreated": 22
      }
    },
    {
      "name": "Amazon EC2 Container Service",
      "report": {
        "warnings": [],
        "numOps": 31,
        "numOpsQuery": 0,
        "numOpsMutation": 31,
        "numQueriesCreated": 0,
        "numMutationsCreated": 31
      }
    },
    {
      "name": "Amazon ElastiCache",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DeleteCacheParameterGroup' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DeleteCacheSecurityGroup' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DeleteCacheSubnetGroup' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 40,
        "numOpsQuery": 0,
        "numOpsMutation": 40,
        "numQueriesCreated": 0,
        "numMutationsCreated": 37
      }
    },
    {
      "name": "AWS Elastic Beanstalk",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DeleteApplication' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DeleteApplicationVersion' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DeleteConfigurationTemplate' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DeleteEnvironmentConfiguration' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#RebuildEnvironment' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#RequestEnvironmentInfo' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#RestartAppServer' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#SwapEnvironmentCNAMEs' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#UpdateTagsForResource' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 43,
        "numOpsQuery": 0,
        "numOpsMutation": 43,
        "numQueriesCreated": 0,
        "numMutationsCreated": 33
      }
    },
    {
      "name": "Amazon Elastic File System",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /2015-02-01/create-tags/{FileSystemId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /2015-02-01/file-systems/{FileSystemId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /2015-02-01/mount-targets/{MountTargetId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /2015-02-01/delete-tags/{FileSystemId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /2015-02-01/mount-targets/{MountTargetId}/security-groups' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"example\":{},\"properties\":{},\"description\":\"<p/>\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"example\":{\"FileSystemId\":\"fs-01234567\"},\"properties\":{},\"description\":\"<p/>\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"example\":{\"MountTargetId\":\"fsmt-12340abc\"},\"properties\":{},\"description\":\"<p/>\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"example\":{\"FileSystemId\":\"fs-01234567\"},\"properties\":{},\"description\":\"<p/>\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 11,
        "numOpsQuery": 4,
        "numOpsMutation": 7,
        "numQueriesCreated": 4,
        "numMutationsCreated": 2
      }
    },
    {
      "name": "Elastic Load Balancing",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Contains the output of AddTags.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Contains the output for CreateAppCookieStickinessPolicy.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Contains the output for CreateLBCookieStickinessPolicy.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Contains the parameters for CreateLoadBalancerListener.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Contains the output of CreateLoadBalancerPolicy.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Contains the output of DeleteLoadBalancer.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Contains the output of DeleteLoadBalancerListeners.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Contains the output of DeleteLoadBalancerPolicy.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Contains the output of RemoveTags.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Contains the output of SetLoadBalancerListenerSSLCertificate.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Contains the output of SetLoadBalancerPoliciesForBackendServer.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Contains the output of SetLoadBalancePoliciesOfListener.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 29,
        "numOpsQuery": 0,
        "numOpsMutation": 29,
        "numQueriesCreated": 0,
        "numMutationsCreated": 29
      }
    },
    {
      "name": "Elastic Load Balancing",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 34,
        "numOpsQuery": 0,
        "numOpsMutation": 34,
        "numQueriesCreated": 0,
        "numMutationsCreated": 34
      }
    },
    {
      "name": "Amazon Elastic MapReduce",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#ModifyInstanceFleet' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#ModifyInstanceGroups' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#SetTerminationProtection' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#SetVisibleToAllUsers' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#TerminateJobFlows' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"This output indicates the result of adding tags to a resource.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"This output indicates the result of removing tags from a resource.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 27,
        "numOpsQuery": 0,
        "numOpsMutation": 27,
        "numQueriesCreated": 0,
        "numMutationsCreated": 22
      }
    },
    {
      "name": "Amazon Elastic Transcoder",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"The response body contains a JSON object. If the job is successfully canceled, the value of <code>Success</code> is <code>true</code>.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"The <code>CancelJobRequest</code> structure.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"The <code>ReadJobRequest</code> structure.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"The <code>ListPipelineRequest</code> structure.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"The <code>ListPresetsRequest</code> structure.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"The <code>DeletePipelineResponse</code> structure.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"The <code>DeletePipelineRequest</code> structure.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"The <code>ReadPipelineRequest</code> structure.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"The <code>DeletePresetResponse</code> structure.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"The <code>DeletePresetRequest</code> structure.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"The <code>ReadPresetRequest</code> structure.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"The <code>ListJobsByPipelineRequest</code> structure.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"The <code>ListJobsByStatusRequest</code> structure.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 17,
        "numOpsQuery": 7,
        "numOpsMutation": 10,
        "numQueriesCreated": 7,
        "numMutationsCreated": 10
      }
    },
    {
      "name": "Amazon Simple Email Service",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#CreateCustomVerificationEmailTemplate' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DeleteCustomVerificationEmailTemplate' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DeleteVerifiedEmailAddress' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#UpdateAccountSendingEnabled' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#UpdateConfigurationSetReputationMetricsEnabled' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#UpdateConfigurationSetSendingEnabled' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#UpdateCustomVerificationEmailTemplate' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#VerifyEmailAddress' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"An empty element returned on a successful request.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"An empty element returned on a successful request.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"An empty element returned on a successful request.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"An empty element returned on a successful request.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"An empty element returned on a successful request.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"An empty element returned on a successful request.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"An empty element returned on a successful request.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"An empty element returned on a successful request.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"An empty element returned on a successful request.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"An empty element returned on a successful request.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"An empty element returned on a successful request.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"An empty element returned on a successful request.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"An empty element returned on a successful request.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"An empty element returned on a successful request.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"An empty element returned on a successful request.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"example\":{},\"properties\":{},\"description\":\"Represents a request to return the metadata and receipt rules for the receipt rule set that is currently active. You use receipt rule sets to receive email with Amazon SES. For more information, see the <a href=\\\"http://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-concepts.html\\\">Amazon SES Developer Guide</a>.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Represents a request to list the IP address filters that exist under your AWS account. You use IP address filters when you receive email with Amazon SES. For more information, see the <a href=\\\"http://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-concepts.html\\\">Amazon SES Developer Guide</a>.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"An empty element returned on a successful request.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"An empty element returned on a successful request.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"An empty element returned on a successful request.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"An empty element returned on a successful request.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"An empty element returned on a successful request.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"An empty element returned on a successful request.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"An empty element returned on a successful request.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"An empty element returned on a successful request.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"An empty element returned on a successful request.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"An empty element returned on a successful request.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"An empty element returned on a successful request.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"An empty element returned on a successful request.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"An empty element returned on a successful request.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 70,
        "numOpsQuery": 0,
        "numOpsMutation": 70,
        "numQueriesCreated": 0,
        "numMutationsCreated": 62
      }
    },
    {
      "name": "AWS Marketplace Entitlement Service",
      "report": {
        "warnings": [],
        "numOps": 1,
        "numOpsQuery": 0,
        "numOpsMutation": 1,
        "numQueriesCreated": 0,
        "numMutationsCreated": 1
      }
    },
    {
      "name": "Amazon Elasticsearch Service",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /2015-01-01/tags' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /2015-01-01/es/role' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /2015-01-01/tags-removal' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Container for the parameters to the <code><a>DeleteElasticsearchDomain</a></code> operation. Specifies the name of the Elasticsearch domain that you want to delete.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Container for the parameters to the <code><a>DescribeElasticsearchDomain</a></code> operation.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\" Container for the parameters to the <code>DescribeElasticsearchDomainConfig</code> operation. Specifies the domain name for which you want configuration information.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\" Container for the parameters to <code> <a>DescribeElasticsearchInstanceTypeLimits</a> </code> operation. \"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\" Container for the parameters to the <code> <a>ListElasticsearchInstanceTypes</a> </code> operation. \"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"<p> Container for the parameters to the <code> <a>ListElasticsearchVersions</a> </code> operation. <p> Use <code> <a>MaxResults</a> </code> to control the maximum number of results to retrieve in a single call. </p> <p> Use <code> <a>NextToken</a> </code> in response to retrieve more results. If the received response does not contain a NextToken, then there are no more results to retrieve. </p> </p>\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Container for the parameters to the <code><a>ListTags</a></code> operation. Specify the <code>ARN</code> for the Elasticsearch domain to which the tags are attached that you want to view are attached.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 14,
        "numOpsQuery": 7,
        "numOpsMutation": 7,
        "numQueriesCreated": 7,
        "numMutationsCreated": 4
      }
    },
    {
      "name": "Amazon CloudWatch Events",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DisableRule' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#EnableRule' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#PutPermission' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#RemovePermission' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 15,
        "numOpsQuery": 0,
        "numOpsMutation": 15,
        "numQueriesCreated": 0,
        "numMutationsCreated": 10
      }
    },
    {
      "name": "Amazon Kinesis Firehose",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 7,
        "numOpsQuery": 0,
        "numOpsMutation": 7,
        "numQueriesCreated": 0,
        "numMutationsCreated": 7
      }
    },
    {
      "name": "Amazon GameLift",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DeleteAlias' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DeleteBuild' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DeleteFleet' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DeleteScalingPolicy' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 64,
        "numOpsQuery": 0,
        "numOpsMutation": 64,
        "numQueriesCreated": 0,
        "numMutationsCreated": 60
      }
    },
    {
      "name": "Amazon Glacier",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /{accountId}/vaults/{vaultName}/multipart-uploads/{uploadId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /{accountId}/vaults/{vaultName}/lock-policy' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /{accountId}/vaults/{vaultName}/tags?operation=add' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /{accountId}/vaults/{vaultName}/lock-policy/{lockId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /{accountId}/vaults/{vaultName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /{accountId}/vaults/{vaultName}/archives/{archiveId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /{accountId}/vaults/{vaultName}/access-policy' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /{accountId}/vaults/{vaultName}/access-policy' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /{accountId}/vaults/{vaultName}/notification-configuration' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /{accountId}/vaults/{vaultName}/notification-configuration' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /{accountId}/policies/data-retrieval' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /{accountId}/vaults/{vaultName}/tags?operation=remove' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"example\":{\"archiveId\":\"kKB7ymWJVpPSwhGP6ycSOAekp9ZYe_--zM_mw6k76ZFGEIWQX-ybtRDvc2VkPSDtfKmQrj0IRQLSGsNuDp-AJVlu2ccmDSyDUmZwKbwbpAdGATGDiB3hHO0bjbGehXTcApVud_wyDw\",\"checksum\":\"969fb39823836d81f0cc028195fcdbcbbe76cdde932d4646fa7de5f21e18aa67\",\"location\":\"/0123456789012/vaults/my-vault/archives/kKB7ymWJVpPSwhGP6ycSOAekp9ZYe_--zM_mw6k76ZFGEIWQX-ybtRDvc2VkPSDtfKmQrj0IRQLSGsNuDp-AJVlu2ccmDSyDUmZwKbwbpAdGATGDiB3hHO0bjbGehXTcApVud_wyDw\"},\"properties\":{},\"description\":\"<p>Contains the Amazon Glacier response to your request.</p> <p>For information about the underlying REST API, see <a href=\\\"http://docs.aws.amazon.com/amazonglacier/latest/dev/api-archive-post.html\\\">Upload Archive</a>. For conceptual information, see <a href=\\\"http://docs.aws.amazon.com/amazonglacier/latest/dev/working-with-archives.html\\\">Working with Archives in Amazon Glacier</a>.</p>\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"example\":{\"accountId\":\"-\",\"archiveSize\":\"3145728\",\"checksum\":\"9628195fcdbcbbe76cdde456d4646fa7de5f219fb39823836d81f0cc0e18aa67\",\"uploadId\":\"19gaRezEXAMPLES6Ry5YYdqthHOC_kGRCT03L9yetr220UmPtBYKk-OssZtLqyFu7sY1_lR7vgFuJV6NtcV5zpsJ\",\"vaultName\":\"my-vault\"},\"properties\":{},\"description\":\"Provides options to complete a multipart upload operation. This informs Amazon Glacier that all the archive parts have been uploaded and Amazon Glacier can now assemble the archive from the uploaded parts. After assembling and saving the archive to the vault, Amazon Glacier returns the URI path of the newly created archive resource.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"example\":{\"accountId\":\"-\",\"uploadId\":\"OW2fM5iVylEpFEMM9_HpKowRapC3vn5sSL39_396UW9zLFUWVrnRHaPjUJddQ5OxSHVXjYtrN47NBZ-khxOjyEXAMPLE\",\"vaultName\":\"examplevault\"},\"properties\":{},\"description\":\"Provides options for retrieving a list of parts of an archive that have been uploaded in a specific multipart upload.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"example\":{\"checksum\":\"c06f7cd4baacb087002a99a5f48bf953\"},\"properties\":{},\"description\":\"Contains the Amazon Glacier response to your request.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"example\":{\"accountId\":\"-\",\"vaultName\":\"examplevault\"},\"properties\":{},\"description\":\"The input values for <code>GetVaultLock</code>.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"example\":{\"lockId\":\"AE863rKkWZU53SLW5be4DUcW\"},\"properties\":{},\"description\":\"Contains the Amazon Glacier response to your request.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"example\":{\"location\":\"/111122223333/vaults/my-vault\"},\"properties\":{},\"description\":\"Contains the Amazon Glacier response to your request.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"example\":{\"accountId\":\"-\",\"vaultName\":\"my-vault\"},\"properties\":{},\"description\":\"Provides options to create a vault.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"example\":{\"accountId\":\"-\",\"vaultName\":\"my-vault\"},\"properties\":{},\"description\":\"Provides options for retrieving metadata for a specific vault in Amazon Glacier.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"example\":{\"accountId\":\"-\",\"vaultName\":\"example-vault\"},\"properties\":{},\"description\":\"Input for GetVaultAccessPolicy.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"example\":{\"accountId\":\"-\",\"vaultName\":\"my-vault\"},\"properties\":{},\"description\":\"Provides options for retrieving the notification configuration set on an Amazon Glacier vault.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"example\":{\"accountId\":\"-\",\"jobId\":\"zbxcm3Z_3z5UkoroF7SuZKrxgGoDc3RloGduS7Eg-RO47Yc6FxsdGBgf_Q2DK5Ejh18CnTS5XW4_XqlNHS61dsO4Cn\",\"vaultName\":\"my-vault\"},\"properties\":{},\"description\":\"Provides options for retrieving a job description.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"example\":{\"accountId\":\"-\"},\"properties\":{},\"description\":\"Input for GetDataRetrievalPolicy.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"example\":{\"accountId\":\"-\",\"jobId\":\"zbxcm3Z_3z5UkoroF7SuZKrxgGoDc3RloGduS7Eg-RO47Yc6FxsdGBgf_Q2DK5Ejh18CnTS5XW4_XqlNHS61dsO4CnMW\",\"range\":\"\",\"vaultName\":\"my-vaul\"},\"properties\":{},\"description\":\"Provides options for downloading output of an Amazon Glacier job.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"example\":{\"jobId\":\" HkF9p6o7yjhFx-K3CGl6fuSm6VzW9T7esGQfco8nUXVYwS0jlb5gq1JZ55yHgt5vP54ZShjoQzQVVh7vEXAMPLEjobID\",\"location\":\"/111122223333/vaults/examplevault/jobs/HkF9p6o7yjhFx-K3CGl6fuSm6VzW9T7esGQfco8nUXVYwS0jlb5gq1JZ55yHgt5vP54ZShjoQzQVVh7vEXAMPLEjobID\"},\"properties\":{},\"description\":\"Contains the Amazon Glacier response to your request.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"example\":{\"accountId\":\"-\",\"vaultName\":\"my-vault\"},\"properties\":{},\"description\":\"Provides options for retrieving a job list for an Amazon Glacier vault.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"example\":{\"location\":\"/111122223333/vaults/my-vault/multipart-uploads/19gaRezEXAMPLES6Ry5YYdqthHOC_kGRCT03L9yetr220UmPtBYKk-OssZtLqyFu7sY1_lR7vgFuJV6NtcV5zpsJ\",\"uploadId\":\"19gaRezEXAMPLES6Ry5YYdqthHOC_kGRCT03L9yetr220UmPtBYKk-OssZtLqyFu7sY1_lR7vgFuJV6NtcV5zpsJ\"},\"properties\":{},\"description\":\"The Amazon Glacier response to your request.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"example\":{\"accountId\":\"-\",\"partSize\":\"1048576\",\"vaultName\":\"my-vault\"},\"properties\":{},\"description\":\"Provides options for initiating a multipart upload to an Amazon Glacier vault.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"example\":{\"accountId\":\"-\",\"vaultName\":\"examplevault\"},\"properties\":{},\"description\":\"Provides options for retrieving list of in-progress multipart uploads for an Amazon Glacier vault.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"example\":{\"accountId\":\"-\"},\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"example\":{\"capacityId\":\"zSaq7NzHFQDANTfQkDen4V7z\"},\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"example\":{\"accountId\":\"-\"},\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"example\":{\"accountId\":\"-\",\"vaultName\":\"examplevault\"},\"properties\":{},\"description\":\"The input value for <code>ListTagsForVaultInput</code>.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"example\":{\"accountId\":\"-\",\"limit\":\"\",\"marker\":\"\"},\"properties\":{},\"description\":\"Provides options to retrieve the vault list owned by the calling user's account. The list provides metadata information for each vault.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"example\":{\"archiveId\":\"kKB7ymWJVpPSwhGP6ycSOAekp9ZYe_--zM_mw6k76ZFGEIWQX-ybtRDvc2VkPSDtfKmQrj0IRQLSGsNuDp-AJVlu2ccmDSyDUmZwKbwbpAdGATGDiB3hHO0bjbGehXTcApVud_wyDw\",\"checksum\":\"969fb39823836d81f0cc028195fcdbcbbe76cdde932d4646fa7de5f21e18aa67\",\"location\":\"/0123456789012/vaults/my-vault/archives/kKB7ymWJVpPSwhGP6ycSOAekp9ZYe_--zM_mw6k76ZFGEIWQX-ybtRDvc2VkPSDtfKmQrj0IRQLSGsNuDp-AJVlu2ccmDSyDUmZwKbwbpAdGATGDiB3hHO0bjbGehXTcApVud_wyDw\"},\"properties\":{},\"description\":\"<p>Contains the Amazon Glacier response to your request.</p> <p>For information about the underlying REST API, see <a href=\\\"http://docs.aws.amazon.com/amazonglacier/latest/dev/api-archive-post.html\\\">Upload Archive</a>. For conceptual information, see <a href=\\\"http://docs.aws.amazon.com/amazonglacier/latest/dev/working-with-archives.html\\\">Working with Archives in Amazon Glacier</a>.</p>\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 33,
        "numOpsQuery": 13,
        "numOpsMutation": 20,
        "numQueriesCreated": 13,
        "numMutationsCreated": 8
      }
    },
    {
      "name": "AWS Glue",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 75,
        "numOpsQuery": 0,
        "numOpsMutation": 75,
        "numQueriesCreated": 0,
        "numMutationsCreated": 75
      }
    },
    {
      "name": "AWS Greengrass",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 74,
        "numOpsQuery": 36,
        "numOpsMutation": 38,
        "numQueriesCreated": 36,
        "numMutationsCreated": 38
      }
    },
    {
      "name": "Amazon GuardDuty",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Domain information for the AWS API call.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 37,
        "numOpsQuery": 10,
        "numOpsMutation": 27,
        "numQueriesCreated": 10,
        "numMutationsCreated": 27
      }
    },
    {
      "name": "AWS Health APIs and Notifications",
      "report": {
        "warnings": [],
        "numOps": 6,
        "numOpsQuery": 0,
        "numOpsMutation": 6,
        "numQueriesCreated": 0,
        "numMutationsCreated": 6
      }
    },
    {
      "name": "AWS Identity and Access Management",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#AddRoleToInstanceProfile' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#AddUserToGroup' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#AttachGroupPolicy' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#AttachRolePolicy' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#AttachUserPolicy' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#ChangePassword' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#CreateAccountAlias' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DeactivateMFADevice' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DeleteAccessKey' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DeleteAccountAlias' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DeleteAccountPasswordPolicy' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DeleteGroup' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DeleteGroupPolicy' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DeleteInstanceProfile' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DeleteLoginProfile' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DeleteOpenIDConnectProvider' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DeletePolicy' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DeletePolicyVersion' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DeleteRole' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DeleteRolePolicy' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DeleteSAMLProvider' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DeleteSSHPublicKey' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DeleteServerCertificate' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DeleteServiceSpecificCredential' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DeleteSigningCertificate' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DeleteUser' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DeleteUserPolicy' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DeleteVirtualMFADevice' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DetachGroupPolicy' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DetachRolePolicy' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DetachUserPolicy' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#EnableMFADevice' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#PutGroupPolicy' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#PutRolePolicy' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#PutUserPolicy' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#RemoveClientIDFromOpenIDConnectProvider' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#RemoveRoleFromInstanceProfile' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#RemoveUserFromGroup' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#ResyncMFADevice' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#SetDefaultPolicyVersion' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#UpdateAccessKey' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#UpdateAccountPasswordPolicy' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#UpdateAssumeRolePolicy' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#UpdateGroup' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#UpdateLoginProfile' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#UpdateOpenIDConnectProviderThumbprint' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#UpdateSSHPublicKey' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#UpdateServerCertificate' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#UpdateServiceSpecificCredential' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#UpdateSigningCertificate' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#UpdateUser' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 122,
        "numOpsQuery": 0,
        "numOpsMutation": 122,
        "numQueriesCreated": 0,
        "numMutationsCreated": 70
      }
    },
    {
      "name": "AWS Import/Export",
      "report": {
        "warnings": [],
        "numOps": 6,
        "numOpsQuery": 0,
        "numOpsMutation": 6,
        "numQueriesCreated": 0,
        "numMutationsCreated": 6
      }
    },
    {
      "name": "Amazon Inspector",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DeleteAssessmentRun' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DeleteAssessmentTarget' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DeleteAssessmentTemplate' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#RegisterCrossAccountAccessRole' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#SetTagsForResource' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#StopAssessmentRun' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#SubscribeToEvent' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#UnsubscribeFromEvent' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#UpdateAssessmentTarget' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 33,
        "numOpsQuery": 0,
        "numOpsMutation": 33,
        "numQueriesCreated": 0,
        "numMutationsCreated": 24
      }
    },
    {
      "name": "AWS IoT Data Plane",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /topics/{topic}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"The input for the DeleteThingShadow operation.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"The input for the GetThingShadow operation.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 4,
        "numOpsQuery": 1,
        "numOpsMutation": 3,
        "numQueriesCreated": 1,
        "numMutationsCreated": 2
      }
    },
    {
      "name": "AWS IoT Jobs Data Plane",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 4,
        "numOpsQuery": 2,
        "numOpsMutation": 2,
        "numQueriesCreated": 2,
        "numMutationsCreated": 2
      }
    },
    {
      "name": "AWS IoT",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /target-policies/{policyName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /target-policies/{policyName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /principal-policies/{policyName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /principal-policies/{policyName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /policies/{policyName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /rules/{ruleName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /rules/{ruleName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /cacertificate/{caCertificateId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /certificates/{certificateId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /certificates/{certificateId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /policies/{policyName}/version/{policyVersionId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /v2LoggingLevel' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /v2LoggingLevel' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /rules/{ruleName}/disable' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /rules/{ruleName}/enable' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /loggingOptions' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /v2LoggingOptions' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"The output from the AttachThingPrincipal operation.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"The input for the AttachThingPrincipal operation.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"The output from the DetachThingPrincipal operation.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"The input for the DetachThingPrincipal operation.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"The input for the ListThingPrincipal operation.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"The input for the ListCertificates operation.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"The input for the CreateKeysAndCertificate operation.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"The input for the GetPolicy operation.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"The input for the ListPolicyVersions operation.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"The output of the DeleteThing operation.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"The input for the DeleteThing operation.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"The input for the DescribeThing operation.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"The output for the DeleteThingType operation.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"The input for the DeleteThingType operation.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"The input for the DescribeThingType operation.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"The input for the GetTopicRule operation.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"The output for the DeleteCACertificate operation.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Input for the DeleteCACertificate operation.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"The input for the DescribeCACertificate operation.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"The input for the DescribeCertificate operation.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"The input for the GetPolicyVersion operation.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"The output for the DeleteRegistrationCode operation.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"The input for the DeleteRegistrationCode operation.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"The input to the GetRegistrationCode operation.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"The output for the DeprecateThingType operation.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"The input for the DescribeEndpoint operation.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"The input for the GetLoggingOptions operation.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Input for the ListCACertificates operation.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"The input to the ListCertificatesByCA operation.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"The input to the ListOutgoingCertificates operation.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"The input for the ListPolicies operation.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"The input for the ListPolicyPrincipals operation.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"The input for the ListPrincipalPolicies operation.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"The input for the ListPrincipalThings operation.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"The input for the ListThingTypes operation.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"The input for the ListThings operation.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"The input for the ListTopicRules operation.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 114,
        "numOpsQuery": 51,
        "numOpsMutation": 63,
        "numQueriesCreated": 51,
        "numMutationsCreated": 46
      }
    },
    {
      "name": "Amazon Kinesis Video Streams Archived Media",
      "report": {
        "warnings": [],
        "numOps": 2,
        "numOpsQuery": 0,
        "numOpsMutation": 2,
        "numQueriesCreated": 0,
        "numMutationsCreated": 2
      }
    },
    {
      "name": "Amazon Kinesis Video Streams Media",
      "report": {
        "warnings": [],
        "numOps": 1,
        "numOpsQuery": 0,
        "numOpsMutation": 1,
        "numQueriesCreated": 0,
        "numMutationsCreated": 1
      }
    },
    {
      "name": "Amazon Kinesis",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#CreateStream' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DecreaseStreamRetentionPeriod' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DeleteStream' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#IncreaseStreamRetentionPeriod' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#MergeShards' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#RemoveTagsFromStream' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#SplitShard' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#StartStreamEncryption' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#StopStreamEncryption' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 22,
        "numOpsQuery": 0,
        "numOpsMutation": 22,
        "numQueriesCreated": 0,
        "numMutationsCreated": 12
      }
    },
    {
      "name": "Amazon Kinesis Video Streams",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 10,
        "numOpsQuery": 0,
        "numOpsMutation": 10,
        "numQueriesCreated": 0,
        "numMutationsCreated": 10
      }
    },
    {
      "name": "AWS Key Management Service",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#CreateAlias' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DeleteAlias' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DeleteImportedKeyMaterial' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DisableKey' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DisableKeyRotation' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#EnableKey' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#EnableKeyRotation' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#PutKeyPolicy' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#RetireGrant' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#RevokeGrant' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#TagResource' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#UntagResource' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#UpdateAlias' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#UpdateKeyDescription' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 35,
        "numOpsQuery": 0,
        "numOpsMutation": 35,
        "numQueriesCreated": 0,
        "numMutationsCreated": 21
      }
    },
    {
      "name": "AWS Lambda",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /2014-11-13/functions/{FunctionName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /2014-11-13/event-source-mappings/{UUID}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Upon success, it returns empty response. Otherwise, throws an exception.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 11,
        "numOpsQuery": 5,
        "numOpsMutation": 6,
        "numQueriesCreated": 5,
        "numMutationsCreated": 4
      }
    },
    {
      "name": "AWS Lambda",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /2015-03-31/functions/{FunctionName}/aliases/{Name}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /2015-03-31/functions/{FunctionName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /2017-10-31/functions/{FunctionName}/concurrency' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /2017-03-31/tags/{ARN}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /2017-03-31/tags/{ARN}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /2015-03-31/functions/{FunctionName}/policy/{StatementId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"example\":{\"FunctionName\":\"myFunction\",\"Qualifier\":\"1\"},\"properties\":{},\"description\":\"<p/>\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"example\":{\"FunctionName\":\"myFunction\",\"FunctionVersion\":\"1\",\"Marker\":\"\",\"MaxItems\":123},\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"<p/>\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"example\":{\"FunctionName\":\"myFunction\",\"Name\":\"myFunctionAlias\"},\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"example\":{\"UUID\":\"12345kxodurf3443\"},\"properties\":{},\"description\":\"<p/>\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"example\":{\"UUID\":\"123489-xxxxx-kdla8d89d7\"},\"properties\":{},\"description\":\"<p/>\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"example\":{\"FunctionName\":\"myFunction\",\"Qualifier\":\"1\"},\"properties\":{},\"description\":\"<p/>\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"example\":{},\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"example\":{\"FunctionName\":\"myFunction\",\"Qualifier\":\"1\"},\"properties\":{},\"description\":\"<p/>\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"example\":{\"Status\":123},\"properties\":{},\"description\":\"Upon success, it returns empty response. Otherwise, throws an exception.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"example\":{\"Marker\":\"\",\"MaxItems\":123},\"properties\":{},\"description\":\"<p/>\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"example\":{\"FunctionName\":\"myFunction\",\"Marker\":\"\",\"MaxItems\":123},\"properties\":{},\"description\":\"<p/>\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 30,
        "numOpsQuery": 11,
        "numOpsMutation": 19,
        "numQueriesCreated": 11,
        "numMutationsCreated": 13
      }
    },
    {
      "name": "Amazon Lex Model Building Service",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /bots/{name}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /bots/{botName}/aliases/{name}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /bots/{botName}/aliases/{aliasName}/channels/{name}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /bots/{name}/versions/{version}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /intents/{name}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /intents/{name}/versions/{version}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /slottypes/{name}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /slottypes/{name}/version/{version}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /bots/{botName}/utterances/{userId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"example\":{\"version\":\"$LATEST\",\"name\":\"DocOrderPizza\"},\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"example\":{\"name\":\"DocOrderPizza\",\"versionOrAlias\":\"$LATEST\"},\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"example\":{\"maxResults\":5,\"nextToken\":\"\"},\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"example\":{\"maxResults\":10,\"nextToken\":\"\"},\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"example\":{\"version\":\"$LATEST\",\"name\":\"DocPizzaCrustType\"},\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"example\":{\"maxResults\":10,\"nextToken\":\"\"},\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 34,
        "numOpsQuery": 18,
        "numOpsMutation": 16,
        "numQueriesCreated": 18,
        "numMutationsCreated": 7
      }
    },
    {
      "name": "Amazon Lightsail",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 71,
        "numOpsQuery": 0,
        "numOpsMutation": 71,
        "numQueriesCreated": 0,
        "numMutationsCreated": 71
      }
    },
    {
      "name": "Amazon CloudWatch Logs",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#CancelExportTask' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#CreateLogGroup' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#CreateLogStream' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DeleteDestination' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DeleteLogGroup' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DeleteLogStream' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DeleteMetricFilter' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DeleteResourcePolicy' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DeleteRetentionPolicy' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DeleteSubscriptionFilter' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DisassociateKmsKey' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#PutDestinationPolicy' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#PutMetricFilter' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#PutRetentionPolicy' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#PutSubscriptionFilter' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#TagLogGroup' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#UntagLogGroup' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 33,
        "numOpsQuery": 0,
        "numOpsMutation": 33,
        "numQueriesCreated": 0,
        "numMutationsCreated": 15
      }
    },
    {
      "name": "Amazon Machine Learning",
      "report": {
        "warnings": [],
        "numOps": 28,
        "numOpsQuery": 0,
        "numOpsMutation": 28,
        "numQueriesCreated": 0,
        "numMutationsCreated": 28
      }
    },
    {
      "name": "AWS Marketplace Commerce Analytics",
      "report": {
        "warnings": [],
        "numOps": 2,
        "numOpsQuery": 0,
        "numOpsMutation": 2,
        "numQueriesCreated": 0,
        "numMutationsCreated": 2
      }
    },
    {
      "name": "AWS Elemental MediaConvert",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 20,
        "numOpsQuery": 8,
        "numOpsMutation": 12,
        "numQueriesCreated": 8,
        "numMutationsCreated": 12
      }
    },
    {
      "name": "AWS Elemental MediaLive",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Placeholder documentation for ListChannelsRequest\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Placeholder documentation for ListInputsRequest\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Placeholder documentation for ListInputSecurityGroupsRequest\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Placeholder documentation for DeleteChannelRequest\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Placeholder documentation for DescribeChannelRequest\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Placeholder documentation for DeleteInputResponse\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Placeholder documentation for DeleteInputRequest\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Placeholder documentation for DescribeInputRequest\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Placeholder documentation for DeleteInputSecurityGroupResponse\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Placeholder documentation for DeleteInputSecurityGroupRequest\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Placeholder documentation for DescribeInputSecurityGroupRequest\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Placeholder documentation for StartChannelRequest\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Placeholder documentation for StopChannelRequest\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Placeholder documentation for AribSourceSettings\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Placeholder documentation for PassThroughSettings\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Placeholder documentation for AribDestinationSettings\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Placeholder documentation for EmbeddedDestinationSettings\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Placeholder documentation for EmbeddedPlusScte20DestinationSettings\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Placeholder documentation for Scte20PlusEmbeddedDestinationSettings\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Placeholder documentation for Scte27DestinationSettings\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Placeholder documentation for SmpteTtDestinationSettings\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Placeholder documentation for TeletextDestinationSettings\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Placeholder documentation for WebvttDestinationSettings\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Placeholder documentation for PassThroughSettings\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Placeholder documentation for AribDestinationSettings\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Placeholder documentation for EmbeddedDestinationSettings\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Placeholder documentation for EmbeddedPlusScte20DestinationSettings\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Placeholder documentation for Scte20PlusEmbeddedDestinationSettings\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Placeholder documentation for Scte27DestinationSettings\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Placeholder documentation for SmpteTtDestinationSettings\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Placeholder documentation for TeletextDestinationSettings\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Placeholder documentation for WebvttDestinationSettings\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Placeholder documentation for AribSourceSettings\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 14,
        "numOpsQuery": 6,
        "numOpsMutation": 8,
        "numQueriesCreated": 6,
        "numMutationsCreated": 8
      }
    },
    {
      "name": "AWS Elemental MediaPackage",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 11,
        "numOpsQuery": 4,
        "numOpsMutation": 7,
        "numQueriesCreated": 4,
        "numMutationsCreated": 7
      }
    },
    {
      "name": "AWS Elemental MediaStore Data Plane",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 5,
        "numOpsQuery": 2,
        "numOpsMutation": 3,
        "numQueriesCreated": 2,
        "numMutationsCreated": 3
      }
    },
    {
      "name": "AWS Elemental MediaStore",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 7,
        "numOpsQuery": 0,
        "numOpsMutation": 7,
        "numQueriesCreated": 0,
        "numMutationsCreated": 7
      }
    },
    {
      "name": "AWSMarketplace Metering",
      "report": {
        "warnings": [],
        "numOps": 3,
        "numOpsQuery": 0,
        "numOpsMutation": 3,
        "numQueriesCreated": 0,
        "numMutationsCreated": 3
      }
    },
    {
      "name": "AWS Mobile",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\" Request structure used to request projects list in AWS Mobile Hub. \"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\" Request structure used to request a project be deleted. \"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\" Request structure to request the details of a specific bundle. \"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\" Request structure used to request generation of custom SDK and tool packages required to integrate mobile web or app clients with backed AWS resources. \"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\" Request structure used to request details about a project. \"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\" Request structure used in requests to export project configuration details. \"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\" Request structure to request all available bundles. \"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 9,
        "numOpsQuery": 4,
        "numOpsMutation": 5,
        "numQueriesCreated": 4,
        "numMutationsCreated": 5
      }
    },
    {
      "name": "Amazon Mobile Analytics",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /2014-06-05/events' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 1,
        "numOpsQuery": 0,
        "numOpsMutation": 1,
        "numQueriesCreated": 0,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Amazon CloudWatch",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DisableAlarmActions' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#EnableAlarmActions' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#PutMetricAlarm' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#PutMetricData' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#SetAlarmState' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 15,
        "numOpsQuery": 0,
        "numOpsMutation": 15,
        "numQueriesCreated": 0,
        "numMutationsCreated": 9
      }
    },
    {
      "name": "AmazonMQ",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 17,
        "numOpsQuery": 8,
        "numOpsMutation": 9,
        "numQueriesCreated": 8,
        "numMutationsCreated": 9
      }
    },
    {
      "name": "Amazon Mechanical Turk",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 39,
        "numOpsQuery": 0,
        "numOpsMutation": 39,
        "numQueriesCreated": 0,
        "numMutationsCreated": 39
      }
    },
    {
      "name": "AWS OpsWorks",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#AssignVolume' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#AssociateElasticIp' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#AttachElasticLoadBalancer' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DeleteApp' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DeleteInstance' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DeleteLayer' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DeleteStack' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DeleteUserProfile' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DeregisterEcsCluster' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DeregisterElasticIp' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DeregisterInstance' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DeregisterRdsDbInstance' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DeregisterVolume' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DetachElasticLoadBalancer' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DisassociateElasticIp' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#RebootInstance' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#RegisterRdsDbInstance' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#SetLoadBasedAutoScaling' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#SetPermission' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#SetTimeBasedAutoScaling' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#StartInstance' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#StartStack' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#StopInstance' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#StopStack' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#TagResource' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#UnassignInstance' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#UnassignVolume' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#UntagResource' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#UpdateApp' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#UpdateElasticIp' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#UpdateInstance' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#UpdateLayer' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#UpdateMyUserProfile' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#UpdateRdsDbInstance' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#UpdateStack' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#UpdateUserProfile' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#UpdateVolume' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 73,
        "numOpsQuery": 0,
        "numOpsMutation": 73,
        "numQueriesCreated": 0,
        "numMutationsCreated": 35
      }
    },
    {
      "name": "AWS OpsWorks for Chef Automate",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 15,
        "numOpsQuery": 0,
        "numOpsMutation": 15,
        "numQueriesCreated": 0,
        "numMutationsCreated": 15
      }
    },
    {
      "name": "AWS Organizations",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#AttachPolicy' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DeleteOrganization' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DeleteOrganizationalUnit' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DeletePolicy' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DetachPolicy' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DisableAWSServiceAccess' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#EnableAWSServiceAccess' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#LeaveOrganization' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#MoveAccount' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#RemoveAccountFromOrganization' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"example\":{},\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 42,
        "numOpsQuery": 0,
        "numOpsMutation": 42,
        "numQueriesCreated": 0,
        "numMutationsCreated": 32
      }
    },
    {
      "name": "Amazon Polly",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"example\":{},\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"example\":{\"Name\":\"example\"},\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"example\":{\"Name\":\"\"},\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"example\":{},\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"example\":{\"LanguageCode\":\"en-GB\"},\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"example\":{},\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 6,
        "numOpsQuery": 3,
        "numOpsMutation": 3,
        "numQueriesCreated": 3,
        "numMutationsCreated": 3
      }
    },
    {
      "name": "AWS Price List Service",
      "report": {
        "warnings": [],
        "numOps": 3,
        "numOpsQuery": 0,
        "numOpsMutation": 3,
        "numQueriesCreated": 0,
        "numMutationsCreated": 3
      }
    },
    {
      "name": "Amazon Relational Database Service",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#AddTagsToResource' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DeleteDBClusterParameterGroup' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DeleteDBParameterGroup' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DeleteDBSecurityGroup' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DeleteDBSubnetGroup' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DeleteOptionGroup' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#RemoveRoleFromDBCluster' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#RemoveTagsFromResource' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"<p/>\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 91,
        "numOpsQuery": 0,
        "numOpsMutation": 91,
        "numQueriesCreated": 0,
        "numMutationsCreated": 82
      }
    },
    {
      "name": "Amazon Redshift",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#CreateTags' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DeleteClusterParameterGroup' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DeleteClusterSecurityGroup' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DeleteClusterSubnetGroup' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DeleteEventSubscription' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DeleteHsmClientCertificate' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DeleteHsmConfiguration' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DeleteSnapshotCopyGrant' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DeleteTags' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 63,
        "numOpsQuery": 0,
        "numOpsMutation": 63,
        "numQueriesCreated": 0,
        "numMutationsCreated": 54
      }
    },
    {
      "name": "Amazon Rekognition",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 33,
        "numOpsQuery": 0,
        "numOpsMutation": 33,
        "numQueriesCreated": 0,
        "numMutationsCreated": 33
      }
    },
    {
      "name": "AWS Resource Groups",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 11,
        "numOpsQuery": 5,
        "numOpsMutation": 6,
        "numQueriesCreated": 5,
        "numMutationsCreated": 6
      }
    },
    {
      "name": "AWS Resource Groups Tagging API",
      "report": {
        "warnings": [],
        "numOps": 5,
        "numOpsQuery": 0,
        "numOpsMutation": 5,
        "numQueriesCreated": 0,
        "numMutationsCreated": 5
      }
    },
    {
      "name": "Amazon Route 53 Domains",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 24,
        "numOpsQuery": 0,
        "numOpsMutation": 24,
        "numQueriesCreated": 0,
        "numMutationsCreated": 24
      }
    },
    {
      "name": "Amazon Lex Runtime Service",
      "report": {
        "warnings": [],
        "numOps": 2,
        "numOpsQuery": 0,
        "numOpsMutation": 2,
        "numQueriesCreated": 0,
        "numMutationsCreated": 2
      }
    },
    {
      "name": "Amazon SageMaker Runtime",
      "report": {
        "warnings": [],
        "numOps": 1,
        "numOpsQuery": 0,
        "numOpsMutation": 1,
        "numQueriesCreated": 0,
        "numMutationsCreated": 1
      }
    },
    {
      "name": "Amazon SageMaker Service",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DeleteEndpoint' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DeleteEndpointConfig' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DeleteModel' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DeleteNotebookInstance' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#StartNotebookInstance' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#StopNotebookInstance' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#StopTrainingJob' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 29,
        "numOpsQuery": 0,
        "numOpsMutation": 29,
        "numQueriesCreated": 0,
        "numMutationsCreated": 22
      }
    },
    {
      "name": "Amazon SimpleDB",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#BatchPutAttributes' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#CreateDomain' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DeleteAttributes' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DeleteDomain' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#PutAttributes' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 10,
        "numOpsQuery": 0,
        "numOpsMutation": 10,
        "numQueriesCreated": 0,
        "numMutationsCreated": 4
      }
    },
    {
      "name": "AWSServerlessApplicationRepository",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 8,
        "numOpsQuery": 4,
        "numOpsMutation": 4,
        "numQueriesCreated": 4,
        "numMutationsCreated": 4
      }
    },
    {
      "name": "AWS Service Catalog",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 53,
        "numOpsQuery": 0,
        "numOpsMutation": 53,
        "numQueriesCreated": 0,
        "numMutationsCreated": 53
      }
    },
    {
      "name": "Amazon Route 53 Auto Naming",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 17,
        "numOpsQuery": 0,
        "numOpsMutation": 17,
        "numQueriesCreated": 0,
        "numMutationsCreated": 17
      }
    },
    {
      "name": "AWS Shield",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 10,
        "numOpsQuery": 0,
        "numOpsMutation": 10,
        "numQueriesCreated": 0,
        "numMutationsCreated": 10
      }
    },
    {
      "name": "AWS Server Migration Service",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 11,
        "numOpsQuery": 0,
        "numOpsMutation": 11,
        "numQueriesCreated": 0,
        "numMutationsCreated": 11
      }
    },
    {
      "name": "Amazon Import/Export Snowball",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"example\":{},\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 17,
        "numOpsQuery": 0,
        "numOpsMutation": 17,
        "numQueriesCreated": 0,
        "numMutationsCreated": 17
      }
    },
    {
      "name": "Amazon Simple Notification Service",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DeleteEndpoint' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DeletePlatformApplication' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DeleteTopic' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#RemovePermission' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#SetEndpointAttributes' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#SetPlatformApplicationAttributes' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#SetSubscriptionAttributes' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#SetTopicAttributes' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#Unsubscribe' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"The response for the OptInPhoneNumber action.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"The response for the SetSMSAttributes action.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 30,
        "numOpsQuery": 0,
        "numOpsMutation": 30,
        "numQueriesCreated": 0,
        "numMutationsCreated": 20
      }
    },
    {
      "name": "Amazon Simple Queue Service",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#ChangeMessageVisibility' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DeleteMessage' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DeleteQueue' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#PurgeQueue' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#RemovePermission' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#SetQueueAttributes' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#TagQueue' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#UntagQueue' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 20,
        "numOpsQuery": 0,
        "numOpsMutation": 20,
        "numQueriesCreated": 0,
        "numMutationsCreated": 11
      }
    },
    {
      "name": "Amazon Simple Systems Manager (SSM)",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{},\"description\":\"Whether or not the command was successfully canceled. There is no guarantee that a request can be canceled.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 97,
        "numOpsQuery": 0,
        "numOpsMutation": 97,
        "numQueriesCreated": 0,
        "numMutationsCreated": 97
      }
    },
    {
      "name": "AWS Step Functions",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 19,
        "numOpsQuery": 0,
        "numOpsMutation": 19,
        "numQueriesCreated": 0,
        "numMutationsCreated": 19
      }
    },
    {
      "name": "AWS Storage Gateway",
      "report": {
        "warnings": [],
        "numOps": 63,
        "numOpsQuery": 0,
        "numOpsMutation": 63,
        "numQueriesCreated": 0,
        "numMutationsCreated": 63
      }
    },
    {
      "name": "Amazon DynamoDB Streams",
      "report": {
        "warnings": [],
        "numOps": 4,
        "numOpsQuery": 0,
        "numOpsMutation": 4,
        "numQueriesCreated": 0,
        "numMutationsCreated": 4
      }
    },
    {
      "name": "AWS Security Token Service",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"example\":{},\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 7,
        "numOpsQuery": 0,
        "numOpsMutation": 7,
        "numQueriesCreated": 0,
        "numMutationsCreated": 7
      }
    },
    {
      "name": "AWS Support",
      "report": {
        "warnings": [],
        "numOps": 14,
        "numOpsQuery": 0,
        "numOpsMutation": 14,
        "numQueriesCreated": 0,
        "numMutationsCreated": 14
      }
    },
    {
      "name": "Amazon Simple Workflow Service",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DeprecateActivityType' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DeprecateDomain' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#DeprecateWorkflowType' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#RegisterActivityType' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#RegisterDomain' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#RegisterWorkflowType' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#RequestCancelWorkflowExecution' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#RespondActivityTaskCanceled' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#RespondActivityTaskCompleted' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#RespondActivityTaskFailed' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#RespondDecisionTaskCompleted' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#SignalWorkflowExecution' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /#TerminateWorkflowExecution' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 31,
        "numOpsQuery": 0,
        "numOpsMutation": 31,
        "numQueriesCreated": 0,
        "numMutationsCreated": 18
      }
    },
    {
      "name": "Amazon Translate",
      "report": {
        "warnings": [],
        "numOps": 1,
        "numOpsQuery": 0,
        "numOpsMutation": 1,
        "numQueriesCreated": 0,
        "numMutationsCreated": 1
      }
    },
    {
      "name": "AWS WAF Regional",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"example\":{},\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 70,
        "numOpsQuery": 0,
        "numOpsMutation": 70,
        "numQueriesCreated": 0,
        "numMutationsCreated": 70
      }
    },
    {
      "name": "AWS WAF",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"example\":{},\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 66,
        "numOpsQuery": 0,
        "numOpsMutation": 66,
        "numQueriesCreated": 0,
        "numMutationsCreated": 66
      }
    },
    {
      "name": "Amazon WorkDocs",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /api/v1/documents/{DocumentId}/versions/{VersionId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /api/v1/users/{UserId}/activation' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /api/v1/resources/{ResourceId}/permissions' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /api/v1/documents/{DocumentId}/versions/{VersionId}/comment/{CommentId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /api/v1/documents/{DocumentId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /api/v1/folders/{FolderId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /api/v1/folders/{FolderId}/contents' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /api/v1/organizations/{OrganizationId}/subscriptions/{SubscriptionId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /api/v1/users/{UserId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /api/v1/resources/{ResourceId}/permissions/{PrincipalId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 36,
        "numOpsQuery": 15,
        "numOpsMutation": 21,
        "numQueriesCreated": 15,
        "numMutationsCreated": 11
      }
    },
    {
      "name": "Amazon WorkMail",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 28,
        "numOpsQuery": 0,
        "numOpsMutation": 28,
        "numQueriesCreated": 0,
        "numMutationsCreated": 28
      }
    },
    {
      "name": "Amazon WorkSpaces",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 14,
        "numOpsQuery": 0,
        "numOpsMutation": 14,
        "numQueriesCreated": 0,
        "numMutationsCreated": 14
      }
    },
    {
      "name": "AWS X-Ray",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\",\"properties\":{}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 6,
        "numOpsQuery": 0,
        "numOpsMutation": 6,
        "numQueriesCreated": 0,
        "numMutationsCreated": 6
      }
    },
    {
      "name": "APIMATIC API Transformer",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 1,
        "numOpsQuery": 0,
        "numOpsMutation": 1,
        "numQueriesCreated": 0,
        "numMutationsCreated": 1
      }
    },
    {
      "name": "APIs.guru",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/API\"},\"description\":\"List of API details.\\nIt is a JSON object with API IDs(`<provider>[:<service>]`) as keys.\\n\",\"example\":{\"googleapis.com:drive\":{\"added\":\"2015-02-22T20:00:45.000Z\",\"preferred\":\"v3\",\"versions\":{\"v2\":{\"added\":\"2015-02-22T20:00:45.000Z\",\"info\":{\"title\":\"Drive\",\"version\":\"v2\",\"x-apiClientRegistration\":{\"url\":\"https://console.developers.google.com\"},\"x-logo\":{\"url\":\"https://api.apis.guru/v2/cache/logo/https_www.gstatic.com_images_icons_material_product_2x_drive_32dp.png\"},\"x-origin\":{\"format\":\"google\",\"url\":\"https://www.googleapis.com/discovery/v1/apis/drive/v2/rest\",\"version\":\"v1\"},\"x-preferred\":false,\"x-providerName\":\"googleapis.com\",\"x-serviceName\":\"drive\"},\"swaggerUrl\":\"https://api.apis.guru/v2/specs/googleapis.com/drive/v2/swagger.json\",\"swaggerYamlUrl\":\"https://api.apis.guru/v2/specs/googleapis.com/drive/v2/swagger.yaml\",\"updated\":\"2016-06-17T00:21:44.000Z\"},\"v3\":{\"added\":\"2015-12-12T00:25:13.000Z\",\"info\":{\"title\":\"Drive\",\"version\":\"v3\",\"x-apiClientRegistration\":{\"url\":\"https://console.developers.google.com\"},\"x-logo\":{\"url\":\"https://api.apis.guru/v2/cache/logo/https_www.gstatic.com_images_icons_material_product_2x_drive_32dp.png\"},\"x-origin\":{\"format\":\"google\",\"url\":\"https://www.googleapis.com/discovery/v1/apis/drive/v3/rest\",\"version\":\"v1\"},\"x-preferred\":true,\"x-providerName\":\"googleapis.com\",\"x-serviceName\":\"drive\"},\"swaggerUrl\":\"https://api.apis.guru/v2/specs/googleapis.com/drive/v3/swagger.json\",\"swaggerYamlUrl\":\"https://api.apis.guru/v2/specs/googleapis.com/drive/v3/swagger.yaml\",\"updated\":\"2016-06-17T00:21:44.000Z\"}}}},\"minProperties\":1,\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 2,
        "numOpsQuery": 2,
        "numOpsMutation": 0,
        "numQueriesCreated": 2,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "2ch matome feeds APIs",
      "report": {
        "warnings": [],
        "numOps": 1,
        "numOpsQuery": 1,
        "numOpsMutation": 0,
        "numQueriesCreated": 1,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Certificate feeds APIs",
      "report": {
        "warnings": [],
        "numOps": 1,
        "numOpsQuery": 1,
        "numOpsMutation": 0,
        "numQueriesCreated": 1,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Cosine Similarity",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /cosine-similarity/vec-vec' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /cosine-similarity/vec-vec' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /cosine-similarity/vec-word' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /cosine-similarity/vec-word' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          }
        ],
        "numOps": 2,
        "numOpsQuery": 0,
        "numOpsMutation": 2,
        "numQueriesCreated": 0,
        "numMutationsCreated": 2
      }
    },
    {
      "name": "Design feeds APIs",
      "report": {
        "warnings": [],
        "numOps": 1,
        "numOpsQuery": 1,
        "numOpsMutation": 0,
        "numQueriesCreated": 1,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Document frequency APIs",
      "report": {
        "warnings": [],
        "numOps": 1,
        "numOpsQuery": 1,
        "numOpsMutation": 0,
        "numQueriesCreated": 1,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Game feeds APIs",
      "report": {
        "warnings": [],
        "numOps": 1,
        "numOpsQuery": 1,
        "numOpsMutation": 0,
        "numQueriesCreated": 1,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Japanese WordNet APIs",
      "report": {
        "warnings": [],
        "numOps": 1,
        "numOpsQuery": 1,
        "numOpsMutation": 0,
        "numQueriesCreated": 1,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Kmeans clustering by word2vec",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /kmeans-wordvector/cluster' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /kmeans-wordvector/cluster' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          }
        ],
        "numOps": 1,
        "numOpsQuery": 0,
        "numOpsMutation": 1,
        "numQueriesCreated": 0,
        "numMutationsCreated": 1
      }
    },
    {
      "name": "Kuromoji APIs",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /kuromoji-ipadic-neologd/tokenize' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /kuromoji-ipadic-neologd/tokenize' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /kuromoji-ipadic/tokenize' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /kuromoji-ipadic/tokenize' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          }
        ],
        "numOps": 4,
        "numOpsQuery": 2,
        "numOpsMutation": 2,
        "numQueriesCreated": 2,
        "numMutationsCreated": 2
      }
    },
    {
      "name": "Language Detection APIs",
      "report": {
        "warnings": [],
        "numOps": 2,
        "numOpsQuery": 2,
        "numOpsMutation": 0,
        "numQueriesCreated": 2,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "News feeds APIs",
      "report": {
        "warnings": [],
        "numOps": 1,
        "numOpsQuery": 1,
        "numOpsMutation": 0,
        "numQueriesCreated": 1,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Pioneer blog feeds APIs",
      "report": {
        "warnings": [],
        "numOps": 1,
        "numOpsQuery": 1,
        "numOpsMutation": 0,
        "numQueriesCreated": 1,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "RSS2JSON APIs",
      "report": {
        "warnings": [],
        "numOps": 1,
        "numOpsQuery": 1,
        "numOpsMutation": 0,
        "numQueriesCreated": 1,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "SentencePiece APIs (tweet)",
      "report": {
        "warnings": [],
        "numOps": 1,
        "numOpsQuery": 1,
        "numOpsMutation": 0,
        "numQueriesCreated": 1,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "SentencePiece APIs (wikipedia)",
      "report": {
        "warnings": [],
        "numOps": 2,
        "numOpsQuery": 2,
        "numOpsMutation": 0,
        "numQueriesCreated": 2,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Sentence separator APIs",
      "report": {
        "warnings": [],
        "numOps": 1,
        "numOpsQuery": 1,
        "numOpsMutation": 0,
        "numQueriesCreated": 1,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Sentence Similarity",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /sentence-similarity/eval' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /sentence-similarity/eval' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          }
        ],
        "numOps": 1,
        "numOpsQuery": 0,
        "numOpsMutation": 1,
        "numQueriesCreated": 0,
        "numMutationsCreated": 1
      }
    },
    {
      "name": "Sentiment APIs",
      "report": {
        "warnings": [],
        "numOps": 1,
        "numOpsQuery": 1,
        "numOpsMutation": 0,
        "numQueriesCreated": 1,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Sentiment APIs",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /sentiments/predict' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /sentiments/predict' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          }
        ],
        "numOps": 1,
        "numOpsQuery": 0,
        "numOpsMutation": 1,
        "numQueriesCreated": 0,
        "numMutationsCreated": 1
      }
    },
    {
      "name": "Synonym APIs",
      "report": {
        "warnings": [],
        "numOps": 1,
        "numOpsQuery": 1,
        "numOpsMutation": 0,
        "numQueriesCreated": 1,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Tech feeds APIs",
      "report": {
        "warnings": [],
        "numOps": 1,
        "numOpsQuery": 1,
        "numOpsMutation": 0,
        "numQueriesCreated": 1,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Text2Label by tfidf APIs",
      "report": {
        "warnings": [],
        "numOps": 1,
        "numOpsQuery": 1,
        "numOpsMutation": 0,
        "numQueriesCreated": 1,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Text2Label by word vector APIs",
      "report": {
        "warnings": [],
        "numOps": 1,
        "numOpsQuery": 1,
        "numOpsMutation": 0,
        "numQueriesCreated": 1,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Travel feeds APIs",
      "report": {
        "warnings": [],
        "numOps": 1,
        "numOpsQuery": 1,
        "numOpsMutation": 0,
        "numQueriesCreated": 1,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Tweet summarization APIs",
      "report": {
        "warnings": [],
        "numOps": 1,
        "numOpsQuery": 1,
        "numOpsMutation": 0,
        "numQueriesCreated": 1,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Twitter APIs",
      "report": {
        "warnings": [],
        "numOps": 3,
        "numOpsQuery": 3,
        "numOpsMutation": 0,
        "numQueriesCreated": 3,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Twitter APIs with sentiment by Apitore sentiment",
      "report": {
        "warnings": [],
        "numOps": 1,
        "numOpsQuery": 1,
        "numOpsMutation": 0,
        "numQueriesCreated": 1,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Twitter APIs with Word2Vec query expansion, and add sentiment by Apitore sentiment",
      "report": {
        "warnings": [],
        "numOps": 1,
        "numOpsQuery": 1,
        "numOpsMutation": 0,
        "numQueriesCreated": 1,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Twitter APIs with Word2Vec query expansion",
      "report": {
        "warnings": [],
        "numOps": 1,
        "numOpsQuery": 1,
        "numOpsMutation": 0,
        "numQueriesCreated": 1,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Url2Href APIs",
      "report": {
        "warnings": [],
        "numOps": 1,
        "numOpsQuery": 1,
        "numOpsMutation": 0,
        "numQueriesCreated": 1,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Url2Html APIs",
      "report": {
        "warnings": [],
        "numOps": 1,
        "numOpsQuery": 1,
        "numOpsMutation": 0,
        "numQueriesCreated": 1,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Url2Label by tfidf APIs",
      "report": {
        "warnings": [],
        "numOps": 1,
        "numOpsQuery": 1,
        "numOpsMutation": 0,
        "numQueriesCreated": 1,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Url2Label by word vector APIs",
      "report": {
        "warnings": [],
        "numOps": 1,
        "numOpsQuery": 1,
        "numOpsMutation": 0,
        "numQueriesCreated": 1,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Url2Src APIs",
      "report": {
        "warnings": [],
        "numOps": 1,
        "numOpsQuery": 1,
        "numOpsMutation": 0,
        "numQueriesCreated": 1,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Url2Text APIs",
      "report": {
        "warnings": [],
        "numOps": 1,
        "numOpsQuery": 1,
        "numOpsMutation": 0,
        "numQueriesCreated": 1,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Word2Vec APIs",
      "report": {
        "warnings": [],
        "numOps": 5,
        "numOpsQuery": 5,
        "numOpsMutation": 0,
        "numQueriesCreated": 5,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "WordNet APIs",
      "report": {
        "warnings": [],
        "numOps": 8,
        "numOpsQuery": 8,
        "numOpsMutation": 0,
        "numQueriesCreated": 8,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "WordNet hypernym APIs",
      "report": {
        "warnings": [],
        "numOps": 1,
        "numOpsQuery": 1,
        "numOpsMutation": 0,
        "numQueriesCreated": 1,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "WordNet hyponym APIs",
      "report": {
        "warnings": [],
        "numOps": 1,
        "numOpsQuery": 1,
        "numOpsMutation": 0,
        "numQueriesCreated": 1,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "WordNet Similarity APIs",
      "report": {
        "warnings": [],
        "numOps": 8,
        "numOpsQuery": 8,
        "numOpsMutation": 0,
        "numQueriesCreated": 8,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "WordNet synonym APIs",
      "report": {
        "warnings": [],
        "numOps": 1,
        "numOpsQuery": 1,
        "numOpsMutation": 0,
        "numQueriesCreated": 1,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "WordNet translation APIs",
      "report": {
        "warnings": [],
        "numOps": 1,
        "numOpsQuery": 1,
        "numOpsMutation": 0,
        "numQueriesCreated": 1,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Words to Vectors APIs",
      "report": {
        "warnings": [],
        "numOps": 1,
        "numOpsQuery": 1,
        "numOpsMutation": 0,
        "numQueriesCreated": 1,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "ART19 Content",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /classification_inclusions' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /classification_inclusions/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /classifications' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /classifications/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /credits' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /credits/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /episodes' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /episodes/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /episodes/{id}/next_sibling' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /episodes/{id}/previous_sibling' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /images' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /images/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /media_assets' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /media_assets/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /networks' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /networks/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /people' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /people/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /seasons' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /seasons/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /series' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /series/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 22,
        "numOpsQuery": 22,
        "numOpsMutation": 0,
        "numQueriesCreated": 0,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Auckland Museum",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /id/media/{path}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /id/{identifier}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /search/{index}/{operation}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /search/{index}/{operation}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /sparql' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /sparql' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 6,
        "numOpsQuery": 4,
        "numOpsMutation": 2,
        "numQueriesCreated": 0,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Authentiq Connect",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /authorize' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /client' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /client/{client_id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /{client_id}/iframe' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 9,
        "numOpsQuery": 5,
        "numOpsMutation": 4,
        "numQueriesCreated": 3,
        "numMutationsCreated": 2
      }
    },
    {
      "name": "Avaza",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /api/Inventory/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /api/Invoice/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 40,
        "numOpsQuery": 27,
        "numOpsMutation": 13,
        "numQueriesCreated": 25,
        "numMutationsCreated": 13
      }
    },
    {
      "name": "AdvisorManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/providers/Microsoft.Advisor/generateRecommendations' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /subscriptions/{subscriptionId}/providers/Microsoft.Advisor/generateRecommendations/{operationId}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '202'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /subscriptions/{subscriptionId}/providers/Microsoft.Advisor/generateRecommendations/{operationId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /{resourceUri}/providers/Microsoft.Advisor/recommendations/{recommendationId}/suppressions/{name}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"object\"},\"description\":\"The recommendation metadata.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The tags of the resource.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The tags of the resource.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 9,
        "numOpsQuery": 6,
        "numOpsMutation": 3,
        "numQueriesCreated": 5,
        "numMutationsCreated": 1
      }
    },
    {
      "name": "AdvisorManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/providers/Microsoft.Advisor/generateRecommendations' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /subscriptions/{subscriptionId}/providers/Microsoft.Advisor/generateRecommendations/{operationId}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '202'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /subscriptions/{subscriptionId}/providers/Microsoft.Advisor/generateRecommendations/{operationId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /{resourceUri}/providers/Microsoft.Advisor/recommendations/{recommendationId}/suppressions/{name}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"object\"},\"description\":\"The recommendation metadata.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 9,
        "numOpsQuery": 6,
        "numOpsMutation": 3,
        "numQueriesCreated": 5,
        "numMutationsCreated": 1
      }
    },
    {
      "name": "AdvisorManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/providers/Microsoft.Advisor/configurations' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/providers/Microsoft.Advisor/generateRecommendations' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /subscriptions/{subscriptionId}/providers/Microsoft.Advisor/generateRecommendations/{operationId}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '202'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /subscriptions/{subscriptionId}/providers/Microsoft.Advisor/generateRecommendations/{operationId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Advisor/configurations' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /{resourceUri}/providers/Microsoft.Advisor/recommendations/{recommendationId}/suppressions/{name}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"object\"},\"description\":\"The recommendation metadata.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 13,
        "numOpsQuery": 8,
        "numOpsMutation": 5,
        "numQueriesCreated": 7,
        "numMutationsCreated": 1
      }
    },
    {
      "name": "AzureAnalysisServices",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /subscriptions/{subscriptionId}/providers/Microsoft.AnalysisServices/locations/{location}/operationresults/{operationId}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /subscriptions/{subscriptionId}/providers/Microsoft.AnalysisServices/locations/{location}/operationresults/{operationId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /subscriptions/{subscriptionId}/providers/Microsoft.AnalysisServices/locations/{location}/operationstatuses/{operationId}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /subscriptions/{subscriptionId}/providers/Microsoft.AnalysisServices/locations/{location}/operationstatuses/{operationId}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AnalysisServices/servers/{serverName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AnalysisServices/servers/{serverName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AnalysisServices/servers/{serverName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AnalysisServices/servers/{serverName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AnalysisServices/servers/{serverName}/resume' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AnalysisServices/servers/{serverName}/resume' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AnalysisServices/servers/{serverName}/suspend' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AnalysisServices/servers/{serverName}/suspend' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Key-value pairs of additional resource provisioning properties.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Key-value pairs of additional resource provisioning properties.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 12,
        "numOpsQuery": 7,
        "numOpsMutation": 5,
        "numQueriesCreated": 6,
        "numMutationsCreated": 2
      }
    },
    {
      "name": "AzureAnalysisServices",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /subscriptions/{subscriptionId}/providers/Microsoft.AnalysisServices/locations/{location}/operationresults/{operationId}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /subscriptions/{subscriptionId}/providers/Microsoft.AnalysisServices/locations/{location}/operationresults/{operationId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /subscriptions/{subscriptionId}/providers/Microsoft.AnalysisServices/locations/{location}/operationstatuses/{operationId}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /subscriptions/{subscriptionId}/providers/Microsoft.AnalysisServices/locations/{location}/operationstatuses/{operationId}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AnalysisServices/servers/{serverName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AnalysisServices/servers/{serverName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AnalysisServices/servers/{serverName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AnalysisServices/servers/{serverName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AnalysisServices/servers/{serverName}/dissociateGateway' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AnalysisServices/servers/{serverName}/resume' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AnalysisServices/servers/{serverName}/resume' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AnalysisServices/servers/{serverName}/suspend' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AnalysisServices/servers/{serverName}/suspend' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Key-value pairs of additional resource provisioning properties.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Key-value pairs of additional resource provisioning properties.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 14,
        "numOpsQuery": 7,
        "numOpsMutation": 7,
        "numQueriesCreated": 6,
        "numMutationsCreated": 3
      }
    },
    {
      "name": "AzureAnalysisServices",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /subscriptions/{subscriptionId}/providers/Microsoft.AnalysisServices/locations/{location}/operationresults/{operationId}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /subscriptions/{subscriptionId}/providers/Microsoft.AnalysisServices/locations/{location}/operationresults/{operationId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /subscriptions/{subscriptionId}/providers/Microsoft.AnalysisServices/locations/{location}/operationstatuses/{operationId}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /subscriptions/{subscriptionId}/providers/Microsoft.AnalysisServices/locations/{location}/operationstatuses/{operationId}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AnalysisServices/servers/{serverName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AnalysisServices/servers/{serverName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AnalysisServices/servers/{serverName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AnalysisServices/servers/{serverName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AnalysisServices/servers/{serverName}/dissociateGateway' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AnalysisServices/servers/{serverName}/resume' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AnalysisServices/servers/{serverName}/resume' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AnalysisServices/servers/{serverName}/suspend' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AnalysisServices/servers/{serverName}/suspend' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Key-value pairs of additional resource provisioning properties.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Key-value pairs of additional resource provisioning properties.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 15,
        "numOpsQuery": 8,
        "numOpsMutation": 7,
        "numQueriesCreated": 7,
        "numMutationsCreated": 3
      }
    },
    {
      "name": "ApiManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '201'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '201'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}/policy' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}/policy' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}/policy' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '201'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}/policy' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/policy' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/policy' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/policy' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '201'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/policy' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 15,
        "numOpsQuery": 7,
        "numOpsMutation": 8,
        "numQueriesCreated": 5,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "ApiManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}/policies/{policyId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}/policies/{policyId}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}/policies/{policyId}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/policies/{policyId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/policies/{policyId}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/policies/{policyId}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/schemas/{schemaId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/schemas/{schemaId}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/schemas/{schemaId}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 21,
        "numOpsQuery": 11,
        "numOpsMutation": 10,
        "numQueriesCreated": 11,
        "numMutationsCreated": 5
      }
    },
    {
      "name": "ApiManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers/{authsid}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers/{authsid}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '201'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers/{authsid}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 4,
        "numOpsQuery": 2,
        "numOpsMutation": 2,
        "numQueriesCreated": 2,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "ApiManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers/{authsid}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers/{authsid}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers/{authsid}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          }
        ],
        "numOps": 4,
        "numOpsQuery": 2,
        "numOpsMutation": 2,
        "numQueriesCreated": 2,
        "numMutationsCreated": 1
      }
    },
    {
      "name": "ApiManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends/{backendid}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends/{backendid}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends/{backendid}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"description\":\"Header Parameter description.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"description\":\"Query Parameter description.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"description\":\"Header Parameter description.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"description\":\"Query Parameter description.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 4,
        "numOpsQuery": 2,
        "numOpsMutation": 2,
        "numQueriesCreated": 2,
        "numMutationsCreated": 1
      }
    },
    {
      "name": "ApiManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates/{certificateId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates/{certificateId}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '201'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates/{certificateId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 4,
        "numOpsQuery": 2,
        "numOpsMutation": 2,
        "numQueriesCreated": 2,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "ApiManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates/{certificateId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates/{certificateId}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates/{certificateId}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          }
        ],
        "numOps": 4,
        "numOpsQuery": 2,
        "numOpsMutation": 2,
        "numQueriesCreated": 2,
        "numMutationsCreated": 1
      }
    },
    {
      "name": "ApiManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backup' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backup' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/managedeployments' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/managedeployments' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/restore' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/restore' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"API Management service tags. A maximum of 10 tags can be provided for a resource, and each tag must have a key no greater than 128 characters (and a value no greater than 256 characters).\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Custom properties of the API Management service, like disabling TLS 1.0.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"API Management service tags. A maximum of 10 tags can be provided for a resource, and each tag must have a key no greater than 128 characters (and a value no greater than 256 characters).\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Custom properties of the API Management service, like disabling TLS 1.0.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 12,
        "numOpsQuery": 4,
        "numOpsMutation": 8,
        "numQueriesCreated": 4,
        "numMutationsCreated": 7
      }
    },
    {
      "name": "ApiManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/applynetworkconfigurationupdates' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/applynetworkconfigurationupdates' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backup' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backup' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/managedeployments' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/managedeployments' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/restore' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/restore' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/updatehostname' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/updatehostname' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Custom properties of the API Management service, like disabling TLS 1.0.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Custom properties of the API Management service, like disabling TLS 1.0.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 14,
        "numOpsQuery": 4,
        "numOpsMutation": 10,
        "numQueriesCreated": 4,
        "numMutationsCreated": 9
      }
    },
    {
      "name": "ApiManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/applynetworkconfigurationupdates' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/applynetworkconfigurationupdates' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backup' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backup' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/restore' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/restore' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/updatehostname' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/updatehostname' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The operation properties.\",\"type\":\"object\",\"x-ms-client-flatten\":true}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Custom properties of the API Management service. Setting `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TripleDes168` will disable the cipher TLS_RSA_WITH_3DES_EDE_CBC_SHA for all TLS(1.0, 1.1 and 1.2). Setting `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Protocols.Tls11` can be used to disable just TLS 1.1 and setting `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Protocols.Tls10` can be used to disable TLS 1.0 on an API Management service.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Custom properties of the API Management service. Setting `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TripleDes168` will disable the cipher TLS_RSA_WITH_3DES_EDE_CBC_SHA for all TLS(1.0, 1.1 and 1.2). Setting `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Protocols.Tls11` can be used to disable just TLS 1.1 and setting `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Protocols.Tls10` can be used to disable TLS 1.0 on an API Management service.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 13,
        "numOpsQuery": 4,
        "numOpsMutation": 9,
        "numQueriesCreated": 4,
        "numMutationsCreated": 8
      }
    },
    {
      "name": "ApiManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/templates/{templateName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/templates/{templateName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/templates/{templateName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          }
        ],
        "numOps": 4,
        "numOpsQuery": 2,
        "numOpsMutation": 2,
        "numQueriesCreated": 2,
        "numMutationsCreated": 1
      }
    },
    {
      "name": "ApiManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '201'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}/users/{uid}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}/users/{uid}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '201'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}/users/{uid}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 7,
        "numOpsQuery": 3,
        "numOpsMutation": 4,
        "numQueriesCreated": 3,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "ApiManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}/users/{uid}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}/users/{uid}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}/users/{uid}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 7,
        "numOpsQuery": 3,
        "numOpsMutation": 4,
        "numQueriesCreated": 3,
        "numMutationsCreated": 2
      }
    },
    {
      "name": "ApiManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/identityProviders/{identityProviderName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/identityProviders/{identityProviderName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '201'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/identityProviders/{identityProviderName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 4,
        "numOpsQuery": 2,
        "numOpsMutation": 2,
        "numQueriesCreated": 2,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "ApiManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/identityProviders/{identityProviderName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/identityProviders/{identityProviderName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/identityProviders/{identityProviderName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          }
        ],
        "numOps": 4,
        "numOpsQuery": 2,
        "numOpsMutation": 2,
        "numQueriesCreated": 2,
        "numMutationsCreated": 1
      }
    },
    {
      "name": "ApiManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers/{loggerid}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers/{loggerid}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '201'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers/{loggerid}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The name and SendRule connection string of the event hub.\",\"example\":{\"connectionString\":\"Endpoint=sb://contoso-ns.servicebus.windows.net/;SharedAccessKeyName=Sender;SharedAccessKey=...\",\"name\":\"apim\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 4,
        "numOpsQuery": 2,
        "numOpsMutation": 2,
        "numQueriesCreated": 2,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "ApiManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers/{loggerid}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers/{loggerid}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers/{loggerid}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The name and SendRule connection string of the event hub.\",\"example\":{\"connectionString\":\"Endpoint=sb://contoso-ns.servicebus.windows.net/;SharedAccessKeyName=Sender;SharedAccessKey=...\",\"name\":\"apim\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The name and SendRule connection string of the event hub.\",\"example\":{\"connectionString\":\"Endpoint=sb://contoso-ns.servicebus.windows.net/;SharedAccessKeyName=Sender;SharedAccessKey=...\",\"name\":\"apim\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 4,
        "numOpsQuery": 2,
        "numOpsMutation": 2,
        "numQueriesCreated": 2,
        "numMutationsCreated": 1
      }
    },
    {
      "name": "ApiManagementClient",
      "report": {
        "warnings": [],
        "numOps": 1,
        "numOpsQuery": 1,
        "numOpsMutation": 0,
        "numQueriesCreated": 1,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "ApiManagementClient",
      "report": {
        "warnings": [],
        "numOps": 2,
        "numOpsQuery": 2,
        "numOpsMutation": 0,
        "numQueriesCreated": 2,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "ApiManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders/{opid}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders/{opid}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '201'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders/{opid}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 4,
        "numOpsQuery": 2,
        "numOpsMutation": 2,
        "numQueriesCreated": 2,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "ApiManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders/{opid}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders/{opid}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders/{opid}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          }
        ],
        "numOps": 4,
        "numOpsQuery": 2,
        "numOpsMutation": 2,
        "numQueriesCreated": 2,
        "numMutationsCreated": 1
      }
    },
    {
      "name": "ApiManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '201'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/apis/{apiId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/apis/{apiId}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '201'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/apis/{apiId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/groups/{groupId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/groups/{groupId}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '201'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/groups/{groupId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/policy' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/policy' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/policy' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '201'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/policy' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 14,
        "numOpsQuery": 6,
        "numOpsMutation": 8,
        "numQueriesCreated": 5,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "ApiManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/apis/{apiId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/apis/{apiId}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/apis/{apiId}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/groups/{groupId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/groups/{groupId}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/groups/{groupId}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/policies/{policyId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/policies/{policyId}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/policies/{policyId}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 15,
        "numOpsQuery": 7,
        "numOpsMutation": 8,
        "numQueriesCreated": 7,
        "numMutationsCreated": 4
      }
    },
    {
      "name": "ApiManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties/{propId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties/{propId}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '201'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties/{propId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 4,
        "numOpsQuery": 2,
        "numOpsMutation": 2,
        "numQueriesCreated": 2,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "ApiManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties/{propId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties/{propId}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties/{propId}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          }
        ],
        "numOps": 4,
        "numOpsQuery": 2,
        "numOpsMutation": 2,
        "numQueriesCreated": 2,
        "numMutationsCreated": 1
      }
    },
    {
      "name": "ApiManagementClient",
      "report": {
        "warnings": [],
        "numOps": 2,
        "numOpsQuery": 2,
        "numOpsMutation": 0,
        "numQueriesCreated": 2,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "ApiManagementClient",
      "report": {
        "warnings": [],
        "numOps": 2,
        "numOpsQuery": 2,
        "numOpsMutation": 0,
        "numQueriesCreated": 2,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "ApiManagementClient",
      "report": {
        "warnings": [],
        "numOps": 1,
        "numOpsQuery": 1,
        "numOpsMutation": 0,
        "numQueriesCreated": 1,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "ApiManagementClient",
      "report": {
        "warnings": [],
        "numOps": 8,
        "numOpsQuery": 8,
        "numOpsMutation": 0,
        "numQueriesCreated": 8,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "ApiManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '201'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}/regeneratePrimaryKey' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}/regenerateSecondaryKey' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 6,
        "numOpsQuery": 2,
        "numOpsMutation": 4,
        "numQueriesCreated": 2,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "ApiManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}/regeneratePrimaryKey' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}/regenerateSecondaryKey' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 6,
        "numOpsQuery": 2,
        "numOpsMutation": 4,
        "numQueriesCreated": 2,
        "numMutationsCreated": 1
      }
    },
    {
      "name": "ApiManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/access/git/regeneratePrimaryKey' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/access/git/regenerateSecondaryKey' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/access/regeneratePrimaryKey' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/access/regenerateSecondaryKey' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/policy' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/policy' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/policy' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '201'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/policy' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 13,
        "numOpsQuery": 4,
        "numOpsMutation": 9,
        "numQueriesCreated": 3,
        "numMutationsCreated": 3
      }
    },
    {
      "name": "ApiManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/{accessName}/git/regeneratePrimaryKey' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/{accessName}/git/regenerateSecondaryKey' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/{accessName}/regeneratePrimaryKey' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/{accessName}/regenerateSecondaryKey' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/{configurationName}/deploy' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/{configurationName}/deploy' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/{configurationName}/save' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/{configurationName}/save' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/{configurationName}/validate' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/{configurationName}/validate' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 10,
        "numOpsQuery": 3,
        "numOpsMutation": 7,
        "numQueriesCreated": 3,
        "numMutationsCreated": 3
      }
    },
    {
      "name": "ApiManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '201'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 9,
        "numOpsQuery": 5,
        "numOpsMutation": 4,
        "numQueriesCreated": 5,
        "numMutationsCreated": 2
      }
    },
    {
      "name": "ApiManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 9,
        "numOpsQuery": 5,
        "numOpsMutation": 4,
        "numQueriesCreated": 5,
        "numMutationsCreated": 3
      }
    },
    {
      "name": "ApiManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '201'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '201'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers/{authsid}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers/{authsid}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '201'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers/{authsid}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends/{backendid}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends/{backendid}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '201'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends/{backendid}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates/{certificateId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates/{certificateId}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '201'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates/{certificateId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '201'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}/users/{uid}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}/users/{uid}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '201'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}/users/{uid}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/identityProviders/{identityProviderName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/identityProviders/{identityProviderName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '201'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/identityProviders/{identityProviderName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers/{loggerid}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers/{loggerid}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '201'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers/{loggerid}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders/{opid}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders/{opid}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '201'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders/{opid}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '201'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/apis/{apiId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/apis/{apiId}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '201'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/apis/{apiId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/groups/{groupId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/groups/{groupId}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '201'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/groups/{groupId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties/{propId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties/{propId}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '201'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties/{propId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '201'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}/regeneratePrimaryKey' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}/regenerateSecondaryKey' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/access/git/regeneratePrimaryKey' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/access/git/regenerateSecondaryKey' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/access/regeneratePrimaryKey' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/access/regenerateSecondaryKey' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '201'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The name and SendRule connection string of the event hub.\",\"example\":{\"connectionString\":\"Endpoint=sb://contoso-ns.servicebus.windows.net/;SharedAccessKeyName=Sender;SharedAccessKey=...\",\"name\":\"apim\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 84,
        "numOpsQuery": 42,
        "numOpsMutation": 42,
        "numQueriesCreated": 42,
        "numMutationsCreated": 4
      }
    },
    {
      "name": "ApiManagementClient",
      "report": {
        "warnings": [],
        "numOps": 2,
        "numOpsQuery": 2,
        "numOpsMutation": 0,
        "numQueriesCreated": 2,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "ApiManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/policies/{policyId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/policies/{policyId}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/policies/{policyId}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          }
        ],
        "numOps": 6,
        "numOpsQuery": 4,
        "numOpsMutation": 2,
        "numQueriesCreated": 4,
        "numMutationsCreated": 1
      }
    },
    {
      "name": "ApplicationInsightsManagementClient",
      "report": {
        "warnings": [],
        "numOps": 1,
        "numOpsQuery": 1,
        "numOpsMutation": 0,
        "numQueriesCreated": 1,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "ApplicationInsightsManagementClient",
      "report": {
        "warnings": [],
        "numOps": 4,
        "numOpsQuery": 2,
        "numOpsMutation": 2,
        "numQueriesCreated": 2,
        "numMutationsCreated": 2
      }
    },
    {
      "name": "ApplicationInsightsManagementClient",
      "report": {
        "warnings": [],
        "numOps": 5,
        "numOpsQuery": 2,
        "numOpsMutation": 3,
        "numQueriesCreated": 2,
        "numMutationsCreated": 3
      }
    },
    {
      "name": "ApplicationInsightsManagementClient",
      "report": {
        "warnings": [],
        "numOps": 3,
        "numOpsQuery": 2,
        "numOpsMutation": 1,
        "numQueriesCreated": 2,
        "numMutationsCreated": 1
      }
    },
    {
      "name": "ApplicationInsightsManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.insights/components/{resourceName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.insights/components/{resourceName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 5,
        "numOpsQuery": 3,
        "numOpsMutation": 2,
        "numQueriesCreated": 3,
        "numMutationsCreated": 1
      }
    },
    {
      "name": "ApplicationInsightsManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.insights/webtests/{webTestName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.insights/webtests/{webTestName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 5,
        "numOpsQuery": 3,
        "numOpsMutation": 2,
        "numQueriesCreated": 3,
        "numMutationsCreated": 1
      }
    },
    {
      "name": "AuthorizationManagementClient",
      "report": {
        "warnings": [],
        "numOps": 10,
        "numOpsQuery": 6,
        "numOpsMutation": 4,
        "numQueriesCreated": 6,
        "numMutationsCreated": 4
      }
    },
    {
      "name": "AuthorizationManagementClient",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The operation properties.\",\"type\":\"object\",\"x-ms-client-flatten\":true}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 10,
        "numOpsQuery": 8,
        "numOpsMutation": 2,
        "numQueriesCreated": 8,
        "numMutationsCreated": 2
      }
    },
    {
      "name": "BatchAI",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BatchAI/clusters/{clusterName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BatchAI/clusters/{clusterName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BatchAI/clusters/{clusterName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BatchAI/clusters/{clusterName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BatchAI/fileServers/{fileServerName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BatchAI/fileServers/{fileServerName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BatchAI/fileServers/{fileServerName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BatchAI/fileServers/{fileServerName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BatchAI/jobs/{jobName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BatchAI/jobs/{jobName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BatchAI/jobs/{jobName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BatchAI/jobs/{jobName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BatchAI/jobs/{jobName}/terminate' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BatchAI/jobs/{jobName}/terminate' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"title\":\"Properties of the operation.\",\"type\":\"object\",\"x-ms-client-flatten\":true}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The tags of the resource\",\"readOnly\":true,\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The tags of the resource\",\"readOnly\":true,\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The tags of the resource\",\"readOnly\":true,\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The user specified tags associated with the Cluster.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The user specified tags associated with the File Server.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The user specified tags associated with the job.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 20,
        "numOpsQuery": 10,
        "numOpsMutation": 10,
        "numQueriesCreated": 10,
        "numMutationsCreated": 6
      }
    },
    {
      "name": "BillingClient",
      "report": {
        "warnings": [],
        "numOps": 4,
        "numOpsQuery": 4,
        "numOpsMutation": 0,
        "numQueriesCreated": 4,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "BillingManagementClient",
      "report": {
        "warnings": [],
        "numOps": 6,
        "numOpsQuery": 6,
        "numOpsMutation": 0,
        "numQueriesCreated": 6,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "CdnManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '202'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '202'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/customDomains/{customDomainName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/customDomains/{customDomainName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/customDomains/{customDomainName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/customDomains/{customDomainName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/load' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/origins/{originName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '202'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/origins/{originName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '202'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/origins/{originName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/origins/{originName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/purge' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Profile tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Endpoint tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 25,
        "numOpsQuery": 10,
        "numOpsMutation": 15,
        "numQueriesCreated": 10,
        "numMutationsCreated": 10
      }
    },
    {
      "name": "CdnManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '202'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '202'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/customDomains/{customDomainName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/customDomains/{customDomainName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/customDomains/{customDomainName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/customDomains/{customDomainName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/load' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/origins/{originName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '202'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/origins/{originName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '202'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/origins/{originName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/origins/{originName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/purge' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Profile tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Endpoint tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 25,
        "numOpsQuery": 10,
        "numOpsMutation": 15,
        "numQueriesCreated": 10,
        "numMutationsCreated": 10
      }
    },
    {
      "name": "CdnManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '202'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '202'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/customDomains/{customDomainName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/customDomains/{customDomainName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/customDomains/{customDomainName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/customDomains/{customDomainName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/customDomains/{customDomainName}/disableCustomHttps' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/customDomains/{customDomainName}/disableCustomHttps' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/customDomains/{customDomainName}/enableCustomHttps' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/customDomains/{customDomainName}/enableCustomHttps' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/load' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/purge' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 30,
        "numOpsQuery": 11,
        "numOpsMutation": 19,
        "numQueriesCreated": 11,
        "numMutationsCreated": 12
      }
    },
    {
      "name": "CdnManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '202'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '202'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/customDomains/{customDomainName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/customDomains/{customDomainName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/customDomains/{customDomainName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/customDomains/{customDomainName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/customDomains/{customDomainName}/disableCustomHttps' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/customDomains/{customDomainName}/disableCustomHttps' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/customDomains/{customDomainName}/enableCustomHttps' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/customDomains/{customDomainName}/enableCustomHttps' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/load' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/load' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/purge' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/purge' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/start' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/start' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/stop' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/stop' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\",\"x-ms-mutability\":[\"read\",\"create\",\"update\"]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\",\"x-ms-mutability\":[\"read\",\"create\",\"update\"]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\",\"x-ms-mutability\":[\"read\",\"create\",\"update\"]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\",\"x-ms-mutability\":[\"read\",\"create\",\"update\"]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\",\"x-ms-mutability\":[\"read\",\"create\",\"update\"]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 31,
        "numOpsQuery": 11,
        "numOpsMutation": 20,
        "numQueriesCreated": 11,
        "numMutationsCreated": 13
      }
    },
    {
      "name": "CognitiveServicesManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CognitiveServices/accounts/{accountName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CognitiveServices/accounts/{accountName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CognitiveServices/accounts/{accountName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CognitiveServices/accounts/{accountName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Gets or sets a list of key value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"required empty proprties object. Must be an empty object, and must exist in the request.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Gets or sets a list of key value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 8,
        "numOpsQuery": 4,
        "numOpsMutation": 4,
        "numQueriesCreated": 4,
        "numMutationsCreated": 3
      }
    },
    {
      "name": "CognitiveServicesManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CognitiveServices/accounts/{accountName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CognitiveServices/accounts/{accountName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CognitiveServices/accounts/{accountName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CognitiveServices/accounts/{accountName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Additional properties.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Gets or sets a list of key value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Must exist in the request. Must be an empty object. Must not be null.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Gets or sets a list of key value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 10,
        "numOpsQuery": 5,
        "numOpsMutation": 5,
        "numQueriesCreated": 5,
        "numMutationsCreated": 4
      }
    },
    {
      "name": "DiskResourceProviderClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/disks/{diskName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/disks/{diskName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/disks/{diskName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/disks/{diskName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/disks/{diskName}/beginGetAccess' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/disks/{diskName}/beginGetAccess' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/disks/{diskName}/endGetAccess' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/disks/{diskName}/endGetAccess' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/snapshots/{snapshotName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/snapshots/{snapshotName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/snapshots/{snapshotName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/snapshots/{snapshotName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/snapshots/{snapshotName}/beginGetAccess' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/snapshots/{snapshotName}/beginGetAccess' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/snapshots/{snapshotName}/endGetAccess' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/snapshots/{snapshotName}/endGetAccess' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 14,
        "numOpsQuery": 6,
        "numOpsMutation": 8,
        "numQueriesCreated": 6,
        "numMutationsCreated": 8
      }
    },
    {
      "name": "DiskResourceProviderClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/disks/{diskName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/disks/{diskName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/disks/{diskName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/disks/{diskName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/disks/{diskName}/beginGetAccess' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/disks/{diskName}/beginGetAccess' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/disks/{diskName}/endGetAccess' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/disks/{diskName}/endGetAccess' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/snapshots/{snapshotName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/snapshots/{snapshotName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/snapshots/{snapshotName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/snapshots/{snapshotName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/snapshots/{snapshotName}/beginGetAccess' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/snapshots/{snapshotName}/beginGetAccess' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/snapshots/{snapshotName}/endGetAccess' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/snapshots/{snapshotName}/endGetAccess' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 14,
        "numOpsQuery": 6,
        "numOpsMutation": 8,
        "numQueriesCreated": 6,
        "numMutationsCreated": 8
      }
    },
    {
      "name": "RunCommandsClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/runCommand' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/runCommand' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Operation output data (raw JSON)\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 3,
        "numOpsQuery": 2,
        "numOpsMutation": 1,
        "numQueriesCreated": 2,
        "numMutationsCreated": 1
      }
    },
    {
      "name": "ComputeManagementClient",
      "report": {
        "warnings": [],
        "numOps": 1,
        "numOpsQuery": 1,
        "numOpsMutation": 0,
        "numQueriesCreated": 1,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "ComputeManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/availabilitySets/{availabilitySetName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/availabilitySets/{availabilitySetName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/deallocate' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/deallocate' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/delete' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/delete' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/manualupgrade' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/manualupgrade' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/poweroff' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/poweroff' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/reimage' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/reimage' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/restart' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/restart' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/start' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/start' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualmachines/{instanceId}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualmachines/{instanceId}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualmachines/{instanceId}/deallocate' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualmachines/{instanceId}/deallocate' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualmachines/{instanceId}/poweroff' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualmachines/{instanceId}/poweroff' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualmachines/{instanceId}/reimage' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualmachines/{instanceId}/reimage' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualmachines/{instanceId}/restart' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualmachines/{instanceId}/restart' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualmachines/{instanceId}/start' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualmachines/{instanceId}/start' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/capture' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/capture' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/deallocate' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/deallocate' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/extensions/{vmExtensionName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/extensions/{vmExtensionName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/extensions/{vmExtensionName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/extensions/{vmExtensionName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/powerOff' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/powerOff' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/redeploy' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/redeploy' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/restart' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/restart' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/start' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/start' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Specifies the tags that are assigned to the virtual machine. For more information about using tags, see [Using tags to organize your Azure resources](https://docs.microsoft.com/azure/azure-resource-manager/resource-group-using-tags.md).\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Specifies the tags that are assigned to the virtual machine. For more information about using tags, see [Using tags to organize your Azure resources](https://docs.microsoft.com/azure/azure-resource-manager/resource-group-using-tags.md).\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Json formatted protected settings for the extension.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Json formatted public settings for the extension.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Json formatted public settings for the extension.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Json formatted protected settings for the extension.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Json formatted public settings for the extension.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Json formatted public settings for the extension.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Operation output data (raw JSON)\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 54,
        "numOpsQuery": 26,
        "numOpsMutation": 28,
        "numQueriesCreated": 26,
        "numMutationsCreated": 28
      }
    },
    {
      "name": "ComputeManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/availabilitySets/{availabilitySetName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/availabilitySets/{availabilitySetName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/deallocate' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/deallocate' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/delete' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/delete' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/manualupgrade' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/manualupgrade' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/poweroff' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/poweroff' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/reimage' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/reimage' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/restart' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/restart' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/start' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/start' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualmachines/{instanceId}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualmachines/{instanceId}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualmachines/{instanceId}/deallocate' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualmachines/{instanceId}/deallocate' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualmachines/{instanceId}/poweroff' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualmachines/{instanceId}/poweroff' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualmachines/{instanceId}/reimage' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualmachines/{instanceId}/reimage' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualmachines/{instanceId}/restart' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualmachines/{instanceId}/restart' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualmachines/{instanceId}/start' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualmachines/{instanceId}/start' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/capture' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/capture' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/deallocate' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/deallocate' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/extensions/{vmExtensionName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/extensions/{vmExtensionName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/extensions/{vmExtensionName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/extensions/{vmExtensionName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/powerOff' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/powerOff' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/redeploy' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/redeploy' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/restart' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/restart' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/start' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/start' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Specifies the tags that are assigned to the virtual machine. For more information about using tags, see [Using tags to organize your Azure resources](https://docs.microsoft.com/azure/azure-resource-manager/resource-group-using-tags.md).\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Specifies the tags that are assigned to the virtual machine. For more information about using tags, see [Using tags to organize your Azure resources](https://docs.microsoft.com/azure/azure-resource-manager/resource-group-using-tags.md).\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Json formatted protected settings for the extension.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Json formatted public settings for the extension.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Json formatted public settings for the extension.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Json formatted protected settings for the extension.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Json formatted public settings for the extension.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Json formatted public settings for the extension.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Operation output data (raw JSON)\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 54,
        "numOpsQuery": 26,
        "numOpsMutation": 28,
        "numQueriesCreated": 26,
        "numMutationsCreated": 28
      }
    },
    {
      "name": "ComputeManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/availabilitySets/{availabilitySetName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/availabilitySets/{availabilitySetName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/images/{imageName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/images/{imageName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/images/{imageName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/images/{imageName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/deallocate' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/deallocate' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/delete' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/delete' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/manualupgrade' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/manualupgrade' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/poweroff' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/poweroff' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/reimage' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/reimage' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/reimageall' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/reimageall' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/restart' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/restart' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/start' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/start' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualmachines/{instanceId}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualmachines/{instanceId}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualmachines/{instanceId}/deallocate' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualmachines/{instanceId}/deallocate' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualmachines/{instanceId}/poweroff' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualmachines/{instanceId}/poweroff' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualmachines/{instanceId}/reimage' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualmachines/{instanceId}/reimage' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualmachines/{instanceId}/reimageall' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualmachines/{instanceId}/reimageall' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualmachines/{instanceId}/restart' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualmachines/{instanceId}/restart' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualmachines/{instanceId}/start' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualmachines/{instanceId}/start' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/capture' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/capture' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/convertToManagedDisks' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/convertToManagedDisks' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/deallocate' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/deallocate' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/extensions/{vmExtensionName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/extensions/{vmExtensionName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/extensions/{vmExtensionName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/extensions/{vmExtensionName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/powerOff' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/powerOff' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/redeploy' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/redeploy' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/restart' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/restart' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/start' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/start' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Specifies the tags that are assigned to the virtual machine. For more information about using tags, see [Using tags to organize your Azure resources](https://docs.microsoft.com/azure/azure-resource-manager/resource-group-using-tags.md).\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Specifies the tags that are assigned to the virtual machine. For more information about using tags, see [Using tags to organize your Azure resources](https://docs.microsoft.com/azure/azure-resource-manager/resource-group-using-tags.md).\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Json formatted public settings for the extension.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Json formatted public settings for the extension.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Json formatted public settings for the extension.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Json formatted public settings for the extension.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Operation output data (raw JSON)\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 62,
        "numOpsQuery": 29,
        "numOpsMutation": 33,
        "numQueriesCreated": 29,
        "numMutationsCreated": 33
      }
    },
    {
      "name": "ComputeManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/availabilitySets/{availabilitySetName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/availabilitySets/{availabilitySetName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/images/{imageName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/images/{imageName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/images/{imageName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/images/{imageName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/deallocate' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/deallocate' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/delete' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/delete' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/extensions/{vmssExtensionName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/extensions/{vmssExtensionName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/extensions/{vmssExtensionName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/extensions/{vmssExtensionName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/manualupgrade' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/manualupgrade' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/osRollingUpgrade' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/osRollingUpgrade' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/poweroff' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/poweroff' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/reimage' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/reimage' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/reimageall' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/reimageall' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/restart' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/restart' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/rollingUpgrades/cancel' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/rollingUpgrades/cancel' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/start' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/start' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualmachines/{instanceId}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualmachines/{instanceId}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualmachines/{instanceId}/deallocate' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualmachines/{instanceId}/deallocate' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualmachines/{instanceId}/poweroff' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualmachines/{instanceId}/poweroff' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualmachines/{instanceId}/reimage' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualmachines/{instanceId}/reimage' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualmachines/{instanceId}/reimageall' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualmachines/{instanceId}/reimageall' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualmachines/{instanceId}/restart' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualmachines/{instanceId}/restart' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualmachines/{instanceId}/start' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualmachines/{instanceId}/start' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/capture' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/capture' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/convertToManagedDisks' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/convertToManagedDisks' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/deallocate' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/deallocate' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/extensions/{vmExtensionName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/extensions/{vmExtensionName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/extensions/{vmExtensionName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/extensions/{vmExtensionName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/performMaintenance' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/performMaintenance' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/powerOff' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/powerOff' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/redeploy' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/redeploy' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/restart' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/restart' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/start' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/start' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Specifies the tags that are assigned to the virtual machine. For more information about using tags, see [Using tags to organize your Azure resources](https://docs.microsoft.com/azure/azure-resource-manager/resource-group-using-tags.md).\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Specifies the tags that are assigned to the virtual machine. For more information about using tags, see [Using tags to organize your Azure resources](https://docs.microsoft.com/azure/azure-resource-manager/resource-group-using-tags.md).\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Json formatted public settings for the extension.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Json formatted public settings for the extension.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Json formatted public settings for the extension.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Json formatted public settings for the extension.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Operation output data (raw JSON)\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 72,
        "numOpsQuery": 34,
        "numOpsMutation": 38,
        "numQueriesCreated": 34,
        "numMutationsCreated": 38
      }
    },
    {
      "name": "ComputeManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/availabilitySets/{availabilitySetName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/availabilitySets/{availabilitySetName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/images/{imageName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/images/{imageName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/images/{imageName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/images/{imageName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/deallocate' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/deallocate' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/delete' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/delete' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/extensions/{vmssExtensionName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/extensions/{vmssExtensionName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/extensions/{vmssExtensionName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/extensions/{vmssExtensionName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/manualupgrade' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/manualupgrade' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/osRollingUpgrade' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/osRollingUpgrade' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/poweroff' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/poweroff' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/reimage' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/reimage' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/reimageall' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/reimageall' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/restart' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/restart' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/rollingUpgrades/cancel' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/rollingUpgrades/cancel' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/start' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/start' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualmachines/{instanceId}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualmachines/{instanceId}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualmachines/{instanceId}/deallocate' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualmachines/{instanceId}/deallocate' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualmachines/{instanceId}/poweroff' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualmachines/{instanceId}/poweroff' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualmachines/{instanceId}/reimage' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualmachines/{instanceId}/reimage' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualmachines/{instanceId}/reimageall' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualmachines/{instanceId}/reimageall' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualmachines/{instanceId}/restart' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualmachines/{instanceId}/restart' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualmachines/{instanceId}/start' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualmachines/{instanceId}/start' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/capture' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/capture' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/convertToManagedDisks' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/convertToManagedDisks' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/deallocate' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/deallocate' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/extensions/{vmExtensionName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/extensions/{vmExtensionName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/extensions/{vmExtensionName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/extensions/{vmExtensionName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/performMaintenance' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/performMaintenance' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/powerOff' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/powerOff' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/redeploy' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/redeploy' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/restart' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/restart' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/start' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/start' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Specifies the tags that are assigned to the virtual machine. For more information about using tags, see [Using tags to organize your Azure resources](https://docs.microsoft.com/azure/azure-resource-manager/resource-group-using-tags.md).\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Specifies the tags that are assigned to the virtual machine. For more information about using tags, see [Using tags to organize your Azure resources](https://docs.microsoft.com/azure/azure-resource-manager/resource-group-using-tags.md).\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Json formatted public settings for the extension.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Json formatted public settings for the extension.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Json formatted public settings for the extension.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Json formatted public settings for the extension.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Operation output data (raw JSON)\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 71,
        "numOpsQuery": 33,
        "numOpsMutation": 38,
        "numQueriesCreated": 33,
        "numMutationsCreated": 38
      }
    },
    {
      "name": "ConsumptionManagementClient",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"readOnly\":true,\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The list of key/value pairs for the additional properties, in the format 'key':'value' where key = the field name, and value = the field value. By default this is not populated, unless it's specified in $expand.\",\"readOnly\":true,\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 2,
        "numOpsQuery": 2,
        "numOpsMutation": 0,
        "numQueriesCreated": 2,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "ConsumptionManagementClient",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"readOnly\":true,\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"readOnly\":true,\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"readOnly\":true,\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 4,
        "numOpsQuery": 4,
        "numOpsMutation": 0,
        "numQueriesCreated": 4,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "ConsumptionManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/providers/Microsoft.Consumption/budgets/{name}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/providers/Microsoft.Consumption/budgets/{name}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/providers/Microsoft.Consumption/budgets/{name}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/Notification\"},\"description\":\"Dictionary of notifications associated with the budget. Budget can have up to five notifications.\",\"maxItems\":5,\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/Notification\"},\"description\":\"Dictionary of notifications associated with the budget. Budget can have up to five notifications.\",\"maxItems\":5,\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 5,
        "numOpsQuery": 3,
        "numOpsMutation": 2,
        "numQueriesCreated": 3,
        "numMutationsCreated": 1
      }
    },
    {
      "name": "ContainerServiceClient",
      "report": {
        "warnings": [],
        "numOps": 1,
        "numOpsQuery": 1,
        "numOpsMutation": 0,
        "numQueriesCreated": 1,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "ContainerServiceClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{resourceName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '202'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{resourceName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{resourceName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{resourceName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 7,
        "numOpsQuery": 5,
        "numOpsMutation": 2,
        "numQueriesCreated": 5,
        "numMutationsCreated": 1
      }
    },
    {
      "name": "Cosmos DB",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'HEAD /providers/Microsoft.DocumentDB/databaseAccountNames/{accountName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '202'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/failoverPriorityChange' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '202'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/failoverPriorityChange' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/regenerateKey' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/regenerateKey' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 23,
        "numOpsQuery": 16,
        "numOpsMutation": 7,
        "numQueriesCreated": 16,
        "numMutationsCreated": 3
      }
    },
    {
      "name": "CustomerInsightsManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/authorizationPolicies/{authorizationPolicyName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/authorizationPolicies/{authorizationPolicyName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/connectors/{connectorName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/connectors/{connectorName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/connectors/{connectorName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/connectors/{connectorName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/connectors/{connectorName}/mappings/{mappingName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/connectors/{connectorName}/mappings/{mappingName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/connectors/{connectorName}/mappings/{mappingName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/connectors/{connectorName}/mappings/{mappingName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/interactions/{interactionName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/interactions/{interactionName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/kpi/{kpiName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/kpi/{kpiName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/kpi/{kpiName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/kpi/{kpiName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/kpi/{kpiName}/reprocess' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/links/{linkName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/links/{linkName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/links/{linkName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/links/{linkName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/profiles/{profileName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/profiles/{profileName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/profiles/{profileName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/profiles/{profileName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/relationshipLinks/{relationshipLinkName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/relationshipLinks/{relationshipLinkName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/relationshipLinks/{relationshipLinkName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/relationshipLinks/{relationshipLinkName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/relationships/{relationshipName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/relationships/{relationshipName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/relationships/{relationshipName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/relationships/{relationshipName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/roleAssignments/{assignmentName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/roleAssignments/{assignmentName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/roleAssignments/{assignmentName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/roleAssignments/{assignmentName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/views/{viewName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"object\"},\"description\":\"The connector properties.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"description\":\"The attributes for the Type.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Localized descriptions for the property.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Localized display names for the property.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"},\"description\":\"Any custom localized attributes for the Type.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Localized descriptions.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Localized display name.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Localized names of the enum member.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Localized description for the KPI.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Localized display name for the KPI.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The display name.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Localized descriptions for the Link.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Localized display name for the Link.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"description\":\"The attributes for the Type.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Localized descriptions for the property.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Localized display names for the property.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"},\"description\":\"Any custom localized attributes for the Type.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Localized descriptions.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Localized display name.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Localized descriptions for the Relationship Link.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Localized display name for the Relationship Link.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Localized descriptions for the Relationship.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Localized display name for the Relationship.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Localized description for the metadata.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Localized display names for the metadata.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Other metadata for the principal.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Localized display name for the view.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Localized display name for the widget type.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"object\"},\"description\":\"The connector properties.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"description\":\"The attributes for the Type.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Localized descriptions for the property.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Localized display names for the property.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"},\"description\":\"Any custom localized attributes for the Type.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Localized descriptions.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Localized display name.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Localized names of the enum member.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Localized description for the KPI.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Localized display name for the KPI.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The display name.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Localized descriptions for the Link.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Localized display name for the Link.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"description\":\"The attributes for the Type.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Localized descriptions for the property.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Localized display names for the property.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"},\"description\":\"Any custom localized attributes for the Type.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Localized descriptions.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Localized display name.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Localized descriptions for the Relationship Link.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Localized display name for the Relationship Link.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Localized descriptions for the Relationship.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Localized display name for the Relationship.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Localized description for the metadata.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Localized display names for the metadata.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Other metadata for the principal.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Localized display name for the view.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 58,
        "numOpsQuery": 29,
        "numOpsMutation": 29,
        "numQueriesCreated": 29,
        "numMutationsCreated": 18
      }
    },
    {
      "name": "CustomerInsightsManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/authorizationPolicies/{authorizationPolicyName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/authorizationPolicies/{authorizationPolicyName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/connectors/{connectorName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/connectors/{connectorName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/connectors/{connectorName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/connectors/{connectorName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/connectors/{connectorName}/mappings/{mappingName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/connectors/{connectorName}/mappings/{mappingName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/connectors/{connectorName}/mappings/{mappingName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/connectors/{connectorName}/mappings/{mappingName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/interactions/{interactionName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/interactions/{interactionName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/kpi/{kpiName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/kpi/{kpiName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/kpi/{kpiName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/kpi/{kpiName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/kpi/{kpiName}/reprocess' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/links/{linkName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/links/{linkName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/links/{linkName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/links/{linkName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/predictions/{predictionName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/predictions/{predictionName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/predictions/{predictionName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/predictions/{predictionName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/predictions/{predictionName}/modelStatus' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/profiles/{profileName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/profiles/{profileName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/profiles/{profileName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/profiles/{profileName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/relationshipLinks/{relationshipLinkName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/relationshipLinks/{relationshipLinkName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/relationshipLinks/{relationshipLinkName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/relationshipLinks/{relationshipLinkName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/relationships/{relationshipName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/relationships/{relationshipName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/relationships/{relationshipName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/relationships/{relationshipName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/roleAssignments/{assignmentName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/roleAssignments/{assignmentName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/roleAssignments/{assignmentName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/roleAssignments/{assignmentName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/views/{viewName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"object\"},\"description\":\"The connector properties.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"description\":\"The attributes for the Type.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Localized descriptions for the property.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Localized display names for the property.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"},\"description\":\"Any custom localized attributes for the Type.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Localized descriptions.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Localized display name.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Localized names of the enum member.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Localized description for the KPI.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Localized display name for the KPI.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The display name.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Localized descriptions for the Link.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Localized display name for the Link.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Description of the prediction.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Display name of the prediction.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Generated KPIs.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"description\":\"The attributes for the Type.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Localized descriptions for the property.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Localized display names for the property.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"},\"description\":\"Any custom localized attributes for the Type.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Localized descriptions.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Localized display name.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Localized descriptions for the Relationship Link.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Localized display name for the Relationship Link.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Localized descriptions for the Relationship.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Localized display name for the Relationship.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Localized description for the metadata.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Localized display names for the metadata.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Other metadata for the principal.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Localized display name for the view.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Localized display name for the widget type.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"object\"},\"description\":\"The connector properties.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"description\":\"The attributes for the Type.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Localized descriptions for the property.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Localized display names for the property.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"},\"description\":\"Any custom localized attributes for the Type.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Localized descriptions.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Localized display name.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Localized names of the enum member.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Localized description for the KPI.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Localized display name for the KPI.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The display name.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Localized descriptions for the Link.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Localized display name for the Link.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Description of the prediction.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Display name of the prediction.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Generated KPIs.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"description\":\"The attributes for the Type.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Localized descriptions for the property.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Localized display names for the property.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"},\"description\":\"Any custom localized attributes for the Type.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Localized descriptions.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Localized display name.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Localized descriptions for the Relationship Link.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Localized display name for the Relationship Link.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Localized descriptions for the Relationship.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Localized display name for the Relationship.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Localized description for the metadata.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Localized display names for the metadata.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Other metadata for the principal.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Localized display name for the view.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 65,
        "numOpsQuery": 31,
        "numOpsMutation": 34,
        "numQueriesCreated": 31,
        "numMutationsCreated": 21
      }
    },
    {
      "name": "Azure Data Catalog Resource Provider",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataCatalog/catalogs/{catalogName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataCatalog/catalogs/{catalogName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataCatalog/catalogs/{catalogName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataCatalog/catalogs/{catalogName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 5,
        "numOpsQuery": 3,
        "numOpsMutation": 2,
        "numQueriesCreated": 3,
        "numMutationsCreated": 1
      }
    },
    {
      "name": "DataLakeAnalyticsAccountManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeAnalytics/accounts/{accountName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeAnalytics/accounts/{accountName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeAnalytics/accounts/{accountName}/DataLakeStoreAccounts/{dataLakeStoreAccountName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeAnalytics/accounts/{accountName}/DataLakeStoreAccounts/{dataLakeStoreAccountName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeAnalytics/accounts/{accountName}/StorageAccounts/{storageAccountName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeAnalytics/accounts/{accountName}/StorageAccounts/{storageAccountName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeAnalytics/accounts/{name}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeAnalytics/accounts/{name}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"the value of custom properties.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"the value of custom properties.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 16,
        "numOpsQuery": 9,
        "numOpsMutation": 7,
        "numQueriesCreated": 9,
        "numMutationsCreated": 2
      }
    },
    {
      "name": "DataLakeAnalyticsAccountManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeAnalytics/accounts/{accountName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeAnalytics/accounts/{accountName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeAnalytics/accounts/{accountName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeAnalytics/accounts/{accountName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeAnalytics/accounts/{accountName}/DataLakeStoreAccounts/{dataLakeStoreAccountName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeAnalytics/accounts/{accountName}/DataLakeStoreAccounts/{dataLakeStoreAccountName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeAnalytics/accounts/{accountName}/StorageAccounts/{storageAccountName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeAnalytics/accounts/{accountName}/StorageAccounts/{storageAccountName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeAnalytics/accounts/{accountName}/computePolicies/{computePolicyName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeAnalytics/accounts/{accountName}/computePolicies/{computePolicyName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeAnalytics/accounts/{accountName}/firewallRules/{firewallRuleName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeAnalytics/accounts/{accountName}/firewallRules/{firewallRuleName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 27,
        "numOpsQuery": 15,
        "numOpsMutation": 12,
        "numQueriesCreated": 15,
        "numMutationsCreated": 5
      }
    },
    {
      "name": "DataLakeStoreAccountManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts/{accountName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts/{accountName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts/{accountName}/enableKeyVault' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts/{accountName}/firewallRules/{firewallRuleName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts/{accountName}/firewallRules/{firewallRuleName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts/{name}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts/{name}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"the value of custom properties.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"the value of custom properties.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 10,
        "numOpsQuery": 5,
        "numOpsMutation": 5,
        "numQueriesCreated": 5,
        "numMutationsCreated": 2
      }
    },
    {
      "name": "DataLakeStoreAccountManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts/{accountName}/enableKeyVault' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts/{accountName}/firewallRules/{firewallRuleName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts/{accountName}/firewallRules/{firewallRuleName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts/{accountName}/trustedIdProviders/{trustedIdProviderName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts/{accountName}/trustedIdProviders/{trustedIdProviderName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts/{name}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts/{name}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts/{name}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts/{name}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 17,
        "numOpsQuery": 9,
        "numOpsMutation": 8,
        "numQueriesCreated": 9,
        "numMutationsCreated": 4
      }
    },
    {
      "name": "Azure Data Migration Service Resource Provider",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.DataMigration/services/{serviceName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.DataMigration/services/{serviceName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.DataMigration/services/{serviceName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.DataMigration/services/{serviceName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.DataMigration/services/{serviceName}/projects/{projectName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.DataMigration/services/{serviceName}/projects/{projectName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.DataMigration/services/{serviceName}/projects/{projectName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.DataMigration/services/{serviceName}/projects/{projectName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.DataMigration/services/{serviceName}/projects/{projectName}/tasks/{taskName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.DataMigration/services/{serviceName}/projects/{projectName}/tasks/{taskName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.DataMigration/services/{serviceName}/projects/{projectName}/tasks/{taskName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.DataMigration/services/{serviceName}/projects/{projectName}/tasks/{taskName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.DataMigration/services/{serviceName}/start' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.DataMigration/services/{serviceName}/start' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.DataMigration/services/{serviceName}/stop' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.DataMigration/services/{serviceName}/stop' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\",\"x-ms-mutability\":[\"read\",\"create\",\"update\"]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\",\"x-ms-mutability\":[\"read\",\"create\",\"update\"]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\",\"x-ms-mutability\":[\"read\",\"create\",\"update\"]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\",\"x-ms-mutability\":[\"read\",\"create\",\"update\"]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 23,
        "numOpsQuery": 11,
        "numOpsMutation": 12,
        "numQueriesCreated": 11,
        "numMutationsCreated": 7
      }
    },
    {
      "name": "DevTestLabsClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/artifactsources/{name}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/artifactsources/{name}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/artifactsources/{name}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/artifactsources/{name}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/costinsights/{name}/refreshData' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/costinsights/{name}/refreshData' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/costs/{name}/refreshData' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/costs/{name}/refreshData' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/customimages/{name}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '202'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/customimages/{name}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/customimages/{name}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/customimages/{name}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/formulas/{name}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/formulas/{name}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/formulas/{name}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/formulas/{name}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/policysets/{policySetName}/policies/{name}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/policysets/{policySetName}/policies/{name}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/policysets/{policySetName}/policies/{name}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/policysets/{policySetName}/policies/{name}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/schedules/{name}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '202'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/schedules/{name}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/schedules/{name}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/schedules/{name}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/schedules/{name}/execute' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/schedules/{name}/execute' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualmachines/{name}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '202'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualmachines/{name}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualmachines/{name}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualmachines/{name}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualmachines/{name}/applyArtifacts' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualmachines/{name}/applyArtifacts' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualmachines/{name}/start' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualmachines/{name}/start' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualmachines/{name}/stop' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualmachines/{name}/stop' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualnetworks/{name}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '202'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualnetworks/{name}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualnetworks/{name}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualnetworks/{name}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{name}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '202'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{name}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{name}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{name}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{name}/createEnvironment' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{name}/createEnvironment' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The tags of the resource.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The tags of the resource.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The tags of the resource.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The tags of the resource.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The tags of the resource.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The tags of the resource.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The tags of the resource.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The tags of the resource.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The tags of the resource.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The tags of the resource.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The tags of the resource.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The tags of the resource.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The tags of the resource.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The tags of the resource.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The tags of the resource.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The tags of the resource.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The tags of the resource.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The tags of the resource.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The tags of the resource.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The tags of the resource.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 51,
        "numOpsQuery": 24,
        "numOpsMutation": 27,
        "numQueriesCreated": 24,
        "numMutationsCreated": 12
      }
    },
    {
      "name": "DevTestLabsClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/artifactsources/{name}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/artifactsources/{name}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/artifactsources/{name}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/artifactsources/{name}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/costs/{name}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/costs/{name}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/customimages/{name}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '202'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/customimages/{name}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/customimages/{name}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/customimages/{name}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/formulas/{name}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/formulas/{name}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/formulas/{name}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/formulas/{name}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/notificationchannels/{name}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/notificationchannels/{name}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/notificationchannels/{name}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/notificationchannels/{name}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/notificationchannels/{name}/notify' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/policysets/{policySetName}/policies/{name}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/policysets/{policySetName}/policies/{name}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/policysets/{policySetName}/policies/{name}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/policysets/{policySetName}/policies/{name}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/schedules/{name}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/schedules/{name}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/schedules/{name}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/schedules/{name}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/schedules/{name}/execute' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/schedules/{name}/execute' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/servicerunners/{name}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/servicerunners/{name}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/servicerunners/{name}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/servicerunners/{name}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/users/{name}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '202'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/users/{name}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/users/{name}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/users/{name}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/users/{userName}/disks/{name}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '202'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/users/{userName}/disks/{name}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/users/{userName}/disks/{name}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/users/{userName}/disks/{name}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/users/{userName}/disks/{name}/attach' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/users/{userName}/disks/{name}/attach' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/users/{userName}/disks/{name}/detach' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/users/{userName}/disks/{name}/detach' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/users/{userName}/environments/{name}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '202'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/users/{userName}/environments/{name}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/users/{userName}/environments/{name}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/users/{userName}/environments/{name}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/users/{userName}/secrets/{name}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/users/{userName}/secrets/{name}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/users/{userName}/secrets/{name}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/users/{userName}/secrets/{name}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualmachines/{name}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '202'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualmachines/{name}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualmachines/{name}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualmachines/{name}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualmachines/{name}/addDataDisk' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualmachines/{name}/addDataDisk' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualmachines/{name}/applyArtifacts' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualmachines/{name}/applyArtifacts' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualmachines/{name}/claim' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualmachines/{name}/claim' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualmachines/{name}/detachDataDisk' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualmachines/{name}/detachDataDisk' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualmachines/{name}/start' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualmachines/{name}/start' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualmachines/{name}/stop' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualmachines/{name}/stop' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualmachines/{virtualMachineName}/schedules/{name}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualmachines/{virtualMachineName}/schedules/{name}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualmachines/{virtualMachineName}/schedules/{name}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualmachines/{virtualMachineName}/schedules/{name}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualmachines/{virtualMachineName}/schedules/{name}/execute' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualmachines/{virtualMachineName}/schedules/{name}/execute' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualnetworks/{name}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '202'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualnetworks/{name}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualnetworks/{name}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualnetworks/{name}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{name}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '202'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{name}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{name}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{name}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{name}/claimAnyVm' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{name}/claimAnyVm' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{name}/createEnvironment' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{name}/createEnvironment' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{name}/exportResourceUsage' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{name}/exportResourceUsage' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/schedules/{name}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/schedules/{name}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/schedules/{name}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/schedules/{name}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/schedules/{name}/execute' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/schedules/{name}/execute' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/schedules/{name}/retarget' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/schedules/{name}/retarget' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The tags of the resource.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The tags of the resource.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The tags of the resource.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The tags of the resource.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The contents of the ARM template.\",\"readOnly\":true,\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Contents of the file.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The tags of the resource.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The artifact's parameters.\",\"readOnly\":true,\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The tags of the resource.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The tags of the resource.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The tags of the resource.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The tags of the resource.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The tags of the resource.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The tags of the resource.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The tags of the resource.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The tags of the resource.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The tags of the resource.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The tags of the resource.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The tags of the resource.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The tags of the resource.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The tags of the resource.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The tags of the resource.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The tags of the resource.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The parameters of the ARM template.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The template's contents.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The tags of the resource.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The tags of the resource.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The tags of the resource.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The tags of the resource.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The tags of the resource.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The tags of the resource.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The tags of the resource.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The tags of the resource.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The tags of the resource.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The tags of the resource.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The tags of the resource.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The tags of the resource.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The tags of the resource.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The tags of the resource.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The tags of the resource.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The tags of the resource.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The tags of the resource.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 96,
        "numOpsQuery": 41,
        "numOpsMutation": 55,
        "numQueriesCreated": 41,
        "numMutationsCreated": 23
      }
    },
    {
      "name": "DnsManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnszones/{zoneName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnszones/{zoneName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnszones/{zoneName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnszones/{zoneName}/{recordType}/{relativeRecordSetName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnszones/{zoneName}/{recordType}/{relativeRecordSetName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnszones/{zoneName}/{recordType}/{relativeRecordSetName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 10,
        "numOpsQuery": 6,
        "numOpsMutation": 4,
        "numQueriesCreated": 6,
        "numMutationsCreated": 2
      }
    },
    {
      "name": "DnsManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsZones/{zoneName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsZones/{zoneName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsZones/{zoneName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsZones/{zoneName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsZones/{zoneName}/{recordType}/{relativeRecordSetName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsZones/{zoneName}/{recordType}/{relativeRecordSetName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsZones/{zoneName}/{recordType}/{relativeRecordSetName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsZones/{zoneName}/{recordType}/{relativeRecordSetName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The metadata attached to the record set.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The metadata attached to the record set.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 10,
        "numOpsQuery": 6,
        "numOpsMutation": 4,
        "numQueriesCreated": 6,
        "numMutationsCreated": 3
      }
    },
    {
      "name": "DnsManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsZones/{zoneName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsZones/{zoneName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsZones/{zoneName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsZones/{zoneName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsZones/{zoneName}/{recordType}/{relativeRecordSetName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsZones/{zoneName}/{recordType}/{relativeRecordSetName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsZones/{zoneName}/{recordType}/{relativeRecordSetName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsZones/{zoneName}/{recordType}/{relativeRecordSetName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The metadata attached to the record set.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The metadata attached to the record set.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 10,
        "numOpsQuery": 6,
        "numOpsMutation": 4,
        "numQueriesCreated": 6,
        "numMutationsCreated": 2
      }
    },
    {
      "name": "Domain Services Resource Provider",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AAD/domainServices/{domainServiceName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '202'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AAD/domainServices/{domainServiceName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '202'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AAD/domainServices/{domainServiceName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AAD/domainServices/{domainServiceName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 6,
        "numOpsQuery": 4,
        "numOpsMutation": 2,
        "numQueriesCreated": 4,
        "numMutationsCreated": 2
      }
    },
    {
      "name": "Domain Services Resource Provider",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AAD/domainServices/{domainServiceName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '202'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AAD/domainServices/{domainServiceName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '202'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AAD/domainServices/{domainServiceName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AAD/domainServices/{domainServiceName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 6,
        "numOpsQuery": 4,
        "numOpsMutation": 2,
        "numQueriesCreated": 4,
        "numMutationsCreated": 2
      }
    },
    {
      "name": "EventGridManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '202'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /{scope}/providers/Microsoft.EventGrid/eventSubscriptions/{eventSubscriptionName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /{scope}/providers/Microsoft.EventGrid/eventSubscriptions/{eventSubscriptionName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Properties of the operation\",\"type\":\"object\",\"x-ms-client-flatten\":true}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Tags of the resource\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Tags of the resource\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 25,
        "numOpsQuery": 18,
        "numOpsMutation": 7,
        "numQueriesCreated": 18,
        "numMutationsCreated": 5
      }
    },
    {
      "name": "EventGridManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '202'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /{scope}/providers/Microsoft.EventGrid/eventSubscriptions/{eventSubscriptionName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /{scope}/providers/Microsoft.EventGrid/eventSubscriptions/{eventSubscriptionName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Properties of the operation\",\"type\":\"object\",\"x-ms-client-flatten\":true}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Tags of the resource\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Tags of the resource\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 25,
        "numOpsQuery": 18,
        "numOpsMutation": 7,
        "numQueriesCreated": 18,
        "numMutationsCreated": 5
      }
    },
    {
      "name": "EventHubManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/AuthorizationRules/{authorizationRuleName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/AuthorizationRules/{authorizationRuleName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/eventhubs/{eventHubName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/eventhubs/{eventHubName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/eventhubs/{eventHubName}/authorizationRules/{authorizationRuleName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/eventhubs/{eventHubName}/authorizationRules/{authorizationRuleName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/eventhubs/{eventHubName}/consumergroups/{consumerGroupName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/eventhubs/{eventHubName}/consumergroups/{consumerGroupName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Namespace tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 27,
        "numOpsQuery": 12,
        "numOpsMutation": 15,
        "numQueriesCreated": 12,
        "numMutationsCreated": 10
      }
    },
    {
      "name": "EventHubManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/AuthorizationRules/{authorizationRuleName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/AuthorizationRules/{authorizationRuleName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/disasterRecoveryConfigs/{alias}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/disasterRecoveryConfigs/{alias}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/disasterRecoveryConfigs/{alias}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/disasterRecoveryConfigs/{alias}/breakPairing' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/disasterRecoveryConfigs/{alias}/failover' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/eventhubs/{eventHubName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/eventhubs/{eventHubName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/eventhubs/{eventHubName}/authorizationRules/{authorizationRuleName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/eventhubs/{eventHubName}/authorizationRules/{authorizationRuleName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/eventhubs/{eventHubName}/consumergroups/{consumerGroupName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/eventhubs/{eventHubName}/consumergroups/{consumerGroupName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\",\"x-ms-mutability\":[\"read\",\"create\",\"update\"]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\",\"x-ms-mutability\":[\"read\",\"create\",\"update\"]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 37,
        "numOpsQuery": 16,
        "numOpsMutation": 21,
        "numQueriesCreated": 16,
        "numMutationsCreated": 13
      }
    },
    {
      "name": "HDInsightManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusters/{clusterName}/applications/{applicationName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The tags for the application.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 4,
        "numOpsQuery": 2,
        "numOpsMutation": 2,
        "numQueriesCreated": 2,
        "numMutationsCreated": 1
      }
    },
    {
      "name": "HDInsightManagementClient",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/regionsCapability\"},\"description\":\"The virtual machine size compatibilty features.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/versionsCapability\"},\"description\":\"The version capability.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/vmSizesCapability\"},\"description\":\"The virtual machine sizes.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 1,
        "numOpsQuery": 1,
        "numOpsMutation": 0,
        "numQueriesCreated": 1,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "HDInsightManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusters/{clusterName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusters/{clusterName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusters/{clusterName}/roles/{roleName}/resize' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusters/{clusterName}/roles/{roleName}/resize' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\",\"x-ms-mutability\":[\"read\",\"create\",\"update\"]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The versions of different services in the cluster.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The cluster configurations.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The versions of different services in the cluster.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The cluster configurations.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 6,
        "numOpsQuery": 3,
        "numOpsMutation": 3,
        "numQueriesCreated": 3,
        "numMutationsCreated": 1
      }
    },
    {
      "name": "HDInsightManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusters/{clusterName}/configurations/{configurationName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusters/{clusterName}/configurations/{configurationName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 2,
        "numOpsQuery": 1,
        "numOpsMutation": 1,
        "numQueriesCreated": 1,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "HDInsightManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusters/{clusterName}/extensions/clustermonitoring' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusters/{clusterName}/extensions/clustermonitoring' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusters/{clusterName}/extensions/{extensionName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusters/{clusterName}/extensions/{extensionName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 6,
        "numOpsQuery": 2,
        "numOpsMutation": 4,
        "numQueriesCreated": 2,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "HDInsightManagementClient",
      "report": {
        "warnings": [],
        "numOps": 1,
        "numOpsQuery": 1,
        "numOpsMutation": 0,
        "numQueriesCreated": 1,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "HDInsightManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusters/{clusterName}/executeScriptActions' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusters/{clusterName}/executeScriptActions' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusters/{clusterName}/scriptActions/{scriptName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusters/{clusterName}/scriptExecutionHistory/{scriptExecutionId}/promote' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 6,
        "numOpsQuery": 3,
        "numOpsMutation": 3,
        "numQueriesCreated": 3,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "IntuneResourceManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /providers/Microsoft.Intune/locations/{hostName}/androidPolicies/{policyName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /providers/Microsoft.Intune/locations/{hostName}/androidPolicies/{policyName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /providers/Microsoft.Intune/locations/{hostName}/androidPolicies/{policyName}/apps/{appName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /providers/Microsoft.Intune/locations/{hostName}/androidPolicies/{policyName}/apps/{appName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /providers/Microsoft.Intune/locations/{hostName}/androidPolicies/{policyName}/apps/{appName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /providers/Microsoft.Intune/locations/{hostName}/androidPolicies/{policyName}/apps/{appName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /providers/Microsoft.Intune/locations/{hostName}/androidPolicies/{policyName}/groups/{groupId}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /providers/Microsoft.Intune/locations/{hostName}/androidPolicies/{policyName}/groups/{groupId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /providers/Microsoft.Intune/locations/{hostName}/androidPolicies/{policyName}/groups/{groupId}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /providers/Microsoft.Intune/locations/{hostName}/androidPolicies/{policyName}/groups/{groupId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /providers/Microsoft.Intune/locations/{hostName}/iosPolicies/{policyName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /providers/Microsoft.Intune/locations/{hostName}/iosPolicies/{policyName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /providers/Microsoft.Intune/locations/{hostName}/iosPolicies/{policyName}/apps/{appName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /providers/Microsoft.Intune/locations/{hostName}/iosPolicies/{policyName}/apps/{appName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /providers/Microsoft.Intune/locations/{hostName}/iosPolicies/{policyName}/apps/{appName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /providers/Microsoft.Intune/locations/{hostName}/iosPolicies/{policyName}/apps/{appName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /providers/Microsoft.Intune/locations/{hostName}/iosPolicies/{policyName}/groups/{groupId}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /providers/Microsoft.Intune/locations/{hostName}/iosPolicies/{policyName}/groups/{groupId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /providers/Microsoft.Intune/locations/{hostName}/iosPolicies/{policyName}/groups/{groupId}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /providers/Microsoft.Intune/locations/{hostName}/iosPolicies/{policyName}/groups/{groupId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource Tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource Tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource Tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource Tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource Tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource Tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource Tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource Tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource Tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource Tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource Tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource Tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource Tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 31,
        "numOpsQuery": 18,
        "numOpsMutation": 13,
        "numQueriesCreated": 18,
        "numMutationsCreated": 3
      }
    },
    {
      "name": "IntuneResourceManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /providers/Microsoft.Intune/locations/{hostName}/androidPolicies/{policyName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /providers/Microsoft.Intune/locations/{hostName}/androidPolicies/{policyName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /providers/Microsoft.Intune/locations/{hostName}/androidPolicies/{policyName}/apps/{appName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /providers/Microsoft.Intune/locations/{hostName}/androidPolicies/{policyName}/apps/{appName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /providers/Microsoft.Intune/locations/{hostName}/androidPolicies/{policyName}/apps/{appName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /providers/Microsoft.Intune/locations/{hostName}/androidPolicies/{policyName}/apps/{appName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /providers/Microsoft.Intune/locations/{hostName}/androidPolicies/{policyName}/groups/{groupId}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /providers/Microsoft.Intune/locations/{hostName}/androidPolicies/{policyName}/groups/{groupId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /providers/Microsoft.Intune/locations/{hostName}/androidPolicies/{policyName}/groups/{groupId}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /providers/Microsoft.Intune/locations/{hostName}/androidPolicies/{policyName}/groups/{groupId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /providers/Microsoft.Intune/locations/{hostName}/iosPolicies/{policyName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /providers/Microsoft.Intune/locations/{hostName}/iosPolicies/{policyName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /providers/Microsoft.Intune/locations/{hostName}/iosPolicies/{policyName}/apps/{appName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /providers/Microsoft.Intune/locations/{hostName}/iosPolicies/{policyName}/apps/{appName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /providers/Microsoft.Intune/locations/{hostName}/iosPolicies/{policyName}/apps/{appName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /providers/Microsoft.Intune/locations/{hostName}/iosPolicies/{policyName}/apps/{appName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /providers/Microsoft.Intune/locations/{hostName}/iosPolicies/{policyName}/groups/{groupId}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /providers/Microsoft.Intune/locations/{hostName}/iosPolicies/{policyName}/groups/{groupId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /providers/Microsoft.Intune/locations/{hostName}/iosPolicies/{policyName}/groups/{groupId}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /providers/Microsoft.Intune/locations/{hostName}/iosPolicies/{policyName}/groups/{groupId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource Tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource Tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource Tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource Tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource Tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource Tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource Tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource Tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource Tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource Tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource Tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource Tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource Tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 31,
        "numOpsQuery": 18,
        "numOpsMutation": 13,
        "numQueriesCreated": 18,
        "numMutationsCreated": 3
      }
    },
    {
      "name": "iotHubClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/eventHubEndpoints/{eventHubEndpointName}/ConsumerGroups/{name}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/EventHubProperties\"},\"description\":\"The Event Hub-compatible endpoint properties. The possible keys to this dictionary are events and operationsMonitoringEvents. Both of these keys have to be present in the dictionary while making create or update calls for the IoT hub.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/MessagingEndpointProperties\"},\"description\":\"The messaging endpoint properties for the file upload notification queue.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/StorageEndpointProperties\"},\"description\":\"The list of Azure Storage endpoints where you can upload files. Currently you can configure only one Azure Storage account and that MUST have its key as $default. Specifying more than one storage account causes an error to be thrown. Not specifying a value for this property when the enableFileUploadNotifications property is set to True, causes an error to be thrown.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"The operations monitoring level.\",\"enum\":[\"None\",\"Error\",\"Information\",\"Error, Information\"],\"type\":\"string\",\"x-ms-enum\":{\"modelAsString\":true,\"name\":\"OperationMonitoringLevel\"}},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/EventHubProperties\"},\"description\":\"The Event Hub-compatible endpoint properties. The possible keys to this dictionary are events and operationsMonitoringEvents. Both of these keys have to be present in the dictionary while making create or update calls for the IoT hub.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/MessagingEndpointProperties\"},\"description\":\"The messaging endpoint properties for the file upload notification queue.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/StorageEndpointProperties\"},\"description\":\"The list of Azure Storage endpoints where you can upload files. Currently you can configure only one Azure Storage account and that MUST have its key as $default. Specifying more than one storage account causes an error to be thrown. Not specifying a value for this property when the enableFileUploadNotifications property is set to True, causes an error to be thrown.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"The operations monitoring level.\",\"enum\":[\"None\",\"Error\",\"Information\",\"Error, Information\"],\"type\":\"string\",\"x-ms-enum\":{\"modelAsString\":true,\"name\":\"OperationMonitoringLevel\"}},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 19,
        "numOpsQuery": 10,
        "numOpsMutation": 9,
        "numQueriesCreated": 10,
        "numMutationsCreated": 8
      }
    },
    {
      "name": "iotHubClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/eventHubEndpoints/{eventHubEndpointName}/ConsumerGroups/{name}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/EventHubProperties\"},\"description\":\"The Event Hub-compatible endpoint properties. The possible keys to this dictionary are events and operationsMonitoringEvents. Both of these keys have to be present in the dictionary while making create or update calls for the IoT hub.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/MessagingEndpointProperties\"},\"description\":\"The messaging endpoint properties for the file upload notification queue.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/StorageEndpointProperties\"},\"description\":\"The list of Azure Storage endpoints where you can upload files. Currently you can configure only one Azure Storage account and that MUST have its key as $default. Specifying more than one storage account causes an error to be thrown. Not specifying a value for this property when the enableFileUploadNotifications property is set to True, causes an error to be thrown.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"The operations monitoring level.\",\"enum\":[\"None\",\"Error\",\"Information\",\"Error, Information\"],\"type\":\"string\",\"x-ms-enum\":{\"modelAsString\":true,\"name\":\"OperationMonitoringLevel\"}},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/EventHubProperties\"},\"description\":\"The Event Hub-compatible endpoint properties. The possible keys to this dictionary are events and operationsMonitoringEvents. Both of these keys have to be present in the dictionary while making create or update calls for the IoT hub.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/MessagingEndpointProperties\"},\"description\":\"The messaging endpoint properties for the file upload notification queue.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/StorageEndpointProperties\"},\"description\":\"The list of Azure Storage endpoints where you can upload files. Currently you can configure only one Azure Storage account and that MUST have its key as $default. Specifying more than one storage account causes an error to be thrown. Not specifying a value for this property when the enableFileUploadNotifications property is set to True, causes an error to be thrown.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"The operations monitoring level.\",\"enum\":[\"None\",\"Error\",\"Information\",\"Error, Information\"],\"type\":\"string\",\"x-ms-enum\":{\"modelAsString\":true,\"name\":\"OperationMonitoringLevel\"}},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 19,
        "numOpsQuery": 10,
        "numOpsMutation": 9,
        "numQueriesCreated": 10,
        "numMutationsCreated": 8
      }
    },
    {
      "name": "iotHubClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/certificates/{certificateName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/certificates/{certificateName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/certificates/{certificateName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/certificates/{certificateName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/eventHubEndpoints/{eventHubEndpointName}/ConsumerGroups/{name}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/EventHubProperties\"},\"description\":\"The Event Hub-compatible endpoint properties. The possible keys to this dictionary are events and operationsMonitoringEvents. Both of these keys have to be present in the dictionary while making create or update calls for the IoT hub.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/MessagingEndpointProperties\"},\"description\":\"The messaging endpoint properties for the file upload notification queue.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/StorageEndpointProperties\"},\"description\":\"The list of Azure Storage endpoints where you can upload files. Currently you can configure only one Azure Storage account and that MUST have its key as $default. Specifying more than one storage account causes an error to be thrown. Not specifying a value for this property when the enableFileUploadNotifications property is set to True, causes an error to be thrown.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"The operations monitoring level.\",\"enum\":[\"None\",\"Error\",\"Information\",\"Error, Information\"],\"type\":\"string\",\"x-ms-enum\":{\"modelAsString\":true,\"name\":\"OperationMonitoringLevel\"}},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/EventHubProperties\"},\"description\":\"The Event Hub-compatible endpoint properties. The possible keys to this dictionary are events and operationsMonitoringEvents. Both of these keys have to be present in the dictionary while making create or update calls for the IoT hub.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/MessagingEndpointProperties\"},\"description\":\"The messaging endpoint properties for the file upload notification queue.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/StorageEndpointProperties\"},\"description\":\"The list of Azure Storage endpoints where you can upload files. Currently you can configure only one Azure Storage account and that MUST have its key as $default. Specifying more than one storage account causes an error to be thrown. Not specifying a value for this property when the enableFileUploadNotifications property is set to True, causes an error to be thrown.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"The operations monitoring level.\",\"enum\":[\"None\",\"Error\",\"Information\",\"Error, Information\"],\"type\":\"string\",\"x-ms-enum\":{\"modelAsString\":true,\"name\":\"OperationMonitoringLevel\"}},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 26,
        "numOpsQuery": 13,
        "numOpsMutation": 13,
        "numQueriesCreated": 13,
        "numMutationsCreated": 11
      }
    },
    {
      "name": "KeyVaultManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The tags that will be assigned to the key vault. \",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The tags that will be assigned to the key vault. \",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The tags that will be assigned to the key vault. \",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 5,
        "numOpsQuery": 3,
        "numOpsMutation": 2,
        "numQueriesCreated": 3,
        "numMutationsCreated": 1
      }
    },
    {
      "name": "KeyVaultManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/providers/Microsoft.KeyVault/locations/{location}/deletedVaults/{vaultName}/purge' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/providers/Microsoft.KeyVault/locations/{location}/deletedVaults/{vaultName}/purge' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Tags of the original vault.\",\"readOnly\":true,\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The tags that will be assigned to the key vault. \",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The tags that will be assigned to the key vault. \",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The tags that will be assigned to the key vault.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 8,
        "numOpsQuery": 5,
        "numOpsMutation": 3,
        "numQueriesCreated": 5,
        "numMutationsCreated": 1
      }
    },
    {
      "name": "Azure Location Based Services Resource Provider",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/moveResources' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.LocationBasedServices/accounts/{accountName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.LocationBasedServices/accounts/{accountName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.LocationBasedServices/accounts/{accountName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.LocationBasedServices/accounts/{accountName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Gets a list of key value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters.\",\"readOnly\":true,\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Gets or sets a list of key value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 9,
        "numOpsQuery": 4,
        "numOpsMutation": 5,
        "numQueriesCreated": 4,
        "numMutationsCreated": 3
      }
    },
    {
      "name": "LogicManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/accessKeys/{accessKeyName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/accessKeys/{accessKeyName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/accessKeys/{accessKeyName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/accessKeys/{accessKeyName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/disable' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/enable' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/runs/{runName}/cancel' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/triggers/{triggerName}/run' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/validate' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Gets or sets the resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/WorkflowParameter\"},\"description\":\"Gets or sets the parameters.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/WorkflowOutputParameter\"},\"description\":\"Gets the outputs.\",\"readOnly\":true,\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Gets or sets the resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/WorkflowParameter\"},\"description\":\"Gets or sets the parameters.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Gets or sets the resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/WorkflowParameter\"},\"description\":\"Gets or sets the parameters.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Gets or sets the outputs of workflow run trigger.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 26,
        "numOpsQuery": 14,
        "numOpsMutation": 12,
        "numQueriesCreated": 14,
        "numMutationsCreated": 5
      }
    },
    {
      "name": "LogicManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/agreements/{agreementName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/agreements/{agreementName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/agreements/{agreementName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/agreements/{agreementName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/certificates/{certificateName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/certificates/{certificateName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/certificates/{certificateName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/certificates/{certificateName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/maps/{mapName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/maps/{mapName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/maps/{mapName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/maps/{mapName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/partners/{partnerName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/partners/{partnerName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/partners/{partnerName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/partners/{partnerName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/schemas/{schemaName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/schemas/{schemaName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/schemas/{schemaName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/schemas/{schemaName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The metadata.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The metadata.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The content.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The metadata.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The metadata.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The metadata.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The content.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The metadata.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The metadata.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The metadata.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The content.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The metadata.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The metadata.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The metadata.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The content.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The metadata.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 26,
        "numOpsQuery": 13,
        "numOpsMutation": 13,
        "numQueriesCreated": 13,
        "numMutationsCreated": 7
      }
    },
    {
      "name": "Azure ML Commitment Plans Management Client",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearning/commitmentPlans/{commitmentPlanName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearning/commitmentPlans/{commitmentPlanName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearning/commitmentPlans/{commitmentPlanName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/PlanQuantity\"},\"description\":\"The included resource quantities this plan gives you.\",\"readOnly\":true,\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"format\":\"double\",\"type\":\"number\"},\"description\":\"Overage incurred as a result of deleting a commitment plan.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"format\":\"double\",\"type\":\"number\"},\"description\":\"Overage incurred as a result of migrating a commitment plan from one SKU to another.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"format\":\"double\",\"type\":\"number\"},\"description\":\"Included quantities remaining after usage against the commitment plan's associated resources was calculated.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"format\":\"double\",\"type\":\"number\"},\"description\":\"Included quantities remaining before usage against the commitment plan's associated resources was calculated.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"format\":\"double\",\"type\":\"number\"},\"description\":\"Usage against the commitment plan's associated resources which was not covered by included quantities and is therefore overage.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"format\":\"double\",\"type\":\"number\"},\"description\":\"Usage against the commitment plan's associated resources.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/PlanQuantity\"},\"description\":\"The included resource quantities this plan gives you.\",\"readOnly\":true,\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 9,
        "numOpsQuery": 6,
        "numOpsMutation": 3,
        "numQueriesCreated": 6,
        "numMutationsCreated": 2
      }
    },
    {
      "name": "Azure ML Web Services Management Client",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearning/webServices/{webServiceName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '202'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearning/webServices/{webServiceName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearning/webServices/{webServiceName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearning/webServices/{webServiceName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Contains resource tags defined as key/value pairs.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/AssetItem\"},\"description\":\"Contains user defined properties describing web service assets. Properties are expressed as Key/Value pairs.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The set of global parameters values defined for the web service, given as a global parameter name to default value map. If no default value is specified, the parameter is considered to be required.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"object\"},\"description\":\"Sample input data for the web service's global parameters\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"items\":{\"items\":{\"type\":\"object\"},\"type\":\"array\"},\"type\":\"array\"},\"description\":\"Sample input data for the web service's input(s) given as an input name to sample input values matrix map.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/TableSpecification\"},\"description\":\"Specifies a collection that contains the column schema for each input or output of the web service. For more information, see the Swagger specification.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Contains resource tags defined as key/value pairs.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/AssetItem\"},\"description\":\"Contains user defined properties describing web service assets. Properties are expressed as Key/Value pairs.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The set of global parameters values defined for the web service, given as a global parameter name to default value map. If no default value is specified, the parameter is considered to be required.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"object\"},\"description\":\"Sample input data for the web service's global parameters\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"items\":{\"items\":{\"type\":\"object\"},\"type\":\"array\"},\"type\":\"array\"},\"description\":\"Sample input data for the web service's input(s) given as an input name to sample input values matrix map.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/TableSpecification\"},\"description\":\"Specifies a collection that contains the column schema for each input or output of the web service. For more information, see the Swagger specification.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 6,
        "numOpsQuery": 4,
        "numOpsMutation": 2,
        "numQueriesCreated": 4,
        "numMutationsCreated": 1
      }
    },
    {
      "name": "Azure ML Web Services Management Client",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearning/webServices/{webServiceName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '202'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearning/webServices/{webServiceName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearning/webServices/{webServiceName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearning/webServices/{webServiceName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearning/webServices/{webServiceName}/CreateRegionalBlob' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearning/webServices/{webServiceName}/CreateRegionalBlob' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Contains resource tags defined as key/value pairs.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/AssetItem\"},\"description\":\"Contains user defined properties describing web service assets. Properties are expressed as Key/Value pairs.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/WebServiceParameter\"},\"description\":\"The set of global parameters values defined for the web service, given as a global parameter name to default value map. If no default value is specified, the parameter is considered to be required.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"object\"},\"description\":\"Sample input data for the web service's global parameters\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"items\":{\"items\":{\"type\":\"object\"},\"type\":\"array\"},\"type\":\"array\"},\"description\":\"Sample input data for the web service's input(s) given as an input name to sample input values matrix map.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/TableSpecification\"},\"description\":\"Specifies a collection that contains the column schema for each input or output of the web service. For more information, see the Swagger specification.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Contains resource tags defined as key/value pairs.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/AssetItem\"},\"description\":\"Contains user defined properties describing web service assets. Properties are expressed as Key/Value pairs.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/WebServiceParameter\"},\"description\":\"The set of global parameters values defined for the web service, given as a global parameter name to default value map. If no default value is specified, the parameter is considered to be required.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"object\"},\"description\":\"Sample input data for the web service's global parameters\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"items\":{\"items\":{\"type\":\"object\"},\"type\":\"array\"},\"type\":\"array\"},\"description\":\"Sample input data for the web service's input(s) given as an input name to sample input values matrix map.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/TableSpecification\"},\"description\":\"Specifies a collection that contains the column schema for each input or output of the web service. For more information, see the Swagger specification.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 7,
        "numOpsQuery": 4,
        "numOpsMutation": 3,
        "numQueriesCreated": 4,
        "numMutationsCreated": 2
      }
    },
    {
      "name": "Machine Learning Workspaces Management Client",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearning/workspaces/{workspaceName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearning/workspaces/{workspaceName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearning/workspaces/{workspaceName}/resyncStorageKeys' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The tags of the resource.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The tags of the resource.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 8,
        "numOpsQuery": 4,
        "numOpsMutation": 4,
        "numQueriesCreated": 4,
        "numMutationsCreated": 2
      }
    },
    {
      "name": "Azure Machine Learning Compute Management Client",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningCompute/operationalizationClusters/{clusterName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningCompute/operationalizationClusters/{clusterName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningCompute/operationalizationClusters/{clusterName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningCompute/operationalizationClusters/{clusterName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningCompute/operationalizationClusters/{clusterName}/checkUpdate' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningCompute/operationalizationClusters/{clusterName}/checkUpdate' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningCompute/operationalizationClusters/{clusterName}/listKeys' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningCompute/operationalizationClusters/{clusterName}/listKeys' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningCompute/operationalizationClusters/{clusterName}/updateSystem' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningCompute/operationalizationClusters/{clusterName}/updateSystem' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Contains resource tags defined as key/value pairs.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Contains resource tags defined as key/value pairs.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 9,
        "numOpsQuery": 4,
        "numOpsMutation": 5,
        "numQueriesCreated": 4,
        "numMutationsCreated": 4
      }
    },
    {
      "name": "Machine Learning Compute Management Client",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningCompute/operationalizationClusters/{clusterName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '202'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningCompute/operationalizationClusters/{clusterName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningCompute/operationalizationClusters/{clusterName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningCompute/operationalizationClusters/{clusterName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningCompute/operationalizationClusters/{clusterName}/updateSystemServices' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningCompute/operationalizationClusters/{clusterName}/updateSystemServices' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Contains resource tags defined as key/value pairs.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Contains resource tags defined as key/value pairs.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 9,
        "numOpsQuery": 4,
        "numOpsMutation": 5,
        "numQueriesCreated": 4,
        "numMutationsCreated": 4
      }
    },
    {
      "name": "ML Team Account Management Client",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningExperimentation/accounts/{accountName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningExperimentation/accounts/{accountName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningExperimentation/accounts/{accountName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningExperimentation/accounts/{accountName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningExperimentation/accounts/{accountName}/workspaces/{workspaceName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningExperimentation/accounts/{accountName}/workspaces/{workspaceName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningExperimentation/accounts/{accountName}/workspaces/{workspaceName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningExperimentation/accounts/{accountName}/workspaces/{workspaceName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningExperimentation/accounts/{accountName}/workspaces/{workspaceName}/projects/{projectName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningExperimentation/accounts/{accountName}/workspaces/{workspaceName}/projects/{projectName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningExperimentation/accounts/{accountName}/workspaces/{workspaceName}/projects/{projectName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningExperimentation/accounts/{accountName}/workspaces/{workspaceName}/projects/{projectName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The tags of the resource.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The tags of the resource.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The tags of the resource.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The tags of the resource.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The tags of the resource.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The tags of the resource.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 14,
        "numOpsQuery": 8,
        "numOpsMutation": 6,
        "numQueriesCreated": 8,
        "numMutationsCreated": 3
      }
    },
    {
      "name": "MarketplaceOrdering.Agreements",
      "report": {
        "warnings": [],
        "numOps": 3,
        "numOpsQuery": 2,
        "numOpsMutation": 1,
        "numQueriesCreated": 2,
        "numMutationsCreated": 1
      }
    },
    {
      "name": "MediaServicesManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaservices/{mediaServiceName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaservices/{mediaServiceName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaservices/{mediaServiceName}/syncStorageKeys' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Tags to help categorize the resource in the Azure portal.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Tags to help categorize the resource in the Azure portal.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 9,
        "numOpsQuery": 3,
        "numOpsMutation": 6,
        "numQueriesCreated": 3,
        "numMutationsCreated": 4
      }
    },
    {
      "name": "Engagement.ManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MobileEngagement/appcollections/{appCollection}/apps/{appName}/campaigns/{kind}/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MobileEngagement/appcollections/{appCollection}/apps/{appName}/devices/importTasks' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '201'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MobileEngagement/appcollections/{appCollection}/apps/{appName}/devices/importTasks' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '201'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Native push payload.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/CampaignLocalization\"},\"description\":\"Push campaigns can be localized using an optional JSON object. The JSON key is a two-character language code as specified by the ISO 639-1 standard. The corresponding value is an object containing the localizable properties.\\n\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/Criterion\"},\"description\":\"Criteria by name.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/PollQuestionLocalization\"},\"description\":\"Poll questions can be localized using an optional JSON object. The JSON key is a two-character language code as specified by the ISO 639-1 standard. The corresponding value is an object containing the localizable property title.\\n\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/PollQuestionChoiceLocalization\"},\"description\":\"Poll choices can be localized using an optional JSON object. The JSON key is a two-character language code as specified by the ISO 639-1 standard. The corresponding value is an object containing the localizable property title.\\n\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"object\"},\"description\":\"Poll specific statistics.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Also known as tags, a key-value set as a JSON object.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Also known as tags, a key-value set as a JSON object.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/CampaignLocalization\"},\"description\":\"Push campaigns can be localized using an optional JSON object. The JSON key is a two-character language code as specified by the ISO 639-1 standard. The corresponding value is an object containing the localizable properties.\\n\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Native push payload.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/Criterion\"},\"description\":\"Criteria by name.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/PollQuestionLocalization\"},\"description\":\"Poll questions can be localized using an optional JSON object. The JSON key is a two-character language code as specified by the ISO 639-1 standard. The corresponding value is an object containing the localizable property title.\\n\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/PollQuestionChoiceLocalization\"},\"description\":\"Poll choices can be localized using an optional JSON object. The JSON key is a two-character language code as specified by the ISO 639-1 standard. The corresponding value is an object containing the localizable property title.\\n\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"$ref\":\"#/components/schemas/url\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"$ref\":\"#/components/schemas/url\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"$ref\":\"#/components/schemas/url\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"$ref\":\"#/components/schemas/url\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"},\"description\":\"A JSON object describing the set of tags to record for a set of users. Each key is a device/user identifier, each value is itself a key/value set: the tags to set for the specified device/user identifier.\\n\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 37,
        "numOpsQuery": 14,
        "numOpsMutation": 23,
        "numQueriesCreated": 14,
        "numMutationsCreated": 22
      }
    },
    {
      "name": "ManagedServiceIdentityClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{resourceName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{resourceName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{resourceName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{resourceName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 6,
        "numOpsQuery": 4,
        "numOpsMutation": 2,
        "numQueriesCreated": 4,
        "numMutationsCreated": 1
      }
    },
    {
      "name": "NetworkManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways/{applicationGatewayName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways/{applicationGatewayName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways/{applicationGatewayName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways/{applicationGatewayName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways/{applicationGatewayName}/backendhealth' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways/{applicationGatewayName}/backendhealth' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways/{applicationGatewayName}/start' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways/{applicationGatewayName}/start' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways/{applicationGatewayName}/stop' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways/{applicationGatewayName}/stop' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 8,
        "numOpsQuery": 3,
        "numOpsMutation": 5,
        "numQueriesCreated": 3,
        "numMutationsCreated": 2
      }
    },
    {
      "name": "NetworkManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways/{applicationGatewayName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways/{applicationGatewayName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways/{applicationGatewayName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways/{applicationGatewayName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways/{applicationGatewayName}/backendhealth' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways/{applicationGatewayName}/backendhealth' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways/{applicationGatewayName}/start' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways/{applicationGatewayName}/start' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways/{applicationGatewayName}/stop' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways/{applicationGatewayName}/stop' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 8,
        "numOpsQuery": 3,
        "numOpsMutation": 5,
        "numQueriesCreated": 3,
        "numMutationsCreated": 2
      }
    },
    {
      "name": "NetworkManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways/{applicationGatewayName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways/{applicationGatewayName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways/{applicationGatewayName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways/{applicationGatewayName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways/{applicationGatewayName}/backendhealth' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways/{applicationGatewayName}/backendhealth' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways/{applicationGatewayName}/start' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways/{applicationGatewayName}/start' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways/{applicationGatewayName}/stop' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways/{applicationGatewayName}/stop' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 9,
        "numOpsQuery": 4,
        "numOpsMutation": 5,
        "numQueriesCreated": 4,
        "numMutationsCreated": 2
      }
    },
    {
      "name": "NetworkManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationSecurityGroups/{applicationSecurityGroupName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationSecurityGroups/{applicationSecurityGroupName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationSecurityGroups/{applicationSecurityGroupName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationSecurityGroups/{applicationSecurityGroupName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 5,
        "numOpsQuery": 3,
        "numOpsMutation": 2,
        "numQueriesCreated": 3,
        "numMutationsCreated": 1
      }
    },
    {
      "name": "NetworkManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationSecurityGroups/{applicationSecurityGroupName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationSecurityGroups/{applicationSecurityGroupName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationSecurityGroups/{applicationSecurityGroupName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationSecurityGroups/{applicationSecurityGroupName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 5,
        "numOpsQuery": 3,
        "numOpsMutation": 2,
        "numQueriesCreated": 3,
        "numMutationsCreated": 1
      }
    },
    {
      "name": "NetworkManagementClient",
      "report": {
        "warnings": [],
        "numOps": 1,
        "numOpsQuery": 1,
        "numOpsMutation": 0,
        "numQueriesCreated": 1,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "NetworkManagementClient",
      "report": {
        "warnings": [],
        "numOps": 1,
        "numOpsQuery": 1,
        "numOpsMutation": 0,
        "numQueriesCreated": 1,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "NetworkManagementClient",
      "report": {
        "warnings": [],
        "numOps": 1,
        "numOpsQuery": 1,
        "numOpsMutation": 0,
        "numQueriesCreated": 1,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "NetworkManagementClient",
      "report": {
        "warnings": [],
        "numOps": 1,
        "numOpsQuery": 1,
        "numOpsMutation": 0,
        "numQueriesCreated": 1,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "NetworkManagementClient",
      "report": {
        "warnings": [],
        "numOps": 1,
        "numOpsQuery": 1,
        "numOpsMutation": 0,
        "numQueriesCreated": 1,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "NetworkManagementClient",
      "report": {
        "warnings": [],
        "numOps": 1,
        "numOpsQuery": 1,
        "numOpsMutation": 0,
        "numQueriesCreated": 1,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "NetworkManagementClient",
      "report": {
        "warnings": [],
        "numOps": 1,
        "numOpsQuery": 1,
        "numOpsMutation": 0,
        "numQueriesCreated": 1,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "NetworkManagementClient",
      "report": {
        "warnings": [],
        "numOps": 1,
        "numOpsQuery": 1,
        "numOpsMutation": 0,
        "numQueriesCreated": 1,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "NetworkManagementClient",
      "report": {
        "warnings": [],
        "numOps": 1,
        "numOpsQuery": 1,
        "numOpsMutation": 0,
        "numQueriesCreated": 1,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "NetworkManagementClient",
      "report": {
        "warnings": [],
        "numOps": 1,
        "numOpsQuery": 1,
        "numOpsMutation": 0,
        "numQueriesCreated": 1,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "NetworkManagementClient",
      "report": {
        "warnings": [],
        "numOps": 1,
        "numOpsQuery": 1,
        "numOpsMutation": 0,
        "numQueriesCreated": 1,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "NetworkManagementClient",
      "report": {
        "warnings": [],
        "numOps": 1,
        "numOpsQuery": 1,
        "numOpsMutation": 0,
        "numQueriesCreated": 1,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "NetworkManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/authorizations/{authorizationName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/authorizations/{authorizationName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/authorizations/{authorizationName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/authorizations/{authorizationName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings/{peeringName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings/{peeringName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings/{peeringName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings/{peeringName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 17,
        "numOpsQuery": 11,
        "numOpsMutation": 6,
        "numQueriesCreated": 11,
        "numMutationsCreated": 3
      }
    },
    {
      "name": "NetworkManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/authorizations/{authorizationName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/authorizations/{authorizationName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/authorizations/{authorizationName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/authorizations/{authorizationName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings/{peeringName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings/{peeringName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings/{peeringName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings/{peeringName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings/{peeringName}/arpTables/{devicePath}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings/{peeringName}/arpTables/{devicePath}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings/{peeringName}/routeTables/{devicePath}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings/{peeringName}/routeTables/{devicePath}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings/{peeringName}/routeTablesSummary/{devicePath}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings/{peeringName}/routeTablesSummary/{devicePath}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 19,
        "numOpsQuery": 10,
        "numOpsMutation": 9,
        "numQueriesCreated": 10,
        "numMutationsCreated": 6
      }
    },
    {
      "name": "NetworkManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/authorizations/{authorizationName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/authorizations/{authorizationName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/authorizations/{authorizationName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/authorizations/{authorizationName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings/{peeringName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings/{peeringName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings/{peeringName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings/{peeringName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings/{peeringName}/arpTables/{devicePath}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings/{peeringName}/arpTables/{devicePath}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings/{peeringName}/routeTables/{devicePath}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings/{peeringName}/routeTables/{devicePath}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings/{peeringName}/routeTablesSummary/{devicePath}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings/{peeringName}/routeTablesSummary/{devicePath}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 19,
        "numOpsQuery": 10,
        "numOpsMutation": 9,
        "numQueriesCreated": 10,
        "numMutationsCreated": 6
      }
    },
    {
      "name": "NetworkManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '202'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/configureFlowLog' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/configureFlowLog' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/ipFlowVerify' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/ipFlowVerify' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/nextHop' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/nextHop' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/packetCaptures/{packetCaptureName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '202'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/packetCaptures/{packetCaptureName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/packetCaptures/{packetCaptureName}/queryStatus' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/packetCaptures/{packetCaptureName}/queryStatus' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/packetCaptures/{packetCaptureName}/stop' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/packetCaptures/{packetCaptureName}/stop' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/queryFlowLogStatus' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/queryFlowLogStatus' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/queryTroubleshootResult' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/queryTroubleshootResult' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/securityGroupView' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/securityGroupView' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/troubleshoot' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/troubleshoot' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 19,
        "numOpsQuery": 5,
        "numOpsMutation": 14,
        "numQueriesCreated": 5,
        "numMutationsCreated": 11
      }
    },
    {
      "name": "NetworkManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '202'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/configureFlowLog' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/configureFlowLog' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/ipFlowVerify' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/ipFlowVerify' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/nextHop' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/nextHop' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/packetCaptures/{packetCaptureName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '202'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/packetCaptures/{packetCaptureName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/packetCaptures/{packetCaptureName}/queryStatus' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/packetCaptures/{packetCaptureName}/queryStatus' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/packetCaptures/{packetCaptureName}/stop' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/packetCaptures/{packetCaptureName}/stop' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/queryFlowLogStatus' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/queryFlowLogStatus' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/queryTroubleshootResult' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/queryTroubleshootResult' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/securityGroupView' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/securityGroupView' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/troubleshoot' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/troubleshoot' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 19,
        "numOpsQuery": 5,
        "numOpsMutation": 14,
        "numQueriesCreated": 5,
        "numMutationsCreated": 11
      }
    },
    {
      "name": "NetworkManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '202'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/configureFlowLog' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/configureFlowLog' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/connectivityCheck' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/connectivityCheck' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/ipFlowVerify' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/ipFlowVerify' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/nextHop' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/nextHop' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/packetCaptures/{packetCaptureName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '202'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/packetCaptures/{packetCaptureName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/packetCaptures/{packetCaptureName}/queryStatus' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/packetCaptures/{packetCaptureName}/queryStatus' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/packetCaptures/{packetCaptureName}/stop' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/packetCaptures/{packetCaptureName}/stop' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/queryFlowLogStatus' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/queryFlowLogStatus' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/queryTroubleshootResult' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/queryTroubleshootResult' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/securityGroupView' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/securityGroupView' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/troubleshoot' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/troubleshoot' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"A key-value pair that provides additional context on the issue.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 20,
        "numOpsQuery": 5,
        "numOpsMutation": 15,
        "numQueriesCreated": 5,
        "numMutationsCreated": 12
      }
    },
    {
      "name": "NetworkManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '202'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/configureFlowLog' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/configureFlowLog' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/connectivityCheck' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/connectivityCheck' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/ipFlowVerify' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/ipFlowVerify' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/nextHop' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/nextHop' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/packetCaptures/{packetCaptureName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '202'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/packetCaptures/{packetCaptureName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/packetCaptures/{packetCaptureName}/queryStatus' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/packetCaptures/{packetCaptureName}/queryStatus' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/packetCaptures/{packetCaptureName}/stop' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/packetCaptures/{packetCaptureName}/stop' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/queryFlowLogStatus' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/queryFlowLogStatus' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/queryTroubleshootResult' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/queryTroubleshootResult' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/securityGroupView' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/securityGroupView' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/troubleshoot' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/troubleshoot' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"A key-value pair that provides additional context on the issue.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 20,
        "numOpsQuery": 5,
        "numOpsMutation": 15,
        "numQueriesCreated": 5,
        "numMutationsCreated": 12
      }
    },
    {
      "name": "NetworkManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '202'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/configureFlowLog' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/configureFlowLog' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/connectivityCheck' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/connectivityCheck' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/ipFlowVerify' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/ipFlowVerify' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/nextHop' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/nextHop' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/packetCaptures/{packetCaptureName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '202'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/packetCaptures/{packetCaptureName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/packetCaptures/{packetCaptureName}/queryStatus' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/packetCaptures/{packetCaptureName}/queryStatus' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/packetCaptures/{packetCaptureName}/stop' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/packetCaptures/{packetCaptureName}/stop' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/queryFlowLogStatus' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/queryFlowLogStatus' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/queryTroubleshootResult' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/queryTroubleshootResult' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/securityGroupView' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/securityGroupView' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/troubleshoot' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/troubleshoot' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"A key-value pair that provides additional context on the issue.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 20,
        "numOpsQuery": 5,
        "numOpsMutation": 15,
        "numQueriesCreated": 5,
        "numMutationsCreated": 12
      }
    },
    {
      "name": "NetworkManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '202'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/availableProvidersList' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/availableProvidersList' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/azureReachabilityReport' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/azureReachabilityReport' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/configureFlowLog' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/configureFlowLog' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/connectivityCheck' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/connectivityCheck' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/ipFlowVerify' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/ipFlowVerify' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/nextHop' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/nextHop' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/packetCaptures/{packetCaptureName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '202'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/packetCaptures/{packetCaptureName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/packetCaptures/{packetCaptureName}/queryStatus' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/packetCaptures/{packetCaptureName}/queryStatus' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/packetCaptures/{packetCaptureName}/stop' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/packetCaptures/{packetCaptureName}/stop' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/queryFlowLogStatus' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/queryFlowLogStatus' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/queryTroubleshootResult' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/queryTroubleshootResult' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/securityGroupView' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/securityGroupView' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/troubleshoot' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/troubleshoot' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"A key-value pair that provides additional context on the issue.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 22,
        "numOpsQuery": 5,
        "numOpsMutation": 17,
        "numQueriesCreated": 5,
        "numMutationsCreated": 14
      }
    },
    {
      "name": "NetworkManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '202'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/availableProvidersList' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/availableProvidersList' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/azureReachabilityReport' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/azureReachabilityReport' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/configureFlowLog' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/configureFlowLog' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/connectivityCheck' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/connectivityCheck' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/ipFlowVerify' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/ipFlowVerify' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/nextHop' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/nextHop' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/packetCaptures/{packetCaptureName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '202'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/packetCaptures/{packetCaptureName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/packetCaptures/{packetCaptureName}/queryStatus' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/packetCaptures/{packetCaptureName}/queryStatus' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/packetCaptures/{packetCaptureName}/stop' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/packetCaptures/{packetCaptureName}/stop' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/queryFlowLogStatus' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/queryFlowLogStatus' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/queryTroubleshootResult' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/queryTroubleshootResult' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/securityGroupView' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/securityGroupView' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/troubleshoot' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/troubleshoot' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"A key-value pair that provides additional context on the issue.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 22,
        "numOpsQuery": 5,
        "numOpsMutation": 17,
        "numQueriesCreated": 5,
        "numMutationsCreated": 14
      }
    },
    {
      "name": "NetworkManagementClient",
      "report": {
        "warnings": [],
        "numOps": 1,
        "numOpsQuery": 1,
        "numOpsMutation": 0,
        "numQueriesCreated": 1,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "NetworkManagementClient",
      "report": {
        "warnings": [],
        "numOps": 1,
        "numOpsQuery": 1,
        "numOpsMutation": 0,
        "numQueriesCreated": 1,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "NetworkManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPAddresses/{publicIpAddressName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPAddresses/{publicIpAddressName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPAddresses/{publicIpAddressName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPAddresses/{publicIpAddressName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 5,
        "numOpsQuery": 3,
        "numOpsMutation": 2,
        "numQueriesCreated": 3,
        "numMutationsCreated": 1
      }
    },
    {
      "name": "NetworkManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPAddresses/{publicIpAddressName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPAddresses/{publicIpAddressName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPAddresses/{publicIpAddressName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPAddresses/{publicIpAddressName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 5,
        "numOpsQuery": 3,
        "numOpsMutation": 2,
        "numQueriesCreated": 3,
        "numMutationsCreated": 1
      }
    },
    {
      "name": "NetworkManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPAddresses/{publicIpAddressName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPAddresses/{publicIpAddressName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPAddresses/{publicIpAddressName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPAddresses/{publicIpAddressName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 5,
        "numOpsQuery": 3,
        "numOpsMutation": 2,
        "numQueriesCreated": 3,
        "numMutationsCreated": 1
      }
    },
    {
      "name": "NetworkManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPAddresses/{publicIpAddressName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPAddresses/{publicIpAddressName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPAddresses/{publicIpAddressName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPAddresses/{publicIpAddressName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 5,
        "numOpsQuery": 3,
        "numOpsMutation": 2,
        "numQueriesCreated": 3,
        "numMutationsCreated": 1
      }
    },
    {
      "name": "NetworkManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPAddresses/{publicIpAddressName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPAddresses/{publicIpAddressName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPAddresses/{publicIpAddressName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPAddresses/{publicIpAddressName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 5,
        "numOpsQuery": 3,
        "numOpsMutation": 2,
        "numQueriesCreated": 3,
        "numMutationsCreated": 1
      }
    },
    {
      "name": "NetworkManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPAddresses/{publicIpAddressName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPAddresses/{publicIpAddressName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPAddresses/{publicIpAddressName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPAddresses/{publicIpAddressName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 5,
        "numOpsQuery": 3,
        "numOpsMutation": 2,
        "numQueriesCreated": 3,
        "numMutationsCreated": 1
      }
    },
    {
      "name": "NetworkManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPAddresses/{publicIpAddressName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPAddresses/{publicIpAddressName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPAddresses/{publicIpAddressName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPAddresses/{publicIpAddressName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 5,
        "numOpsQuery": 3,
        "numOpsMutation": 2,
        "numQueriesCreated": 3,
        "numMutationsCreated": 1
      }
    },
    {
      "name": "NetworkManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPAddresses/{publicIpAddressName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPAddresses/{publicIpAddressName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPAddresses/{publicIpAddressName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPAddresses/{publicIpAddressName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 5,
        "numOpsQuery": 3,
        "numOpsMutation": 2,
        "numQueriesCreated": 3,
        "numMutationsCreated": 1
      }
    },
    {
      "name": "NetworkManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeFilters/{routeFilterName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeFilters/{routeFilterName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeFilters/{routeFilterName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeFilters/{routeFilterName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeFilters/{routeFilterName}/routeFilterRules/{ruleName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeFilters/{routeFilterName}/routeFilterRules/{ruleName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeFilters/{routeFilterName}/routeFilterRules/{ruleName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeFilters/{routeFilterName}/routeFilterRules/{ruleName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 9,
        "numOpsQuery": 5,
        "numOpsMutation": 4,
        "numQueriesCreated": 5,
        "numMutationsCreated": 2
      }
    },
    {
      "name": "NetworkManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeFilters/{routeFilterName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeFilters/{routeFilterName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeFilters/{routeFilterName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeFilters/{routeFilterName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeFilters/{routeFilterName}/routeFilterRules/{ruleName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeFilters/{routeFilterName}/routeFilterRules/{ruleName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeFilters/{routeFilterName}/routeFilterRules/{ruleName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeFilters/{routeFilterName}/routeFilterRules/{ruleName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 9,
        "numOpsQuery": 5,
        "numOpsMutation": 4,
        "numQueriesCreated": 5,
        "numMutationsCreated": 2
      }
    },
    {
      "name": "NetworkManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeFilters/{routeFilterName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeFilters/{routeFilterName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeFilters/{routeFilterName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeFilters/{routeFilterName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeFilters/{routeFilterName}/routeFilterRules/{ruleName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeFilters/{routeFilterName}/routeFilterRules/{ruleName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeFilters/{routeFilterName}/routeFilterRules/{ruleName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeFilters/{routeFilterName}/routeFilterRules/{ruleName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 9,
        "numOpsQuery": 5,
        "numOpsMutation": 4,
        "numQueriesCreated": 5,
        "numMutationsCreated": 2
      }
    },
    {
      "name": "NetworkManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeFilters/{routeFilterName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeFilters/{routeFilterName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeFilters/{routeFilterName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeFilters/{routeFilterName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeFilters/{routeFilterName}/routeFilterRules/{ruleName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeFilters/{routeFilterName}/routeFilterRules/{ruleName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeFilters/{routeFilterName}/routeFilterRules/{ruleName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeFilters/{routeFilterName}/routeFilterRules/{ruleName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 9,
        "numOpsQuery": 5,
        "numOpsMutation": 4,
        "numQueriesCreated": 5,
        "numMutationsCreated": 2
      }
    },
    {
      "name": "NetworkManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeFilters/{routeFilterName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeFilters/{routeFilterName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeFilters/{routeFilterName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeFilters/{routeFilterName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeFilters/{routeFilterName}/routeFilterRules/{ruleName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeFilters/{routeFilterName}/routeFilterRules/{ruleName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeFilters/{routeFilterName}/routeFilterRules/{ruleName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeFilters/{routeFilterName}/routeFilterRules/{ruleName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 9,
        "numOpsQuery": 5,
        "numOpsMutation": 4,
        "numQueriesCreated": 5,
        "numMutationsCreated": 2
      }
    },
    {
      "name": "NetworkManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeFilters/{routeFilterName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeFilters/{routeFilterName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeFilters/{routeFilterName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeFilters/{routeFilterName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeFilters/{routeFilterName}/routeFilterRules/{ruleName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeFilters/{routeFilterName}/routeFilterRules/{ruleName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeFilters/{routeFilterName}/routeFilterRules/{ruleName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeFilters/{routeFilterName}/routeFilterRules/{ruleName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 9,
        "numOpsQuery": 5,
        "numOpsMutation": 4,
        "numQueriesCreated": 5,
        "numMutationsCreated": 2
      }
    },
    {
      "name": "NetworkManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/{routeTableName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/{routeTableName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/{routeTableName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/{routeTableName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/{routeTableName}/routes/{routeName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/{routeTableName}/routes/{routeName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/{routeTableName}/routes/{routeName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/{routeTableName}/routes/{routeName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 9,
        "numOpsQuery": 5,
        "numOpsMutation": 4,
        "numQueriesCreated": 5,
        "numMutationsCreated": 2
      }
    },
    {
      "name": "NetworkManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/{routeTableName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/{routeTableName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/{routeTableName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/{routeTableName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/{routeTableName}/routes/{routeName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/{routeTableName}/routes/{routeName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/{routeTableName}/routes/{routeName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/{routeTableName}/routes/{routeName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 9,
        "numOpsQuery": 5,
        "numOpsMutation": 4,
        "numQueriesCreated": 5,
        "numMutationsCreated": 2
      }
    },
    {
      "name": "NetworkManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/{routeTableName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/{routeTableName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/{routeTableName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/{routeTableName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/{routeTableName}/routes/{routeName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/{routeTableName}/routes/{routeName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/{routeTableName}/routes/{routeName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/{routeTableName}/routes/{routeName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 9,
        "numOpsQuery": 5,
        "numOpsMutation": 4,
        "numQueriesCreated": 5,
        "numMutationsCreated": 2
      }
    },
    {
      "name": "NetworkManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/{routeTableName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/{routeTableName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/{routeTableName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/{routeTableName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/{routeTableName}/routes/{routeName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/{routeTableName}/routes/{routeName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/{routeTableName}/routes/{routeName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/{routeTableName}/routes/{routeName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 9,
        "numOpsQuery": 5,
        "numOpsMutation": 4,
        "numQueriesCreated": 5,
        "numMutationsCreated": 2
      }
    },
    {
      "name": "NetworkManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/{routeTableName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/{routeTableName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/{routeTableName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/{routeTableName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/{routeTableName}/routes/{routeName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/{routeTableName}/routes/{routeName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/{routeTableName}/routes/{routeName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/{routeTableName}/routes/{routeName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 9,
        "numOpsQuery": 5,
        "numOpsMutation": 4,
        "numQueriesCreated": 5,
        "numMutationsCreated": 2
      }
    },
    {
      "name": "NetworkManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/{routeTableName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/{routeTableName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/{routeTableName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/{routeTableName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/{routeTableName}/routes/{routeName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/{routeTableName}/routes/{routeName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/{routeTableName}/routes/{routeName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/{routeTableName}/routes/{routeName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 9,
        "numOpsQuery": 5,
        "numOpsMutation": 4,
        "numQueriesCreated": 5,
        "numMutationsCreated": 2
      }
    },
    {
      "name": "NetworkManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/{routeTableName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/{routeTableName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/{routeTableName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/{routeTableName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/{routeTableName}/routes/{routeName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/{routeTableName}/routes/{routeName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/{routeTableName}/routes/{routeName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/{routeTableName}/routes/{routeName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 9,
        "numOpsQuery": 5,
        "numOpsMutation": 4,
        "numQueriesCreated": 5,
        "numMutationsCreated": 2
      }
    },
    {
      "name": "NetworkManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/{routeTableName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/{routeTableName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/{routeTableName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/{routeTableName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/{routeTableName}/routes/{routeName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/{routeTableName}/routes/{routeName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/{routeTableName}/routes/{routeName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/{routeTableName}/routes/{routeName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 9,
        "numOpsQuery": 5,
        "numOpsMutation": 4,
        "numQueriesCreated": 5,
        "numMutationsCreated": 2
      }
    },
    {
      "name": "NetworkManagementClient",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 1,
        "numOpsQuery": 1,
        "numOpsMutation": 0,
        "numQueriesCreated": 1,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "NetworkManagementClient",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 1,
        "numOpsQuery": 1,
        "numOpsMutation": 0,
        "numQueriesCreated": 1,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "NetworkManagementClient",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 1,
        "numOpsQuery": 1,
        "numOpsMutation": 0,
        "numQueriesCreated": 1,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "NetworkManagementClient",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 1,
        "numOpsQuery": 1,
        "numOpsMutation": 0,
        "numQueriesCreated": 1,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "NetworkManagementClient",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 1,
        "numOpsQuery": 1,
        "numOpsMutation": 0,
        "numQueriesCreated": 1,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "NetworkManagementClient",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 1,
        "numOpsQuery": 1,
        "numOpsMutation": 0,
        "numQueriesCreated": 1,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "NetworkManagementClient",
      "report": {
        "warnings": [],
        "numOps": 1,
        "numOpsQuery": 1,
        "numOpsMutation": 0,
        "numQueriesCreated": 1,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "NetworkManagementClient",
      "report": {
        "warnings": [],
        "numOps": 1,
        "numOpsQuery": 1,
        "numOpsMutation": 0,
        "numQueriesCreated": 1,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "NetworkManagementClient",
      "report": {
        "warnings": [],
        "numOps": 1,
        "numOpsQuery": 1,
        "numOpsMutation": 0,
        "numQueriesCreated": 1,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "NetworkManagementClient",
      "report": {
        "warnings": [],
        "numOps": 1,
        "numOpsQuery": 1,
        "numOpsMutation": 0,
        "numQueriesCreated": 1,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "NetworkManagementClient",
      "report": {
        "warnings": [],
        "numOps": 1,
        "numOpsQuery": 1,
        "numOpsMutation": 0,
        "numQueriesCreated": 1,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "NetworkManagementClient",
      "report": {
        "warnings": [],
        "numOps": 1,
        "numOpsQuery": 1,
        "numOpsMutation": 0,
        "numQueriesCreated": 1,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "NetworkManagementClient",
      "report": {
        "warnings": [],
        "numOps": 1,
        "numOpsQuery": 1,
        "numOpsMutation": 0,
        "numQueriesCreated": 1,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "NetworkManagementClient",
      "report": {
        "warnings": [],
        "numOps": 1,
        "numOpsQuery": 1,
        "numOpsMutation": 0,
        "numQueriesCreated": 1,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "NetworkManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}/sharedkey' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}/sharedkey' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}/sharedkey/reset' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}/sharedkey/reset' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/localNetworkGateways/{localNetworkGatewayName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/localNetworkGateways/{localNetworkGatewayName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/localNetworkGateways/{localNetworkGatewayName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/localNetworkGateways/{localNetworkGatewayName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/reset' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/reset' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 17,
        "numOpsQuery": 7,
        "numOpsMutation": 10,
        "numQueriesCreated": 7,
        "numMutationsCreated": 7
      }
    },
    {
      "name": "NetworkManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}/sharedkey' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}/sharedkey' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}/sharedkey/reset' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}/sharedkey/reset' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/localNetworkGateways/{localNetworkGatewayName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/localNetworkGateways/{localNetworkGatewayName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/localNetworkGateways/{localNetworkGatewayName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/localNetworkGateways/{localNetworkGatewayName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/getAdvertisedRoutes' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/getAdvertisedRoutes' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/getBgpPeerStatus' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/getBgpPeerStatus' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/getLearnedRoutes' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/getLearnedRoutes' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/reset' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/reset' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 20,
        "numOpsQuery": 7,
        "numOpsMutation": 13,
        "numQueriesCreated": 7,
        "numMutationsCreated": 10
      }
    },
    {
      "name": "NetworkManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}/sharedkey' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}/sharedkey' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}/sharedkey/reset' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}/sharedkey/reset' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/localNetworkGateways/{localNetworkGatewayName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/localNetworkGateways/{localNetworkGatewayName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/localNetworkGateways/{localNetworkGatewayName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/localNetworkGateways/{localNetworkGatewayName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/getAdvertisedRoutes' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/getAdvertisedRoutes' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/getBgpPeerStatus' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/getBgpPeerStatus' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/getLearnedRoutes' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/getLearnedRoutes' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/reset' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/reset' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 20,
        "numOpsQuery": 7,
        "numOpsMutation": 13,
        "numQueriesCreated": 7,
        "numMutationsCreated": 10
      }
    },
    {
      "name": "NetworkManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}/sharedkey' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}/sharedkey' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}/sharedkey/reset' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}/sharedkey/reset' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/localNetworkGateways/{localNetworkGatewayName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/localNetworkGateways/{localNetworkGatewayName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/localNetworkGateways/{localNetworkGatewayName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/localNetworkGateways/{localNetworkGatewayName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/getAdvertisedRoutes' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/getAdvertisedRoutes' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/getBgpPeerStatus' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/getBgpPeerStatus' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/getLearnedRoutes' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/getLearnedRoutes' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/reset' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/reset' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 20,
        "numOpsQuery": 7,
        "numOpsMutation": 13,
        "numQueriesCreated": 7,
        "numMutationsCreated": 10
      }
    },
    {
      "name": "NetworkManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}/sharedkey' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}/sharedkey' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}/sharedkey/reset' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}/sharedkey/reset' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/localNetworkGateways/{localNetworkGatewayName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/localNetworkGateways/{localNetworkGatewayName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/localNetworkGateways/{localNetworkGatewayName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/localNetworkGateways/{localNetworkGatewayName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/getAdvertisedRoutes' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/getAdvertisedRoutes' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/getBgpPeerStatus' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/getBgpPeerStatus' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/getLearnedRoutes' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/getLearnedRoutes' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/reset' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/reset' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 22,
        "numOpsQuery": 8,
        "numOpsMutation": 14,
        "numQueriesCreated": 8,
        "numMutationsCreated": 11
      }
    },
    {
      "name": "NetworkManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}/sharedkey' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}/sharedkey' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}/sharedkey/reset' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}/sharedkey/reset' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/localNetworkGateways/{localNetworkGatewayName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/localNetworkGateways/{localNetworkGatewayName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/localNetworkGateways/{localNetworkGatewayName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/localNetworkGateways/{localNetworkGatewayName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/generatevpnprofile' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/generatevpnprofile' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/getAdvertisedRoutes' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/getAdvertisedRoutes' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/getBgpPeerStatus' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/getBgpPeerStatus' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/getLearnedRoutes' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/getLearnedRoutes' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/getvpnprofilepackageurl' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/getvpnprofilepackageurl' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/reset' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/reset' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 23,
        "numOpsQuery": 8,
        "numOpsMutation": 15,
        "numQueriesCreated": 8,
        "numMutationsCreated": 12
      }
    },
    {
      "name": "NetworkManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}/sharedkey' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}/sharedkey' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}/sharedkey/reset' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}/sharedkey/reset' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/localNetworkGateways/{localNetworkGatewayName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/localNetworkGateways/{localNetworkGatewayName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/localNetworkGateways/{localNetworkGatewayName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/localNetworkGateways/{localNetworkGatewayName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/generatevpnprofile' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/generatevpnprofile' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/getAdvertisedRoutes' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/getAdvertisedRoutes' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/getBgpPeerStatus' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/getBgpPeerStatus' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/getLearnedRoutes' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/getLearnedRoutes' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/getvpnprofilepackageurl' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/getvpnprofilepackageurl' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/reset' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/reset' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 25,
        "numOpsQuery": 8,
        "numOpsMutation": 17,
        "numQueriesCreated": 8,
        "numMutationsCreated": 14
      }
    },
    {
      "name": "NetworkManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}/sharedkey' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}/sharedkey' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}/sharedkey/reset' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}/sharedkey/reset' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/localNetworkGateways/{localNetworkGatewayName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/localNetworkGateways/{localNetworkGatewayName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/localNetworkGateways/{localNetworkGatewayName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/localNetworkGateways/{localNetworkGatewayName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/generatevpnprofile' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/generatevpnprofile' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/getAdvertisedRoutes' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/getAdvertisedRoutes' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/getBgpPeerStatus' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/getBgpPeerStatus' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/getLearnedRoutes' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/getLearnedRoutes' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/getvpnprofilepackageurl' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/getvpnprofilepackageurl' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/reset' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/reset' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 25,
        "numOpsQuery": 8,
        "numOpsMutation": 17,
        "numQueriesCreated": 8,
        "numMutationsCreated": 14
      }
    },
    {
      "name": "NotificationHubsManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/AuthorizationRules/{authorizationRuleName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/AuthorizationRules/{authorizationRuleName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/notificationHubs/{notificationHubName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/notificationHubs/{notificationHubName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/notificationHubs/{notificationHubName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/notificationHubs/{notificationHubName}/AuthorizationRules/{authorizationRuleName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/notificationHubs/{notificationHubName}/AuthorizationRules/{authorizationRuleName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /{operationStatusLink}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /{operationStatusLink}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Gets or sets tags of the Namespace.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Gets or sets tags of the NotificationHub.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Gets or sets tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Gets or sets tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Gets or sets Namespace tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Gets or sets tags of the Namespace AuthorizationRules.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Gets or sets NotificationHub tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 23,
        "numOpsQuery": 6,
        "numOpsMutation": 17,
        "numQueriesCreated": 5,
        "numMutationsCreated": 13
      }
    },
    {
      "name": "NotificationHubsManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/AuthorizationRules/{authorizationRuleName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/AuthorizationRules/{authorizationRuleName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/notificationHubs/{notificationHubName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/notificationHubs/{notificationHubName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/notificationHubs/{notificationHubName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/notificationHubs/{notificationHubName}/AuthorizationRules/{authorizationRuleName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/notificationHubs/{notificationHubName}/AuthorizationRules/{authorizationRuleName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 24,
        "numOpsQuery": 9,
        "numOpsMutation": 15,
        "numQueriesCreated": 9,
        "numMutationsCreated": 11
      }
    },
    {
      "name": "NotificationHubsManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/AuthorizationRules/{authorizationRuleName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/AuthorizationRules/{authorizationRuleName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/notificationHubs/{notificationHubName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/notificationHubs/{notificationHubName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/notificationHubs/{notificationHubName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/notificationHubs/{notificationHubName}/AuthorizationRules/{authorizationRuleName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/notificationHubs/{notificationHubName}/AuthorizationRules/{authorizationRuleName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 26,
        "numOpsQuery": 9,
        "numOpsMutation": 17,
        "numQueriesCreated": 9,
        "numMutationsCreated": 13
      }
    },
    {
      "name": "Azure Log Analytics - Operations Management",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationsManagement/ManagementConfigurations/{managementConfigurationName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationsManagement/solutions/{solutionName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{providerName}/{resourceType}/{resourceName}/providers/Microsoft.OperationsManagement/ManagementAssociations/{managementAssociationName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The Json object containing the ARM template to deploy\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The Json object containing the ARM template to deploy\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 14,
        "numOpsQuery": 8,
        "numOpsMutation": 6,
        "numQueriesCreated": 8,
        "numMutationsCreated": 3
      }
    },
    {
      "name": "PowerBIDedicated",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.PowerBIDedicated/capacities/{dedicatedCapacityName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.PowerBIDedicated/capacities/{dedicatedCapacityName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.PowerBIDedicated/capacities/{dedicatedCapacityName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.PowerBIDedicated/capacities/{dedicatedCapacityName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.PowerBIDedicated/capacities/{dedicatedCapacityName}/resume' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.PowerBIDedicated/capacities/{dedicatedCapacityName}/resume' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.PowerBIDedicated/capacities/{dedicatedCapacityName}/suspend' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.PowerBIDedicated/capacities/{dedicatedCapacityName}/suspend' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Key-value pairs of additional resource provisioning properties.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Key-value pairs of additional resource provisioning properties.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 10,
        "numOpsQuery": 6,
        "numOpsMutation": 4,
        "numQueriesCreated": 6,
        "numMutationsCreated": 1
      }
    },
    {
      "name": "Power BI Embedded Management Client",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/moveResources' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.PowerBI/workspaceCollections/{workspaceCollectionName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Properties\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Property bag\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 11,
        "numOpsQuery": 5,
        "numOpsMutation": 6,
        "numQueriesCreated": 5,
        "numMutationsCreated": 4
      }
    },
    {
      "name": "iotDpsClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/provisioningServices/{provisioningServiceName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/provisioningServices/{provisioningServiceName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/provisioningServices/{provisioningServiceName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/provisioningServices/{provisioningServiceName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/provisioningServices/{provisioningServiceName}/certificates/{certificateName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/provisioningServices/{provisioningServiceName}/certificates/{certificateName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 17,
        "numOpsQuery": 8,
        "numOpsMutation": 9,
        "numQueriesCreated": 8,
        "numMutationsCreated": 7
      }
    },
    {
      "name": "iotDpsClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/provisioningServices/{provisioningServiceName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/provisioningServices/{provisioningServiceName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/provisioningServices/{provisioningServiceName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/provisioningServices/{provisioningServiceName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/provisioningServices/{provisioningServiceName}/certificates/{certificateName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/provisioningServices/{provisioningServiceName}/certificates/{certificateName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 17,
        "numOpsQuery": 8,
        "numOpsMutation": 9,
        "numQueriesCreated": 8,
        "numMutationsCreated": 7
      }
    },
    {
      "name": "RedisManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{name}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{name}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{name}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{name}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{name}/forceReboot' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{name}/forceReboot' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"All Redis Settings. Few possible keys: rdb-backup-enabled,rdb-storage-connection-string,rdb-backup-frequency,maxmemory-delta,maxmemory-policy,notify-keyspace-events,maxmemory-samples,slowlog-log-slower-than,slowlog-max-len,list-max-ziplist-entries,list-max-ziplist-value,hash-max-ziplist-entries,hash-max-ziplist-value,set-max-intset-entries,zset-max-ziplist-entries,zset-max-ziplist-value etc.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"tenantSettings\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"All Redis Settings. Few possible keys: rdb-backup-enabled,rdb-storage-connection-string,rdb-backup-frequency,maxmemory-delta,maxmemory-policy,notify-keyspace-events,maxmemory-samples,slowlog-log-slower-than,slowlog-max-len,list-max-ziplist-entries,list-max-ziplist-value,hash-max-ziplist-entries,hash-max-ziplist-value,set-max-intset-entries,zset-max-ziplist-entries,zset-max-ziplist-value etc.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"tenantSettings\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"All Redis Settings. Few possible keys: rdb-backup-enabled,rdb-storage-connection-string,rdb-backup-frequency,maxmemory-delta,maxmemory-policy,notify-keyspace-events,maxmemory-samples,slowlog-log-slower-than,slowlog-max-len,list-max-ziplist-entries,list-max-ziplist-value,hash-max-ziplist-entries,hash-max-ziplist-value,set-max-intset-entries,zset-max-ziplist-entries,zset-max-ziplist-value etc.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"tenantSettings\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 8,
        "numOpsQuery": 3,
        "numOpsMutation": 5,
        "numQueriesCreated": 3,
        "numMutationsCreated": 3
      }
    },
    {
      "name": "RedisManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{cacheName}/firewallRules/{ruleName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{cacheName}/firewallRules/{ruleName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{cacheName}/firewallRules/{ruleName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{cacheName}/firewallRules/{ruleName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{name}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{name}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{name}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{name}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{name}/export' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{name}/export' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{name}/import' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{name}/import' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{name}/patchSchedules/default' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{name}/patchSchedules/default' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{name}/patchSchedules/default' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{name}/patchSchedules/default' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"All Redis Settings. Few possible keys: rdb-backup-enabled,rdb-storage-connection-string,rdb-backup-frequency,maxmemory-delta,maxmemory-policy,notify-keyspace-events,maxmemory-samples,slowlog-log-slower-than,slowlog-max-len,list-max-ziplist-entries,list-max-ziplist-value,hash-max-ziplist-entries,hash-max-ziplist-value,set-max-intset-entries,zset-max-ziplist-entries,zset-max-ziplist-value etc.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"tenantSettings\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"All Redis Settings. Few possible keys: rdb-backup-enabled,rdb-storage-connection-string,rdb-backup-frequency,maxmemory-delta,maxmemory-policy,notify-keyspace-events,maxmemory-samples,slowlog-log-slower-than,slowlog-max-len,list-max-ziplist-entries,list-max-ziplist-value,hash-max-ziplist-entries,hash-max-ziplist-value,set-max-intset-entries,zset-max-ziplist-entries,zset-max-ziplist-value etc.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"tenantSettings\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 18,
        "numOpsQuery": 7,
        "numOpsMutation": 11,
        "numQueriesCreated": 7,
        "numMutationsCreated": 6
      }
    },
    {
      "name": "RedisManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{cacheName}/firewallRules/{ruleName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{cacheName}/firewallRules/{ruleName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{cacheName}/firewallRules/{ruleName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{cacheName}/firewallRules/{ruleName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{name}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{name}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{name}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{name}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{name}/export' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{name}/export' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{name}/import' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{name}/import' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{name}/linkedServers/{linkedServerName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{name}/linkedServers/{linkedServerName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{name}/linkedServers/{linkedServerName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{name}/patchSchedules/default' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{name}/patchSchedules/default' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{name}/patchSchedules/default' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{name}/patchSchedules/default' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\",\"x-ms-mutability\":[\"read\",\"create\",\"update\"]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"All Redis Settings. Few possible keys: rdb-backup-enabled,rdb-storage-connection-string,rdb-backup-frequency,maxmemory-delta,maxmemory-policy,notify-keyspace-events,maxmemory-samples,slowlog-log-slower-than,slowlog-max-len,list-max-ziplist-entries,list-max-ziplist-value,hash-max-ziplist-entries,hash-max-ziplist-value,set-max-intset-entries,zset-max-ziplist-entries,zset-max-ziplist-value etc.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"tenantSettings\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\",\"x-ms-mutability\":[\"read\",\"create\",\"update\"]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"All Redis Settings. Few possible keys: rdb-backup-enabled,rdb-storage-connection-string,rdb-backup-frequency,maxmemory-delta,maxmemory-policy,notify-keyspace-events,maxmemory-samples,slowlog-log-slower-than,slowlog-max-len,list-max-ziplist-entries,list-max-ziplist-value,hash-max-ziplist-entries,hash-max-ziplist-value,set-max-intset-entries,zset-max-ziplist-entries,zset-max-ziplist-value etc.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"tenantSettings\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 22,
        "numOpsQuery": 9,
        "numOpsMutation": 13,
        "numQueriesCreated": 9,
        "numMutationsCreated": 7
      }
    },
    {
      "name": "RedisManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{cacheName}/firewallRules/{ruleName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{cacheName}/firewallRules/{ruleName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{cacheName}/firewallRules/{ruleName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{cacheName}/firewallRules/{ruleName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{name}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{name}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{name}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{name}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{name}/export' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{name}/export' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{name}/import' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{name}/import' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{name}/linkedServers/{linkedServerName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{name}/linkedServers/{linkedServerName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{name}/linkedServers/{linkedServerName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{name}/patchSchedules/default' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{name}/patchSchedules/default' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{name}/patchSchedules/default' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{name}/patchSchedules/default' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\",\"x-ms-mutability\":[\"read\",\"create\",\"update\"]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"All Redis Settings. Few possible keys: rdb-backup-enabled,rdb-storage-connection-string,rdb-backup-frequency,maxmemory-delta,maxmemory-policy,notify-keyspace-events,maxmemory-samples,slowlog-log-slower-than,slowlog-max-len,list-max-ziplist-entries,list-max-ziplist-value,hash-max-ziplist-entries,hash-max-ziplist-value,set-max-intset-entries,zset-max-ziplist-entries,zset-max-ziplist-value etc.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"A dictionary of tenant settings\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"All Redis Settings. Few possible keys: rdb-backup-enabled,rdb-storage-connection-string,rdb-backup-frequency,maxmemory-delta,maxmemory-policy,notify-keyspace-events,maxmemory-samples,slowlog-log-slower-than,slowlog-max-len,list-max-ziplist-entries,list-max-ziplist-value,hash-max-ziplist-entries,hash-max-ziplist-value,set-max-intset-entries,zset-max-ziplist-entries,zset-max-ziplist-value etc.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"A dictionary of tenant settings\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 22,
        "numOpsQuery": 9,
        "numOpsMutation": 13,
        "numQueriesCreated": 9,
        "numMutationsCreated": 7
      }
    },
    {
      "name": "Relay",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}/AuthorizationRules/{authorizationRuleName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}/AuthorizationRules/{authorizationRuleName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}/HybridConnections/{hybridConnectionName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}/HybridConnections/{hybridConnectionName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}/HybridConnections/{hybridConnectionName}/authorizationRules/{authorizationRuleName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}/HybridConnections/{hybridConnectionName}/authorizationRules/{authorizationRuleName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}/WcfRelays/{relayName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}/WcfRelays/{relayName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}/WcfRelays/{relayName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}/WcfRelays/{relayName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}/WcfRelays/{relayName}/authorizationRules/{authorizationRuleName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}/WcfRelays/{relayName}/authorizationRules/{authorizationRuleName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 33,
        "numOpsQuery": 14,
        "numOpsMutation": 19,
        "numQueriesCreated": 14,
        "numMutationsCreated": 13
      }
    },
    {
      "name": "Relay",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}/authorizationRules/{authorizationRuleName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}/authorizationRules/{authorizationRuleName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}/hybridConnections/{hybridConnectionName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}/hybridConnections/{hybridConnectionName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}/hybridConnections/{hybridConnectionName}/authorizationRules/{authorizationRuleName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}/hybridConnections/{hybridConnectionName}/authorizationRules/{authorizationRuleName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}/wcfRelays/{relayName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}/wcfRelays/{relayName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}/wcfRelays/{relayName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}/wcfRelays/{relayName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}/wcfRelays/{relayName}/authorizationRules/{authorizationRuleName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}/wcfRelays/{relayName}/authorizationRules/{authorizationRuleName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 33,
        "numOpsQuery": 14,
        "numOpsMutation": 19,
        "numQueriesCreated": 14,
        "numMutationsCreated": 13
      }
    },
    {
      "name": "Azure Reservation",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/merge' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/merge' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/split' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/split' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          }
        ],
        "numOps": 10,
        "numOpsQuery": 8,
        "numOpsMutation": 2,
        "numQueriesCreated": 8,
        "numMutationsCreated": 2
      }
    },
    {
      "name": "Microsoft.ResourceHealth",
      "report": {
        "warnings": [],
        "numOps": 5,
        "numOpsQuery": 5,
        "numOpsMutation": 0,
        "numQueriesCreated": 5,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Microsoft.ResourceHealth",
      "report": {
        "warnings": [],
        "numOps": 5,
        "numOpsQuery": 5,
        "numOpsMutation": 0,
        "numQueriesCreated": 5,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "FeatureClient",
      "report": {
        "warnings": [],
        "numOps": 4,
        "numOpsQuery": 3,
        "numOpsMutation": 1,
        "numQueriesCreated": 3,
        "numMutationsCreated": 1
      }
    },
    {
      "name": "ManagementLinkClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /{linkId}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /{linkId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /{linkId}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /{linkId}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          }
        ],
        "numOps": 5,
        "numOpsQuery": 3,
        "numOpsMutation": 2,
        "numQueriesCreated": 3,
        "numMutationsCreated": 1
      }
    },
    {
      "name": "ManagementLockClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/providers/Microsoft.Authorization/locks/{lockName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/providers/Microsoft.Authorization/locks/{lockName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/providers/Microsoft.Authorization/locks/{lockName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/providers/Microsoft.Authorization/locks/{lockName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Authorization/locks/{lockName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Authorization/locks/{lockName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Authorization/locks/{lockName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Authorization/locks/{lockName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}/providers/Microsoft.Authorization/locks/{lockName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}/providers/Microsoft.Authorization/locks/{lockName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}/providers/Microsoft.Authorization/locks/{lockName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}/providers/Microsoft.Authorization/locks/{lockName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /{scope}/providers/Microsoft.Authorization/locks/{lockName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /{scope}/providers/Microsoft.Authorization/locks/{lockName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /{scope}/providers/Microsoft.Authorization/locks/{lockName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /{scope}/providers/Microsoft.Authorization/locks/{lockName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          }
        ],
        "numOps": 15,
        "numOpsQuery": 7,
        "numOpsMutation": 8,
        "numQueriesCreated": 7,
        "numMutationsCreated": 4
      }
    },
    {
      "name": "ManagedApplicationClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Solutions/applianceDefinitions/{applianceDefinitionName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Solutions/applianceDefinitions/{applianceDefinitionName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Solutions/applianceDefinitions/{applianceDefinitionName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Solutions/applianceDefinitions/{applianceDefinitionName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Solutions/appliances/{applianceName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '202'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Solutions/appliances/{applianceName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Solutions/appliances/{applianceName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Solutions/appliances/{applianceName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /{applianceDefinitionId}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /{applianceDefinitionId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /{applianceDefinitionId}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /{applianceDefinitionId}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /{applianceId}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '202'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /{applianceId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /{applianceId}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /{applianceId}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Name and value pairs that define the appliance outputs.\",\"readOnly\":true,\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Name and value pairs that define the appliance parameters. It can be a JObject or a well formed JSON string.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Name and value pairs that define the appliance outputs.\",\"readOnly\":true,\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Name and value pairs that define the appliance parameters. It can be a JObject or a well formed JSON string.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 15,
        "numOpsQuery": 7,
        "numOpsMutation": 8,
        "numQueriesCreated": 7,
        "numMutationsCreated": 4
      }
    },
    {
      "name": "ApplicationClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Solutions/applicationDefinitions/{applicationDefinitionName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Solutions/applicationDefinitions/{applicationDefinitionName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Solutions/applicationDefinitions/{applicationDefinitionName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Solutions/applicationDefinitions/{applicationDefinitionName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Solutions/applications/{applicationName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '202'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Solutions/applications/{applicationName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Solutions/applications/{applicationName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Solutions/applications/{applicationName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /{applicationDefinitionId}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /{applicationDefinitionId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /{applicationDefinitionId}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /{applicationDefinitionId}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /{applicationId}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '202'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /{applicationId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /{applicationId}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /{applicationId}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Name and value pairs that define the managed application outputs.\",\"readOnly\":true,\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Name and value pairs that define the managed application parameters. It can be a JObject or a well formed JSON string.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The createUiDefinition json for the backing template with Microsoft.Solutions/applications resource. It can be a JObject or well-formed JSON string.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The inline main template json which has resources to be provisioned. It can be a JObject or well-formed JSON string.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The createUiDefinition json for the backing template with Microsoft.Solutions/applications resource. It can be a JObject or well-formed JSON string.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The inline main template json which has resources to be provisioned. It can be a JObject or well-formed JSON string.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Name and value pairs that define the managed application outputs.\",\"readOnly\":true,\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Name and value pairs that define the managed application parameters. It can be a JObject or a well formed JSON string.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 15,
        "numOpsQuery": 7,
        "numOpsMutation": 8,
        "numQueriesCreated": 7,
        "numMutationsCreated": 4
      }
    },
    {
      "name": "Management Groups",
      "report": {
        "warnings": [],
        "numOps": 3,
        "numOpsQuery": 3,
        "numOpsMutation": 0,
        "numQueriesCreated": 3,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "PolicyClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/providers/Microsoft.Authorization/policydefinitions/{policyDefinitionName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/providers/Microsoft.Authorization/policydefinitions/{policyDefinitionName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The policy rule.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The policy rule.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 13,
        "numOpsQuery": 7,
        "numOpsMutation": 6,
        "numQueriesCreated": 7,
        "numMutationsCreated": 5
      }
    },
    {
      "name": "PolicyClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/providers/Microsoft.Authorization/policydefinitions/{policyDefinitionName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/providers/Microsoft.Authorization/policydefinitions/{policyDefinitionName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The policy rule.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The policy rule.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 13,
        "numOpsQuery": 7,
        "numOpsMutation": 6,
        "numQueriesCreated": 7,
        "numMutationsCreated": 5
      }
    },
    {
      "name": "PolicyClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Required if a parameter is used in policy rule.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Required if a parameter is used in policy rule.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 9,
        "numOpsQuery": 5,
        "numOpsMutation": 4,
        "numQueriesCreated": 5,
        "numMutationsCreated": 4
      }
    },
    {
      "name": "PolicyClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The policy assignment metadata.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Required if a parameter is used in policy rule.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The policy assignment metadata.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Required if a parameter is used in policy rule.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 9,
        "numOpsQuery": 5,
        "numOpsMutation": 4,
        "numQueriesCreated": 5,
        "numMutationsCreated": 4
      }
    },
    {
      "name": "PolicyClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /providers/Microsoft.Management/managementgroups/{managementGroupId}/providers/Microsoft.Authorization/policyDefinitions/{policyDefinitionName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /providers/Microsoft.Management/managementgroups/{managementGroupId}/providers/Microsoft.Authorization/policyDefinitions/{policyDefinitionName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/providers/Microsoft.Authorization/policyDefinitions/{policyDefinitionName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/providers/Microsoft.Authorization/policyDefinitions/{policyDefinitionName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The policy definition metadata.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Required if a parameter is used in policy rule.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The policy rule.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The policy definition metadata.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Required if a parameter is used in policy rule.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The policy rule.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 10,
        "numOpsQuery": 6,
        "numOpsMutation": 4,
        "numQueriesCreated": 6,
        "numMutationsCreated": 2
      }
    },
    {
      "name": "PolicyClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /providers/Microsoft.Management/managementgroups/{managementGroupId}/providers/Microsoft.Authorization/policySetDefinitions/{policySetDefinitionName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /providers/Microsoft.Management/managementgroups/{managementGroupId}/providers/Microsoft.Authorization/policySetDefinitions/{policySetDefinitionName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /providers/Microsoft.Management/managementgroups/{managementGroupId}/providers/Microsoft.Authorization/policySetDefinitions/{policySetDefinitionName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /providers/Microsoft.Management/managementgroups/{managementGroupId}/providers/Microsoft.Authorization/policySetDefinitions/{policySetDefinitionName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/providers/Microsoft.Authorization/policySetDefinitions/{policySetDefinitionName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/providers/Microsoft.Authorization/policySetDefinitions/{policySetDefinitionName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/providers/Microsoft.Authorization/policySetDefinitions/{policySetDefinitionName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/providers/Microsoft.Authorization/policySetDefinitions/{policySetDefinitionName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The policy set definition metadata.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The policy set definition parameters that can be used in policy definition references.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Required if a parameter is used in policy rule.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The policy set definition metadata.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The policy set definition parameters that can be used in policy definition references.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Required if a parameter is used in policy rule.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 10,
        "numOpsQuery": 6,
        "numOpsMutation": 4,
        "numQueriesCreated": 6,
        "numMutationsCreated": 2
      }
    },
    {
      "name": "SubscriptionClient",
      "report": {
        "warnings": [],
        "numOps": 4,
        "numOpsQuery": 4,
        "numOpsMutation": 0,
        "numQueriesCreated": 4,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "ResourceManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{sourceResourceGroupName}/moveResources' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '202'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{sourceResourceGroupName}/moveResources' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'HEAD /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/{deploymentName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '202'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/{deploymentName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'HEAD /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/{deploymentName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/{deploymentName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/{deploymentName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/{deploymentName}/cancel' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'HEAD /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/tagNames/{tagName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/tagNames/{tagName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/tagNames/{tagName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/tagNames/{tagName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/tagNames/{tagName}/tagValues/{tagValue}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/tagNames/{tagName}/tagValues/{tagValue}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/tagNames/{tagName}/tagValues/{tagValue}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/tagNames/{tagName}/tagValues/{tagValue}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /{resourceId}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /{resourceId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'HEAD /{resourceId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /{resourceId}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /{resourceId}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"The additional properties. \",\"type\":\"string\"},\"description\":\"The properties.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The resource properties.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"The additional properties. \",\"type\":\"string\"},\"description\":\"The tags attached to the resource group.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Operation status message.\",\"readOnly\":true,\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"HTTP message content.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Key/value pairs that represent deploymentoutput.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Deployment parameters. Use only one of Parameters or ParametersLink.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The template content. Use only one of Template or TemplateLink.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"The additional properties. \",\"type\":\"string\"},\"description\":\"The tags attached to the resource group.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The template content.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Name and value pairs that define the deployment parameters for the template. You use this element when you want to provide the parameter values directly in the request rather than link to an existing parameter file. Use either the parametersLink property or the parameters property, but not both. It can be a JObject or a well formed JSON string.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The template content. You use this element when you want to pass the template syntax directly in the request rather than link to an existing template. It can be a JObject or well-formed JSON string. Use either the templateLink property or the template property, but not both.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The template content.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The resource properties.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 36,
        "numOpsQuery": 13,
        "numOpsMutation": 23,
        "numQueriesCreated": 13,
        "numMutationsCreated": 11
      }
    },
    {
      "name": "ResourceManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{sourceResourceGroupName}/moveResources' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '202'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{sourceResourceGroupName}/moveResources' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{sourceResourceGroupName}/validateMoveResources' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '202'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{sourceResourceGroupName}/validateMoveResources' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'HEAD /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/{deploymentName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '202'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/{deploymentName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'HEAD /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/{deploymentName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/{deploymentName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/{deploymentName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/{deploymentName}/cancel' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'HEAD /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/tagNames/{tagName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/tagNames/{tagName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/tagNames/{tagName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/tagNames/{tagName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/tagNames/{tagName}/tagValues/{tagValue}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/tagNames/{tagName}/tagValues/{tagValue}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/tagNames/{tagName}/tagValues/{tagValue}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/tagNames/{tagName}/tagValues/{tagValue}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /{resourceId}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /{resourceId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'HEAD /{resourceId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /{resourceId}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /{resourceId}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"The additional properties. \",\"type\":\"string\"},\"description\":\"The properties.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The resource properties.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"The additional properties. \",\"type\":\"string\"},\"description\":\"The tags attached to the resource group.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Operation status message.\",\"readOnly\":true,\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"HTTP message content.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Key/value pairs that represent deploymentoutput.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Deployment parameters. Use only one of Parameters or ParametersLink.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The template content. Use only one of Template or TemplateLink.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"The additional properties. \",\"type\":\"string\"},\"description\":\"The tags attached to the resource group.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The template content.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Name and value pairs that define the deployment parameters for the template. You use this element when you want to provide the parameter values directly in the request rather than link to an existing parameter file. Use either the parametersLink property or the parameters property, but not both. It can be a JObject or a well formed JSON string.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The template content. You use this element when you want to pass the template syntax directly in the request rather than link to an existing template. It can be a JObject or well-formed JSON string. Use either the templateLink property or the template property, but not both.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The template content.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The resource properties.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 37,
        "numOpsQuery": 13,
        "numOpsMutation": 24,
        "numQueriesCreated": 13,
        "numMutationsCreated": 11
      }
    },
    {
      "name": "SearchManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Search/searchServices/{serviceName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Search/searchServices/{serviceName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Search/searchServices/{serviceName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Search/searchServices/{serviceName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Tags to help categorize the Search service in the Azure Portal.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Tags to help categorize the Search service in the Azure Portal.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 5,
        "numOpsQuery": 2,
        "numOpsMutation": 3,
        "numQueriesCreated": 2,
        "numMutationsCreated": 2
      }
    },
    {
      "name": "SearchManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Search/searchServices/{searchServiceName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Search/searchServices/{searchServiceName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Search/searchServices/{searchServiceName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Search/searchServices/{searchServiceName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Search/searchServices/{searchServiceName}/deleteQueryKey/{key}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Search/searchServices/{searchServiceName}/deleteQueryKey/{key}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Tags to help categorize the resource in the Azure portal.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Tags to help categorize the resource in the Azure portal.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 10,
        "numOpsQuery": 3,
        "numOpsMutation": 7,
        "numQueriesCreated": 3,
        "numMutationsCreated": 5
      }
    },
    {
      "name": "ServerManagement",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServerManagement/gateways/{gatewayName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServerManagement/gateways/{gatewayName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServerManagement/gateways/{gatewayName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServerManagement/gateways/{gatewayName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServerManagement/gateways/{gatewayName}/profile' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServerManagement/gateways/{gatewayName}/profile' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServerManagement/gateways/{gatewayName}/regenerateprofile' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServerManagement/gateways/{gatewayName}/regenerateprofile' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServerManagement/gateways/{gatewayName}/upgradetolatest' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServerManagement/gateways/{gatewayName}/upgradetolatest' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServerManagement/nodes/{nodeName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServerManagement/nodes/{nodeName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServerManagement/nodes/{nodeName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServerManagement/nodes/{nodeName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServerManagement/nodes/{nodeName}/sessions/{session}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServerManagement/nodes/{nodeName}/sessions/{session}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServerManagement/nodes/{nodeName}/sessions/{session}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServerManagement/nodes/{nodeName}/sessions/{session}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServerManagement/nodes/{nodeName}/sessions/{session}/features/powerShellConsole/pssessions/{pssession}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServerManagement/nodes/{nodeName}/sessions/{session}/features/powerShellConsole/pssessions/{pssession}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServerManagement/nodes/{nodeName}/sessions/{session}/features/powerShellConsole/pssessions/{pssession}/cancel' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServerManagement/nodes/{nodeName}/sessions/{session}/features/powerShellConsole/pssessions/{pssession}/cancel' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServerManagement/nodes/{nodeName}/sessions/{session}/features/powerShellConsole/pssessions/{pssession}/invokeCommand' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServerManagement/nodes/{nodeName}/sessions/{session}/features/powerShellConsole/pssessions/{pssession}/invokeCommand' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource Manager Resource Tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource Manager Resource Tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource Manager Resource Tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource Manager Resource Tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource Manager Resource Tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 22,
        "numOpsQuery": 9,
        "numOpsMutation": 13,
        "numQueriesCreated": 9,
        "numMutationsCreated": 8
      }
    },
    {
      "name": "ServerManagement",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServerManagement/gateways/{gatewayName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServerManagement/gateways/{gatewayName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServerManagement/gateways/{gatewayName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServerManagement/gateways/{gatewayName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServerManagement/gateways/{gatewayName}/profile' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServerManagement/gateways/{gatewayName}/profile' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServerManagement/gateways/{gatewayName}/regenerateprofile' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServerManagement/gateways/{gatewayName}/regenerateprofile' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServerManagement/gateways/{gatewayName}/upgradetolatest' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServerManagement/gateways/{gatewayName}/upgradetolatest' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServerManagement/nodes/{nodeName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServerManagement/nodes/{nodeName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServerManagement/nodes/{nodeName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServerManagement/nodes/{nodeName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServerManagement/nodes/{nodeName}/sessions/{session}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServerManagement/nodes/{nodeName}/sessions/{session}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServerManagement/nodes/{nodeName}/sessions/{session}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServerManagement/nodes/{nodeName}/sessions/{session}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServerManagement/nodes/{nodeName}/sessions/{session}/features/powerShellConsole/pssessions/{pssession}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServerManagement/nodes/{nodeName}/sessions/{session}/features/powerShellConsole/pssessions/{pssession}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServerManagement/nodes/{nodeName}/sessions/{session}/features/powerShellConsole/pssessions/{pssession}/cancel' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServerManagement/nodes/{nodeName}/sessions/{session}/features/powerShellConsole/pssessions/{pssession}/cancel' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServerManagement/nodes/{nodeName}/sessions/{session}/features/powerShellConsole/pssessions/{pssession}/invokeCommand' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServerManagement/nodes/{nodeName}/sessions/{session}/features/powerShellConsole/pssessions/{pssession}/invokeCommand' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource Manager Resource Tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource Manager Resource Tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource Manager Resource Tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource Manager Resource Tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource Manager Resource Tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 22,
        "numOpsQuery": 9,
        "numOpsMutation": 13,
        "numQueriesCreated": 9,
        "numMutationsCreated": 8
      }
    },
    {
      "name": "Service Map",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/features/serviceMap/machineGroups/{machineGroupName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 25,
        "numOpsQuery": 21,
        "numOpsMutation": 4,
        "numQueriesCreated": 21,
        "numMutationsCreated": 3
      }
    },
    {
      "name": "ServiceBusManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/AuthorizationRules/{authorizationRuleName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/AuthorizationRules/{authorizationRuleName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/disasterRecoveryConfigs/{alias}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/disasterRecoveryConfigs/{alias}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/disasterRecoveryConfigs/{alias}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/disasterRecoveryConfigs/{alias}/breakPairing' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/disasterRecoveryConfigs/{alias}/failover' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/queues/{queueName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/queues/{queueName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/queues/{queueName}/authorizationRules/{authorizationRuleName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/queues/{queueName}/authorizationRules/{authorizationRuleName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/topics/{topicName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/topics/{topicName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/topics/{topicName}/authorizationRules/{authorizationRuleName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/topics/{topicName}/authorizationRules/{authorizationRuleName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/topics/{topicName}/subscriptions/{subscriptionName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/topics/{topicName}/subscriptions/{subscriptionName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/topics/{topicName}/subscriptions/{subscriptionName}/rules/{ruleName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/topics/{topicName}/subscriptions/{subscriptionName}/rules/{ruleName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\",\"x-ms-mutability\":[\"read\",\"create\",\"update\"]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\",\"x-ms-mutability\":[\"read\",\"create\",\"update\"]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 54,
        "numOpsQuery": 25,
        "numOpsMutation": 29,
        "numQueriesCreated": 25,
        "numMutationsCreated": 18
      }
    },
    {
      "name": "ServiceFabricManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/clusters/{clusterName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/clusters/{clusterName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/clusters/{clusterName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/clusters/{clusterName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/clusters/{clusterName}/applicationTypes/{applicationTypeName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '202'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/clusters/{clusterName}/applicationTypes/{applicationTypeName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/clusters/{clusterName}/applicationTypes/{applicationTypeName}/versions/{version}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '202'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/clusters/{clusterName}/applicationTypes/{applicationTypeName}/versions/{version}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/clusters/{clusterName}/applications/{applicationName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '202'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/clusters/{clusterName}/applications/{applicationName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/clusters/{clusterName}/applications/{applicationName}/services/{serviceName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '202'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/clusters/{clusterName}/applications/{applicationName}/services/{serviceName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Capacity tag value\",\"type\":\"string\"},\"description\":\"The capacity tags applied to the nodes in the node type, the cluster resource manager uses these tags to understand how much resource a node has.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Placement tag value\",\"type\":\"string\"},\"description\":\"The placement tags applied to nodes in the node type, which can be used to indicate where certain services (workload) should run.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Capacity tag value\",\"type\":\"string\"},\"description\":\"The capacity tags applied to the nodes in the node type, the cluster resource manager uses these tags to understand how much resource a node has.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Placement tag value\",\"type\":\"string\"},\"description\":\"The placement tags applied to nodes in the node type, which can be used to indicate where certain services (workload) should run.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 26,
        "numOpsQuery": 16,
        "numOpsMutation": 10,
        "numQueriesCreated": 16,
        "numMutationsCreated": 5
      }
    },
    {
      "name": "SqlManagementClient",
      "report": {
        "warnings": [],
        "numOps": 3,
        "numOpsQuery": 2,
        "numOpsMutation": 1,
        "numQueriesCreated": 2,
        "numMutationsCreated": 1
      }
    },
    {
      "name": "SqlManagementClient",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"object\"},\"description\":\"Gets additional details specific to this recommended action.\",\"readOnly\":true,\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 6,
        "numOpsQuery": 6,
        "numOpsMutation": 0,
        "numQueriesCreated": 6,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Azure SQL Database Backup Long Term Retention Policy",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/backupLongTermRetentionPolicies/{backupLongTermRetentionPolicyName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/backupLongTermRetentionPolicies/{backupLongTermRetentionPolicyName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          }
        ],
        "numOps": 3,
        "numOpsQuery": 2,
        "numOpsMutation": 1,
        "numQueriesCreated": 2,
        "numMutationsCreated": 1
      }
    },
    {
      "name": "Azure SQL Server Backup Long Term Retention Vault",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/backupLongTermRetentionVaults/{backupLongTermRetentionVaultName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/backupLongTermRetentionVaults/{backupLongTermRetentionVaultName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          }
        ],
        "numOps": 3,
        "numOpsQuery": 2,
        "numOpsMutation": 1,
        "numQueriesCreated": 2,
        "numMutationsCreated": 1
      }
    },
    {
      "name": "Azure SQL Database Backup",
      "report": {
        "warnings": [],
        "numOps": 5,
        "numOpsQuery": 5,
        "numOpsMutation": 0,
        "numQueriesCreated": 5,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "SqlManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/auditingSettings/{blobAuditingPolicyName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/auditingSettings/{blobAuditingPolicyName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          }
        ],
        "numOps": 2,
        "numOpsQuery": 1,
        "numOpsMutation": 1,
        "numQueriesCreated": 1,
        "numMutationsCreated": 1
      }
    },
    {
      "name": "SqlManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/operations/{operationId}/cancel' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 2,
        "numOpsQuery": 1,
        "numOpsMutation": 1,
        "numQueriesCreated": 1,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Azure SQL Database capabilities",
      "report": {
        "warnings": [],
        "numOps": 1,
        "numOpsQuery": 1,
        "numOpsMutation": 0,
        "numQueriesCreated": 1,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "SqlManagementClient",
      "report": {
        "warnings": [],
        "numOps": 1,
        "numOpsQuery": 1,
        "numOpsMutation": 0,
        "numQueriesCreated": 1,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Azure SQL Server API spec",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/connectionPolicies/{connectionPolicyName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/connectionPolicies/{connectionPolicyName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          }
        ],
        "numOps": 2,
        "numOpsQuery": 1,
        "numOpsMutation": 1,
        "numQueriesCreated": 1,
        "numMutationsCreated": 1
      }
    },
    {
      "name": "SqlManagementClient",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/AutomaticTuningOptions\"},\"description\":\"Automatic tuning options definition.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 1,
        "numOpsQuery": 1,
        "numOpsMutation": 0,
        "numQueriesCreated": 1,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "SqlManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/export' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/export' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/pause' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/pause' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/resume' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/resume' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 8,
        "numOpsQuery": 3,
        "numOpsMutation": 5,
        "numQueriesCreated": 3,
        "numMutationsCreated": 4
      }
    },
    {
      "name": "Database Threat Detection Policy APIs",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/securityAlertPolicies/{securityAlertPolicyName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/securityAlertPolicies/{securityAlertPolicyName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          }
        ],
        "numOps": 2,
        "numOpsQuery": 1,
        "numOpsMutation": 1,
        "numQueriesCreated": 1,
        "numMutationsCreated": 1
      }
    },
    {
      "name": "Azure SQL Database Datamasking Policies and Rules",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/dataMaskingPolicies/{dataMaskingPolicyName}/rules/{dataMaskingRuleName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/dataMaskingPolicies/{dataMaskingPolicyName}/rules/{dataMaskingRuleName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          }
        ],
        "numOps": 4,
        "numOpsQuery": 2,
        "numOpsMutation": 2,
        "numQueriesCreated": 2,
        "numMutationsCreated": 2
      }
    },
    {
      "name": "SqlManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/encryptionProtector/{encryptionProtectorName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/encryptionProtector/{encryptionProtectorName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          }
        ],
        "numOps": 3,
        "numOpsQuery": 2,
        "numOpsMutation": 1,
        "numQueriesCreated": 2,
        "numMutationsCreated": 1
      }
    },
    {
      "name": "SqlManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/failoverGroups/{failoverGroupName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/failoverGroups/{failoverGroupName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/failoverGroups/{failoverGroupName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/failoverGroups/{failoverGroupName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/failoverGroups/{failoverGroupName}/failover' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/failoverGroups/{failoverGroupName}/failover' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/failoverGroups/{failoverGroupName}/forceFailoverAllowDataLoss' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/failoverGroups/{failoverGroupName}/forceFailoverAllowDataLoss' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 6,
        "numOpsQuery": 2,
        "numOpsMutation": 4,
        "numQueriesCreated": 2,
        "numMutationsCreated": 3
      }
    },
    {
      "name": "SqlManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/firewallRules' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/firewallRules' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/firewallRules/{firewallRuleName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/firewallRules/{firewallRuleName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/firewallRules/{firewallRuleName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/firewallRules/{firewallRuleName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          }
        ],
        "numOps": 5,
        "numOpsQuery": 2,
        "numOpsMutation": 3,
        "numQueriesCreated": 2,
        "numMutationsCreated": 2
      }
    },
    {
      "name": "Azure SQL Database",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/geoBackupPolicies/{geoBackupPolicyName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/geoBackupPolicies/{geoBackupPolicyName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          }
        ],
        "numOps": 3,
        "numOpsQuery": 2,
        "numOpsMutation": 1,
        "numQueriesCreated": 2,
        "numMutationsCreated": 1
      }
    },
    {
      "name": "Azure SQL Database Import/Export spec",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/export' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/export' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/extensions/{extensionName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '201'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/extensions/{extensionName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '201'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/import' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/import' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          }
        ],
        "numOps": 3,
        "numOpsQuery": 0,
        "numOpsMutation": 3,
        "numQueriesCreated": 0,
        "numMutationsCreated": 3
      }
    },
    {
      "name": "SqlManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationName}/managedDatabaseRestoreAzureAsyncOperation/{operationId}/completeRestore' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationName}/managedDatabaseRestoreAzureAsyncOperation/{operationId}/completeRestore' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/databases/{databaseName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/databases/{databaseName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/databases/{databaseName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/databases/{databaseName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 5,
        "numOpsQuery": 2,
        "numOpsMutation": 3,
        "numQueriesCreated": 2,
        "numMutationsCreated": 1
      }
    },
    {
      "name": "Azure SQL Database",
      "report": {
        "warnings": [],
        "numOps": 4,
        "numOpsQuery": 4,
        "numOpsMutation": 0,
        "numQueriesCreated": 4,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Azure SQL Database",
      "report": {
        "warnings": [],
        "numOps": 1,
        "numOpsQuery": 1,
        "numOpsMutation": 0,
        "numQueriesCreated": 1,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "SqlManagementClient",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"object\"},\"description\":\"Additional descriptions for the operation.\",\"readOnly\":true,\"type\":\"object\",\"x-ms-client-flatten\":false}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 1,
        "numOpsQuery": 1,
        "numOpsMutation": 0,
        "numQueriesCreated": 1,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Azure SQL Database",
      "report": {
        "warnings": [],
        "numOps": 3,
        "numOpsQuery": 3,
        "numOpsMutation": 0,
        "numQueriesCreated": 3,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "SqlManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/move' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 1,
        "numOpsQuery": 0,
        "numOpsMutation": 1,
        "numQueriesCreated": 0,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "SqlManagementClient",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/AutomaticTuningServerOptions\"},\"description\":\"Automatic tuning options definition.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 1,
        "numOpsQuery": 1,
        "numOpsMutation": 0,
        "numQueriesCreated": 1,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Azure SQL Database API spec",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/administrators/{administratorName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/administrators/{administratorName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/administrators/{administratorName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/administrators/{administratorName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          }
        ],
        "numOps": 4,
        "numOpsQuery": 2,
        "numOpsMutation": 2,
        "numQueriesCreated": 2,
        "numMutationsCreated": 2
      }
    },
    {
      "name": "Azure SQL Database",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/communicationLinks/{communicationLinkName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/communicationLinks/{communicationLinkName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '201'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/communicationLinks/{communicationLinkName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '201'"
          }
        ],
        "numOps": 4,
        "numOpsQuery": 2,
        "numOpsMutation": 2,
        "numQueriesCreated": 2,
        "numMutationsCreated": 1
      }
    },
    {
      "name": "SqlManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/dnsAliases/{dnsAliasName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/dnsAliases/{dnsAliasName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/dnsAliases/{dnsAliasName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/dnsAliases/{dnsAliasName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/dnsAliases/{dnsAliasName}/acquire' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/dnsAliases/{dnsAliasName}/acquire' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 5,
        "numOpsQuery": 2,
        "numOpsMutation": 3,
        "numQueriesCreated": 2,
        "numMutationsCreated": 1
      }
    },
    {
      "name": "SqlManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/keys/{keyName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/keys/{keyName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/keys/{keyName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/keys/{keyName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          }
        ],
        "numOps": 4,
        "numOpsQuery": 2,
        "numOpsMutation": 2,
        "numQueriesCreated": 2,
        "numMutationsCreated": 1
      }
    },
    {
      "name": "Azure SQL Database",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\",\"x-ms-mutability\":[\"read\",\"create\",\"update\"]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\",\"x-ms-mutability\":[\"read\",\"create\",\"update\"]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 5,
        "numOpsQuery": 3,
        "numOpsMutation": 2,
        "numQueriesCreated": 3,
        "numMutationsCreated": 1
      }
    },
    {
      "name": "SqlManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 5,
        "numOpsQuery": 3,
        "numOpsMutation": 2,
        "numQueriesCreated": 3,
        "numMutationsCreated": 1
      }
    },
    {
      "name": "Azure SQL Database",
      "report": {
        "warnings": [],
        "numOps": 2,
        "numOpsQuery": 2,
        "numOpsMutation": 0,
        "numQueriesCreated": 2,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Azure SQL Database",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/pause' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/pause' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/resume' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/resume' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/transparentDataEncryption/{transparentDataEncryptionName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/transparentDataEncryption/{transparentDataEncryptionName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/elasticPools/{elasticPoolName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/elasticPools/{elasticPoolName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/elasticPools/{elasticPoolName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/elasticPools/{elasticPoolName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\",\"x-ms-mutability\":[\"read\",\"create\",\"update\"]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\",\"x-ms-mutability\":[\"read\",\"create\",\"update\"]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\",\"x-ms-mutability\":[\"read\",\"create\",\"update\"]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\",\"x-ms-mutability\":[\"read\",\"create\",\"update\"]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 25,
        "numOpsQuery": 17,
        "numOpsMutation": 8,
        "numQueriesCreated": 17,
        "numMutationsCreated": 4
      }
    },
    {
      "name": "SqlManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/syncAgents/{syncAgentName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/syncAgents/{syncAgentName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/syncAgents/{syncAgentName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/syncAgents/{syncAgentName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          }
        ],
        "numOps": 6,
        "numOpsQuery": 3,
        "numOpsMutation": 3,
        "numQueriesCreated": 3,
        "numMutationsCreated": 2
      }
    },
    {
      "name": "SqlManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/syncGroups/{syncGroupName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/syncGroups/{syncGroupName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/syncGroups/{syncGroupName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/syncGroups/{syncGroupName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/syncGroups/{syncGroupName}/cancelSync' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/syncGroups/{syncGroupName}/refreshHubSchema' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/syncGroups/{syncGroupName}/refreshHubSchema' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/syncGroups/{syncGroupName}/triggerSync' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 10,
        "numOpsQuery": 5,
        "numOpsMutation": 5,
        "numQueriesCreated": 5,
        "numMutationsCreated": 1
      }
    },
    {
      "name": "SqlManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/syncGroups/{syncGroupName}/syncMembers/{syncMemberName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/syncGroups/{syncGroupName}/syncMembers/{syncMemberName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/syncGroups/{syncGroupName}/syncMembers/{syncMemberName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/syncGroups/{syncGroupName}/syncMembers/{syncMemberName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/syncGroups/{syncGroupName}/syncMembers/{syncMemberName}/refreshSchema' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/syncGroups/{syncGroupName}/syncMembers/{syncMemberName}/refreshSchema' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 6,
        "numOpsQuery": 3,
        "numOpsMutation": 3,
        "numQueriesCreated": 3,
        "numMutationsCreated": 1
      }
    },
    {
      "name": "SqlManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/auditingPolicies/{tableAuditingPolicyName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/auditingPolicies/{tableAuditingPolicyName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/auditingPolicies/{tableAuditingPolicyName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/auditingPolicies/{tableAuditingPolicyName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/connectionPolicies/{connectionPolicyName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/connectionPolicies/{connectionPolicyName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          }
        ],
        "numOps": 8,
        "numOpsQuery": 5,
        "numOpsMutation": 3,
        "numQueriesCreated": 5,
        "numMutationsCreated": 3
      }
    },
    {
      "name": "Azure SQL Database",
      "report": {
        "warnings": [],
        "numOps": 2,
        "numOpsQuery": 2,
        "numOpsMutation": 0,
        "numQueriesCreated": 2,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "SqlManagementClient",
      "report": {
        "warnings": [],
        "numOps": 2,
        "numOpsQuery": 2,
        "numOpsMutation": 0,
        "numQueriesCreated": 2,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "SqlManagementClient",
      "report": {
        "warnings": [],
        "numOps": 2,
        "numOpsQuery": 2,
        "numOpsMutation": 0,
        "numQueriesCreated": 2,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "SqlManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/virtualNetworkRules/{virtualNetworkRuleName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/virtualNetworkRules/{virtualNetworkRuleName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/virtualNetworkRules/{virtualNetworkRuleName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/virtualNetworkRules/{virtualNetworkRuleName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          }
        ],
        "numOps": 4,
        "numOpsQuery": 2,
        "numOpsMutation": 2,
        "numQueriesCreated": 2,
        "numMutationsCreated": 1
      }
    },
    {
      "name": "StorageManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 9,
        "numOpsQuery": 4,
        "numOpsMutation": 5,
        "numQueriesCreated": 4,
        "numMutationsCreated": 4
      }
    },
    {
      "name": "StorageManagement",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"A list of key value pairs that describe the resource. These tags can be used for viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key with a length no greater than 128 characters and a value with a length no greater than 256 characters.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 9,
        "numOpsQuery": 4,
        "numOpsMutation": 5,
        "numQueriesCreated": 4,
        "numMutationsCreated": 4
      }
    },
    {
      "name": "StorageManagementClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Tags assigned to a resource; can be used for viewing and grouping a resource (across resource groups).\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Gets or sets a list of key value pairs that describe the resource. These tags can be used for viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key with a length no greater than 128 characters and a value with a length no greater than 256 characters.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 9,
        "numOpsQuery": 4,
        "numOpsMutation": 5,
        "numQueriesCreated": 4,
        "numMutationsCreated": 4
      }
    },
    {
      "name": "StorageManagement",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Tags assigned to a resource; can be used for viewing and grouping a resource (across resource groups).\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Gets or sets a list of key value pairs that describe the resource. These tags can be used for viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key with a length no greater than 128 characters and a value with a length no greater than 256 characters.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 11,
        "numOpsQuery": 4,
        "numOpsMutation": 7,
        "numQueriesCreated": 4,
        "numMutationsCreated": 6
      }
    },
    {
      "name": "StorageManagement",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Tags assigned to a resource; can be used for viewing and grouping a resource (across resource groups).\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Gets or sets a list of key value pairs that describe the resource. These tags can be used for viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key with a length no greater than 128 characters and a value with a length no greater than 256 characters.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 11,
        "numOpsQuery": 4,
        "numOpsMutation": 7,
        "numQueriesCreated": 4,
        "numMutationsCreated": 6
      }
    },
    {
      "name": "StorageManagement",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Tags assigned to a resource; can be used for viewing and grouping a resource (across resource groups).\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Gets or sets a list of key value pairs that describe the resource. These tags can be used for viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key with a length no greater than 128 characters and a value with a length no greater than 256 characters.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 13,
        "numOpsQuery": 6,
        "numOpsMutation": 7,
        "numQueriesCreated": 6,
        "numMutationsCreated": 6
      }
    },
    {
      "name": "StorageManagement",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Tags assigned to a resource; can be used for viewing and grouping a resource (across resource groups).\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Gets or sets a list of key value pairs that describe the resource. These tags can be used for viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key with a length no greater than 128 characters and a value with a length no greater than 256 characters.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 13,
        "numOpsQuery": 6,
        "numOpsMutation": 7,
        "numQueriesCreated": 6,
        "numMutationsCreated": 6
      }
    },
    {
      "name": "StorageImportExport",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ImportExport/jobs/{jobName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ImportExport/jobs/{jobName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ImportExport/jobs/{jobName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Specifies the tags that are assigned to the job.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Specifies the tags that will be assigned to the job.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 9,
        "numOpsQuery": 6,
        "numOpsMutation": 3,
        "numQueriesCreated": 6,
        "numMutationsCreated": 2
      }
    },
    {
      "name": "SubscriptionDefinitionsClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /providers/Microsoft.Subscription/subscriptionDefinitions/{subscriptionDefinitionName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /providers/Microsoft.Subscription/subscriptionDefinitions/{subscriptionDefinitionName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /providers/Microsoft.Subscription/subscriptionOperations/{operationId}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /providers/Microsoft.Subscription/subscriptionOperations/{operationId}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          }
        ],
        "numOps": 5,
        "numOpsQuery": 4,
        "numOpsMutation": 1,
        "numQueriesCreated": 4,
        "numMutationsCreated": 1
      }
    },
    {
      "name": "TimeSeriesInsightsClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TimeSeriesInsights/environments/{environmentName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TimeSeriesInsights/environments/{environmentName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TimeSeriesInsights/environments/{environmentName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TimeSeriesInsights/environments/{environmentName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TimeSeriesInsights/environments/{environmentName}/accessPolicies/{accessPolicyName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TimeSeriesInsights/environments/{environmentName}/accessPolicies/{accessPolicyName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TimeSeriesInsights/environments/{environmentName}/accessPolicies/{accessPolicyName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TimeSeriesInsights/environments/{environmentName}/accessPolicies/{accessPolicyName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TimeSeriesInsights/environments/{environmentName}/eventSources/{eventSourceName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TimeSeriesInsights/environments/{environmentName}/eventSources/{eventSourceName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TimeSeriesInsights/environments/{environmentName}/eventSources/{eventSourceName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TimeSeriesInsights/environments/{environmentName}/eventSources/{eventSourceName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TimeSeriesInsights/environments/{environmentName}/referenceDataSets/{referenceDataSetName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TimeSeriesInsights/environments/{environmentName}/referenceDataSets/{referenceDataSetName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TimeSeriesInsights/environments/{environmentName}/referenceDataSets/{referenceDataSetName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TimeSeriesInsights/environments/{environmentName}/referenceDataSets/{referenceDataSetName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Key-value pairs of additional properties for the resource.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Key-value pairs of additional properties for the resource.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Key-value pairs of additional properties for the resource.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 18,
        "numOpsQuery": 10,
        "numOpsMutation": 8,
        "numQueriesCreated": 10,
        "numMutationsCreated": 4
      }
    },
    {
      "name": "TimeSeriesInsightsClient",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TimeSeriesInsights/environments/{environmentName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TimeSeriesInsights/environments/{environmentName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TimeSeriesInsights/environments/{environmentName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TimeSeriesInsights/environments/{environmentName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TimeSeriesInsights/environments/{environmentName}/accessPolicies/{accessPolicyName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TimeSeriesInsights/environments/{environmentName}/accessPolicies/{accessPolicyName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TimeSeriesInsights/environments/{environmentName}/accessPolicies/{accessPolicyName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TimeSeriesInsights/environments/{environmentName}/accessPolicies/{accessPolicyName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TimeSeriesInsights/environments/{environmentName}/eventSources/{eventSourceName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TimeSeriesInsights/environments/{environmentName}/eventSources/{eventSourceName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TimeSeriesInsights/environments/{environmentName}/eventSources/{eventSourceName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TimeSeriesInsights/environments/{environmentName}/eventSources/{eventSourceName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TimeSeriesInsights/environments/{environmentName}/referenceDataSets/{referenceDataSetName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TimeSeriesInsights/environments/{environmentName}/referenceDataSets/{referenceDataSetName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TimeSeriesInsights/environments/{environmentName}/referenceDataSets/{referenceDataSetName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TimeSeriesInsights/environments/{environmentName}/referenceDataSets/{referenceDataSetName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Key-value pairs of additional properties for the resource.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Key-value pairs of additional properties for the resource.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Key-value pairs of additional properties for the resource.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 18,
        "numOpsQuery": 10,
        "numOpsMutation": 8,
        "numQueriesCreated": 10,
        "numMutationsCreated": 4
      }
    },
    {
      "name": "Visual Studio Resource Provider Client",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.visualstudio/account/{rootResourceName}/project/{resourceName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.visualstudio/account/{rootResourceName}/project/{resourceName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.visualstudio/account/{rootResourceName}/project/{resourceName}/subContainers/{subContainerName}/status' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.visualstudio/account/{rootResourceName}/project/{resourceName}/subContainers/{subContainerName}/status' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/microsoft.visualstudio/account/{accountResourceName}/extension/{extensionResourceName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/microsoft.visualstudio/account/{resourceName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Key/value pair of resource properties.\",\"type\":\"object\",\"x-ms-client-flatten\":true}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource properties.\",\"type\":\"object\",\"x-ms-client-flatten\":true}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource properties.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Key/value pair of resource properties.\",\"type\":\"object\",\"x-ms-client-flatten\":true}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"A dictionary of extended properties. This property is currently unused.\",\"type\":\"object\",\"x-ms-client-flatten\":true}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"A dictionary of user-defined tags to be stored with the extension resource.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The custom properties of the resource.\",\"type\":\"object\",\"x-ms-client-flatten\":true}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The custom tags of the resource.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 14,
        "numOpsQuery": 8,
        "numOpsMutation": 6,
        "numQueriesCreated": 8,
        "numMutationsCreated": 4
      }
    },
    {
      "name": "Visual Studio Resource Provider Client",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.visualstudio/account/{rootResourceName}/project/{resourceName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.visualstudio/account/{rootResourceName}/project/{resourceName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/microsoft.visualstudio/account/{accountResourceName}/extension/{extensionResourceName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/microsoft.visualstudio/account/{resourceName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/Authorization\"},\"description\":\"Global dictionary of authorization details used by the pipeline, with a friendly name as key. Individual resource in the pipeline can reference to a specific authorization info using the friendly name.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Application specific properties.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource properties.\",\"type\":\"object\",\"x-ms-client-flatten\":true}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource properties.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/Authorization\"},\"description\":\"Global dictionary of authorization details used by the pipeline, with a friendly name as key. Individual resource in the pipeline can reference to a specific authorization info using the friendly name.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Application specific properties.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"A dictionary of extended properties. This property is currently unused.\",\"type\":\"object\",\"x-ms-client-flatten\":true}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"A dictionary of user-defined tags to be stored with the extension resource.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The custom properties of the resource.\",\"type\":\"object\",\"x-ms-client-flatten\":true}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The custom tags of the resource.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 13,
        "numOpsQuery": 7,
        "numOpsMutation": 6,
        "numQueriesCreated": 7,
        "numMutationsCreated": 4
      }
    },
    {
      "name": "WebSite Management Client",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/moveResources' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DomainRegistration/domains/{domainName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DomainRegistration/domains/{domainName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DomainRegistration/domains/{domainName}/operationresults/{operationId}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DomainRegistration/domains/{domainName}/operationresults/{operationId}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/multiRolePools/default' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/multiRolePools/default' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/operations/{operationId}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/operations/{operationId}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/resume' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/resume' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/suspend' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/suspend' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/workerPools/{workerPoolName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/workerPools/{workerPoolName}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/managedHostingEnvironments/{name}/operations/{operationId}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/managedHostingEnvironments/{name}/operations/{operationId}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/serverfarms/{name}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/serverfarms/{name}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/publishxml' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/publishxml' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/slotsswap' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/slotsswap' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/sourcecontrols/web' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/sourcecontrols/web' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slotsswap' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slotsswap' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/sourcecontrols/web' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/sourcecontrols/web' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/CertificateOrderCertificate\"},\"description\":\"State of the Key Vault secret\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Application settings overrides for cloned web app. If specified these settings will override the settings cloned \\r\\n            from source web app. If not specified, application settings from source web app are retained.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/CertificateOrderCertificate\"},\"description\":\"State of the Key Vault secret\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Application settings overrides for cloned web app. If specified these settings will override the settings cloned \\r\\n            from source web app. If not specified, application settings from source web app are retained.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Settings\",\"type\":\"object\",\"x-ms-client-flatten\":true}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Settings\",\"type\":\"object\",\"x-ms-client-flatten\":true}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/ConnStringValueTypePair\"},\"description\":\"Connection strings\",\"type\":\"object\",\"x-ms-client-flatten\":true}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/ConnStringValueTypePair\"},\"description\":\"Connection strings\",\"type\":\"object\",\"x-ms-client-flatten\":true}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Tags associated with resource\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Resource tags\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 279,
        "numOpsQuery": 138,
        "numOpsMutation": 141,
        "numQueriesCreated": 138,
        "numMutationsCreated": 138
      }
    },
    {
      "name": "Radio & Music Services",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /my/categories/follows' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /my/categories/follows' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /my/music/preferences/export/{vendor}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /my/music/preferences/export/{vendor}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /my/music/preferences/export/{vendor}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /my/networks/follows' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /my/networks/follows' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /my/plays' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 75,
        "numOpsQuery": 44,
        "numOpsMutation": 31,
        "numQueriesCreated": 44,
        "numMutationsCreated": 23
      }
    },
    {
      "name": "BBC iPlayer Business Layer",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"anyOf\":[{\"additionalProperties\":false,\"properties\":{\"availability\":{\"additionalProperties\":false,\"properties\":{\"accurate_start\":{\"type\":\"string\"},\"end\":{\"type\":\"string\"},\"remaining\":{\"additionalProperties\":false,\"properties\":{\"text\":{\"type\":\"string\"}},\"required\":[\"text\"],\"type\":\"object\"},\"start\":{\"type\":\"string\"}},\"required\":[\"start\"],\"type\":\"object\"},\"credits_start\":{\"type\":\"number\"},\"download\":{\"type\":\"boolean\"},\"duration\":{\"additionalProperties\":false,\"properties\":{\"text\":{\"type\":\"string\"},\"value\":{\"type\":\"string\"}},\"required\":[\"text\",\"value\"],\"type\":\"object\"},\"first_broadcast\":{\"type\":\"string\"},\"guidance\":{\"additionalProperties\":false,\"properties\":{\"id\":{\"type\":\"string\"},\"text\":{\"additionalProperties\":false,\"properties\":{\"large\":{\"type\":\"string\"},\"medium\":{\"type\":\"string\"},\"small\":{\"type\":\"string\"}},\"type\":\"object\"}},\"required\":[\"id\"],\"type\":\"object\"},\"hd\":{\"type\":\"boolean\"},\"id\":{\"type\":\"string\"},\"kind\":{\"type\":\"string\"},\"rrc\":{\"additionalProperties\":false,\"properties\":{\"description\":{\"additionalProperties\":false,\"properties\":{\"large\":{\"type\":\"string\"},\"small\":{\"type\":\"string\"}},\"required\":[\"small\",\"large\"],\"type\":\"object\"},\"url\":{\"type\":\"string\"}},\"required\":[\"description\"],\"type\":\"object\"},\"service_id\":{\"type\":\"string\"},\"type\":{\"enum\":[\"version\",\"version_large\"]}},\"required\":[\"id\",\"type\",\"hd\",\"download\",\"duration\",\"kind\",\"availability\"],\"type\":\"object\"},{\"additionalProperties\":false,\"properties\":{\"download\":{\"type\":\"boolean\"},\"duration\":{\"additionalProperties\":false,\"properties\":{\"text\":{\"type\":\"string\"},\"value\":{\"type\":\"string\"}},\"required\":[\"text\",\"value\"],\"type\":\"object\"},\"guidance\":{\"additionalProperties\":false,\"properties\":{\"id\":{\"type\":\"string\"},\"text\":{\"additionalProperties\":false,\"properties\":{\"large\":{\"type\":\"string\"},\"medium\":{\"type\":\"string\"},\"small\":{\"type\":\"string\"}},\"type\":\"object\"}},\"required\":[\"id\"],\"type\":\"object\"},\"hd\":{\"type\":\"boolean\"},\"id\":{\"type\":\"string\"},\"kind\":{\"type\":\"string\"},\"store_id\":{\"type\":\"string\"},\"store_profile\":{\"type\":\"string\"},\"store_session\":{\"additionalProperties\":false,\"properties\":{\"ceiling\":{\"type\":\"number\"},\"stats\":{\"properties\":{\"assetName\":{\"type\":\"string\"},\"contentType\":{\"type\":\"string\"},\"contentVariant\":{\"type\":\"string\"},\"episodeName\":{\"type\":\"string\"},\"parentPID\":{\"type\":\"string\"},\"parentPIDType\":{\"type\":\"string\"},\"productVariant\":{\"type\":\"string\"},\"viewerId\":{\"type\":\"string\"}},\"type\":\"object\"},\"token\":{\"type\":\"string\"}},\"required\":[\"token\",\"stats\"],\"type\":\"object\"},\"type\":{\"enum\":[\"store_version\"]}},\"required\":[\"id\",\"type\",\"store_id\",\"store_profile\",\"hd\",\"download\",\"duration\",\"kind\"],\"type\":\"object\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"anyOf\":[{\"$ref\":\"#/components/schemas/episode\"},{\"$ref\":\"#/components/schemas/group\"},{\"$ref\":\"#/components/schemas/promotion\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"anyOf\":[{\"$ref\":\"#/components/schemas/episode\"},{\"$ref\":\"#/components/schemas/broadcast\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"anyOf\":[{\"$ref\":\"#/components/schemas/episode\"},{\"$ref\":\"#/components/schemas/programme\"},{\"$ref\":\"#/components/schemas/search_group\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 30,
        "numOpsQuery": 30,
        "numOpsMutation": 0,
        "numQueriesCreated": 31,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "BC Laws",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /content/{aspectId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /content/{aspectId}/{civixDocumentId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /document/id/{aspectId}/{civixIndexId}/{civixDocumentId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /document/id/{aspectId}/{civixIndexId}/{civixDocumentId}/search/{searchString}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /document/id/{aspectId}/{civixIndexId}/{civixDocumentId}/xml' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /document/id/{aspectId}/{civixIndexId}/{civixDocumentId}/xml/search/{searchString}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /search/{aspectId}/fullsearch' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 7,
        "numOpsQuery": 7,
        "numOpsMutation": 0,
        "numQueriesCreated": 0,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Beanstream Payments",
      "report": {
        "warnings": [],
        "numOps": 15,
        "numOpsQuery": 3,
        "numOpsMutation": 12,
        "numQueriesCreated": 3,
        "numMutationsCreated": 12
      }
    },
    {
      "name": "Betfair: Exchange Streaming",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /request' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 1,
        "numOpsQuery": 0,
        "numOpsMutation": 1,
        "numQueriesCreated": 0,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "BigOven",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /article/{term}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /article/{term}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /glossary/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /recipe/scan' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 63,
        "numOpsQuery": 32,
        "numOpsMutation": 31,
        "numQueriesCreated": 30,
        "numMutationsCreated": 29
      }
    },
    {
      "name": "BikeWise API v2",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v2/incidents' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v2/incidents/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v2/locations' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v2/locations/markers' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 4,
        "numOpsQuery": 4,
        "numOpsMutation": 0,
        "numQueriesCreated": 0,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Bitbucket",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /addon' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /addon' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /addon/linkers' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /addon/linkers/{linker_key}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /addon/linkers/{linker_key}/values' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /addon/linkers/{linker_key}/values' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /addon/linkers/{linker_key}/values' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /addon/linkers/{linker_key}/values' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /addon/linkers/{linker_key}/values/' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /addon/linkers/{linker_key}/values/' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /repositories/{username}/{repo_slug}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /repositories/{username}/{repo_slug}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /repositories/{username}/{repo_slug}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /repositories/{username}/{repo_slug}/branch-restrictions/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /repositories/{username}/{repo_slug}/commit/{node}/approve' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repositories/{username}/{repo_slug}/commit/{sha}/comments' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repositories/{username}/{repo_slug}/commit/{sha}/comments/{comment_id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repositories/{username}/{repo_slug}/commits' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /repositories/{username}/{repo_slug}/commits' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repositories/{username}/{repo_slug}/commits/{revision}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /repositories/{username}/{repo_slug}/commits/{revision}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repositories/{username}/{repo_slug}/default-reviewers' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /repositories/{username}/{repo_slug}/default-reviewers/{target_username}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repositories/{username}/{repo_slug}/default-reviewers/{target_username}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /repositories/{username}/{repo_slug}/default-reviewers/{target_username}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repositories/{username}/{repo_slug}/diff/{spec}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repositories/{username}/{repo_slug}/downloads' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /repositories/{username}/{repo_slug}/downloads' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /repositories/{username}/{repo_slug}/downloads/{filename}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repositories/{username}/{repo_slug}/downloads/{filename}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /repositories/{username}/{repo_slug}/hooks/{uid}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /repositories/{username}/{repo_slug}/issues/{issue_id}/attachments' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /repositories/{username}/{repo_slug}/issues/{issue_id}/attachments/{path}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repositories/{username}/{repo_slug}/issues/{issue_id}/attachments/{path}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repositories/{username}/{repo_slug}/issues/{issue_id}/comments' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repositories/{username}/{repo_slug}/issues/{issue_id}/comments/{comment_id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /repositories/{username}/{repo_slug}/issues/{issue_id}/vote' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repositories/{username}/{repo_slug}/patch/{spec}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repositories/{username}/{repo_slug}/pipelines/{pipeline_uuid}/steps/{step_uuid}/log' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /repositories/{username}/{repo_slug}/pipelines/{pipeline_uuid}/stopPipeline' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /repositories/{username}/{repo_slug}/pipelines_config/ssh/key_pair' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /repositories/{username}/{repo_slug}/pipelines_config/ssh/known_hosts/{known_host_uuid}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /repositories/{username}/{repo_slug}/pipelines_config/variables/{variable_uuid}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repositories/{username}/{repo_slug}/pullrequests/activity' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repositories/{username}/{repo_slug}/pullrequests/{pull_request_id}/activity' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /repositories/{username}/{repo_slug}/pullrequests/{pull_request_id}/approve' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /repositories/{username}/{repo_slug}/pullrequests/{pull_request_id}/approve' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repositories/{username}/{repo_slug}/pullrequests/{pull_request_id}/comments' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repositories/{username}/{repo_slug}/pullrequests/{pull_request_id}/comments/{comment_id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repositories/{username}/{repo_slug}/pullrequests/{pull_request_id}/commits' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repositories/{username}/{repo_slug}/pullrequests/{pull_request_id}/diff' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repositories/{username}/{repo_slug}/pullrequests/{pull_request_id}/patch' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repositories/{username}/{repo_slug}/refs' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repositories/{username}/{repo_slug}/refs/branches' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repositories/{username}/{repo_slug}/refs/branches/{name}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repositories/{username}/{repo_slug}/refs/tags' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repositories/{username}/{repo_slug}/refs/tags/{name}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repositories/{username}/{repo_slug}/src/{node}/{path}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repositories/{username}/{repo_slug}/watchers' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /snippets/{username}/{encoded_id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /snippets/{username}/{encoded_id}/comments/{comment_id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /snippets/{username}/{encoded_id}/comments/{comment_id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /snippets/{username}/{encoded_id}/{node_id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /snippets/{username}/{encoded_id}/{node_id}/files/{path}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /snippets/{username}/{encoded_id}/{revision}/diff' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /snippets/{username}/{encoded_id}/{revision}/patch' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /teams/{owner}/projects/{project_key}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /teams/{owner}/projects/{project_key}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /teams/{owner}/projects/{project_key}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /teams/{username}/hooks/{uid}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /teams/{username}/pipelines_config/variables/{variable_uuid}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /teams/{username}/repositories' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /user/emails' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /user/emails/{email}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /users/{username}/hooks/{uid}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /users/{username}/pipelines_config/variables/{variable_uuid}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /users/{username}/repositories' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":true,\"description\":\"Optional structured data that is endpoint-specific.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 182,
        "numOpsQuery": 105,
        "numOpsMutation": 77,
        "numQueriesCreated": 118,
        "numMutationsCreated": 75
      }
    },
    {
      "name": "Blazemeter API Explorer",
      "report": {
        "warnings": [],
        "numOps": 14,
        "numOpsQuery": 10,
        "numOpsMutation": 4,
        "numQueriesCreated": 10,
        "numMutationsCreated": 4
      }
    },
    {
      "name": "IBM Containers",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /build' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /containers/floating-ips/{ip}/release' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /containers/groups/{name_or_id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /containers/quota' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /containers/{name_or_id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /containers/{name_or_id}/floating-ips/{ip}/bind' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /containers/{name_or_id}/floating-ips/{ip}/unbind' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /containers/{name_or_id}/pause' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /containers/{name_or_id}/rename' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /containers/{name_or_id}/restart' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /containers/{name_or_id}/start' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /containers/{name_or_id}/stop' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /containers/{name_or_id}/unpause' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /images/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /volumes/fs/create' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /volumes/fs/{name}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /volumes/{name}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"List of custom metadata that was added to the container. Labels serve a wide range of uses, such as adding notes to a container. Every label is a key/ value pair.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 46,
        "numOpsQuery": 20,
        "numOpsMutation": 26,
        "numQueriesCreated": 20,
        "numMutationsCreated": 9
      }
    },
    {
      "name": "Botify",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"readOnly\":true,\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 29,
        "numOpsQuery": 24,
        "numOpsMutation": 5,
        "numQueriesCreated": 24,
        "numMutationsCreated": 5
      }
    },
    {
      "name": "Box 2.0 Authorization",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /authorize' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 1,
        "numOpsQuery": 1,
        "numOpsMutation": 0,
        "numQueriesCreated": 0,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Box 2.0",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /collaborations/{COLLAB_ID}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /collaborations/{COLLAB_ID}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /collaborations/{COLLAB_ID}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /comments/{COMMENT_ID}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /device_pinners/{ID}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'OPTIONS /files/content' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /files/{FILE_ID}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /files/{FILE_ID}/content' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /files/{FILE_ID}/thumbnail.{EXTENSION}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /files/{FILE_ID}/thumbnail.{EXTENSION}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /files/{FILE_ID}/trash' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /files/{FILE_ID}/versions/{VERSION_ID}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /files/{FILE_ID}/watermark' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /files/{FILE_ID}/watermark' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /folders/{FOLDER_ID}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /folders/{FOLDER_ID}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /folders/{FOLDER_ID}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /folders/{FOLDER_ID}/trash' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /folders/{FOLDER_ID}/watermark' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /folders/{FOLDER_ID}/watermark' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /group_memberships/{GROUP_MEMBERSHIP_ID}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /groups/{GROUP_ID}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /legal_hold_policies/{ID}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /legal_hold_policy_assignments/{ASSIGNMENT_ID}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /legal_hold_policy_assignments/{ASSIGNMENT_ID}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /task_assignments/{TASK_ASSIGNMENT_ID}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /tasks/{TASK_ID}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /users/{USER_ID}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /users/{USER_ID}/email_aliases/{EMAIL_ALIAS_ID}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /web_links/{WEB_LINK_ID}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /webhooks/{WEBHOOK_ID}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Metadata can be used for many purposes. Enterprises may want to have a better way to organize their digital assets for their marketing teams or developers may want to provide advanced content functionality such as facilitating workflows or approvals. Metadata is also visible in the Box Web Application. To learn more, please visit the help documentation.\\nTemplates\\nMetadata that belongs to a file/folder is grouped by templates. Templates allow the metadata service to provide a multitude of services, such as pre-defining sets of key:value pairs or schema enforcement on specific fields. For example, a marketingCollateral template may define where and when specific marketing content should be used. You can also see the representation of the template in the Box web application while navigating to a file preview. Currently, metadata associated with folders does not show in the web application.\\nEach file/folder can have multiple distinct template instances associated with it, such as a marketingCollateral and retentionPolicy template instances. Template instances are also grouped by scopes. Currently, the only scopes support are enterprise and global. Enterprise scopes are defined on a per enterprises basis, whereas global scopes are Box application-wide. Attribute order within template instances is not guaranteed.\\nCurrently, there are four attributes supported by templates: string, enum, float, and  date (RFC 3339).\\n\\nGlobal Properties Template\\nIn addition to enterprise scoped templates, every file on Box has access to the global properties template. The Properties template is a bucket of free form key:value string pairs, with no additional schema associated with it. Properties are ideal for scenarios where applications want to write metadata to file objects in a flexible way, without pre-defined template structure.\\nProperties follow all the conventions of standard templates, except for being located at a different endpoint. All requests made to the properties template must be made to /files/{file_id}/metadata/global/properties.\",\"example\":{\"test\":\"testvalue\"},\"title\":\"Metadata Object\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Metadata can be used for many purposes. Enterprises may want to have a better way to organize their digital assets for their marketing teams or developers may want to provide advanced content functionality such as facilitating workflows or approvals. Metadata is also visible in the Box Web Application. To learn more, please visit the help documentation.\\nTemplates\\nMetadata that belongs to a file/folder is grouped by templates. Templates allow the metadata service to provide a multitude of services, such as pre-defining sets of key:value pairs or schema enforcement on specific fields. For example, a marketingCollateral template may define where and when specific marketing content should be used. You can also see the representation of the template in the Box web application while navigating to a file preview. Currently, metadata associated with folders does not show in the web application.\\nEach file/folder can have multiple distinct template instances associated with it, such as a marketingCollateral and retentionPolicy template instances. Template instances are also grouped by scopes. Currently, the only scopes support are enterprise and global. Enterprise scopes are defined on a per enterprises basis, whereas global scopes are Box application-wide. Attribute order within template instances is not guaranteed.\\nCurrently, there are four attributes supported by templates: string, enum, float, and  date (RFC 3339).\\n\\nGlobal Properties Template\\nIn addition to enterprise scoped templates, every file on Box has access to the global properties template. The Properties template is a bucket of free form key:value string pairs, with no additional schema associated with it. Properties are ideal for scenarios where applications want to write metadata to file objects in a flexible way, without pre-defined template structure.\\nProperties follow all the conventions of standard templates, except for being located at a different endpoint. All requests made to the properties template must be made to /files/{file_id}/metadata/global/properties.\",\"example\":{\"test\":\"testvalue\"},\"title\":\"Metadata Object\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Metadata can be used for many purposes. Enterprises may want to have a better way to organize their digital assets for their marketing teams or developers may want to provide advanced content functionality such as facilitating workflows or approvals. Metadata is also visible in the Box Web Application. To learn more, please visit the help documentation.\\nTemplates\\nMetadata that belongs to a file/folder is grouped by templates. Templates allow the metadata service to provide a multitude of services, such as pre-defining sets of key:value pairs or schema enforcement on specific fields. For example, a marketingCollateral template may define where and when specific marketing content should be used. You can also see the representation of the template in the Box web application while navigating to a file preview. Currently, metadata associated with folders does not show in the web application.\\nEach file/folder can have multiple distinct template instances associated with it, such as a marketingCollateral and retentionPolicy template instances. Template instances are also grouped by scopes. Currently, the only scopes support are enterprise and global. Enterprise scopes are defined on a per enterprises basis, whereas global scopes are Box application-wide. Attribute order within template instances is not guaranteed.\\nCurrently, there are four attributes supported by templates: string, enum, float, and  date (RFC 3339).\\n\\nGlobal Properties Template\\nIn addition to enterprise scoped templates, every file on Box has access to the global properties template. The Properties template is a bucket of free form key:value string pairs, with no additional schema associated with it. Properties are ideal for scenarios where applications want to write metadata to file objects in a flexible way, without pre-defined template structure.\\nProperties follow all the conventions of standard templates, except for being located at a different endpoint. All requests made to the properties template must be made to /files/{file_id}/metadata/global/properties.\",\"example\":{\"test\":\"testvalue\"},\"title\":\"Metadata Object\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Metadata can be used for many purposes. Enterprises may want to have a better way to organize their digital assets for their marketing teams or developers may want to provide advanced content functionality such as facilitating workflows or approvals. Metadata is also visible in the Box Web Application. To learn more, please visit the help documentation.\\nTemplates\\nMetadata that belongs to a file/folder is grouped by templates. Templates allow the metadata service to provide a multitude of services, such as pre-defining sets of key:value pairs or schema enforcement on specific fields. For example, a marketingCollateral template may define where and when specific marketing content should be used. You can also see the representation of the template in the Box web application while navigating to a file preview. Currently, metadata associated with folders does not show in the web application.\\nEach file/folder can have multiple distinct template instances associated with it, such as a marketingCollateral and retentionPolicy template instances. Template instances are also grouped by scopes. Currently, the only scopes support are enterprise and global. Enterprise scopes are defined on a per enterprises basis, whereas global scopes are Box application-wide. Attribute order within template instances is not guaranteed.\\nCurrently, there are four attributes supported by templates: string, enum, float, and  date (RFC 3339).\\n\\nGlobal Properties Template\\nIn addition to enterprise scoped templates, every file on Box has access to the global properties template. The Properties template is a bucket of free form key:value string pairs, with no additional schema associated with it. Properties are ideal for scenarios where applications want to write metadata to file objects in a flexible way, without pre-defined template structure.\\nProperties follow all the conventions of standard templates, except for being located at a different endpoint. All requests made to the properties template must be made to /files/{file_id}/metadata/global/properties.\",\"example\":{\"test\":\"testvalue\"},\"title\":\"Metadata Object\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Metadata can be used for many purposes. Enterprises may want to have a better way to organize their digital assets for their marketing teams or developers may want to provide advanced content functionality such as facilitating workflows or approvals. Metadata is also visible in the Box Web Application. To learn more, please visit the help documentation.\\nTemplates\\nMetadata that belongs to a file/folder is grouped by templates. Templates allow the metadata service to provide a multitude of services, such as pre-defining sets of key:value pairs or schema enforcement on specific fields. For example, a marketingCollateral template may define where and when specific marketing content should be used. You can also see the representation of the template in the Box web application while navigating to a file preview. Currently, metadata associated with folders does not show in the web application.\\nEach file/folder can have multiple distinct template instances associated with it, such as a marketingCollateral and retentionPolicy template instances. Template instances are also grouped by scopes. Currently, the only scopes support are enterprise and global. Enterprise scopes are defined on a per enterprises basis, whereas global scopes are Box application-wide. Attribute order within template instances is not guaranteed.\\nCurrently, there are four attributes supported by templates: string, enum, float, and  date (RFC 3339).\\n\\nGlobal Properties Template\\nIn addition to enterprise scoped templates, every file on Box has access to the global properties template. The Properties template is a bucket of free form key:value string pairs, with no additional schema associated with it. Properties are ideal for scenarios where applications want to write metadata to file objects in a flexible way, without pre-defined template structure.\\nProperties follow all the conventions of standard templates, except for being located at a different endpoint. All requests made to the properties template must be made to /files/{file_id}/metadata/global/properties.\",\"example\":{\"test\":\"testvalue\"},\"title\":\"Metadata Object\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Metadata can be used for many purposes. Enterprises may want to have a better way to organize their digital assets for their marketing teams or developers may want to provide advanced content functionality such as facilitating workflows or approvals. Metadata is also visible in the Box Web Application. To learn more, please visit the help documentation.\\nTemplates\\nMetadata that belongs to a file/folder is grouped by templates. Templates allow the metadata service to provide a multitude of services, such as pre-defining sets of key:value pairs or schema enforcement on specific fields. For example, a marketingCollateral template may define where and when specific marketing content should be used. You can also see the representation of the template in the Box web application while navigating to a file preview. Currently, metadata associated with folders does not show in the web application.\\nEach file/folder can have multiple distinct template instances associated with it, such as a marketingCollateral and retentionPolicy template instances. Template instances are also grouped by scopes. Currently, the only scopes support are enterprise and global. Enterprise scopes are defined on a per enterprises basis, whereas global scopes are Box application-wide. Attribute order within template instances is not guaranteed.\\nCurrently, there are four attributes supported by templates: string, enum, float, and  date (RFC 3339).\\n\\nGlobal Properties Template\\nIn addition to enterprise scoped templates, every file on Box has access to the global properties template. The Properties template is a bucket of free form key:value string pairs, with no additional schema associated with it. Properties are ideal for scenarios where applications want to write metadata to file objects in a flexible way, without pre-defined template structure.\\nProperties follow all the conventions of standard templates, except for being located at a different endpoint. All requests made to the properties template must be made to /files/{file_id}/metadata/global/properties.\",\"example\":{\"test\":\"testvalue\"},\"title\":\"Metadata Object\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Metadata can be used for many purposes. Enterprises may want to have a better way to organize their digital assets for their marketing teams or developers may want to provide advanced content functionality such as facilitating workflows or approvals. Metadata is also visible in the Box Web Application. To learn more, please visit the help documentation.\\nTemplates\\nMetadata that belongs to a file/folder is grouped by templates. Templates allow the metadata service to provide a multitude of services, such as pre-defining sets of key:value pairs or schema enforcement on specific fields. For example, a marketingCollateral template may define where and when specific marketing content should be used. You can also see the representation of the template in the Box web application while navigating to a file preview. Currently, metadata associated with folders does not show in the web application.\\nEach file/folder can have multiple distinct template instances associated with it, such as a marketingCollateral and retentionPolicy template instances. Template instances are also grouped by scopes. Currently, the only scopes support are enterprise and global. Enterprise scopes are defined on a per enterprises basis, whereas global scopes are Box application-wide. Attribute order within template instances is not guaranteed.\\nCurrently, there are four attributes supported by templates: string, enum, float, and  date (RFC 3339).\\n\\nGlobal Properties Template\\nIn addition to enterprise scoped templates, every file on Box has access to the global properties template. The Properties template is a bucket of free form key:value string pairs, with no additional schema associated with it. Properties are ideal for scenarios where applications want to write metadata to file objects in a flexible way, without pre-defined template structure.\\nProperties follow all the conventions of standard templates, except for being located at a different endpoint. All requests made to the properties template must be made to /files/{file_id}/metadata/global/properties.\",\"example\":{\"test\":\"testvalue\"},\"title\":\"Metadata Object\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Metadata can be used for many purposes. Enterprises may want to have a better way to organize their digital assets for their marketing teams or developers may want to provide advanced content functionality such as facilitating workflows or approvals. Metadata is also visible in the Box Web Application. To learn more, please visit the help documentation.\\nTemplates\\nMetadata that belongs to a file/folder is grouped by templates. Templates allow the metadata service to provide a multitude of services, such as pre-defining sets of key:value pairs or schema enforcement on specific fields. For example, a marketingCollateral template may define where and when specific marketing content should be used. You can also see the representation of the template in the Box web application while navigating to a file preview. Currently, metadata associated with folders does not show in the web application.\\nEach file/folder can have multiple distinct template instances associated with it, such as a marketingCollateral and retentionPolicy template instances. Template instances are also grouped by scopes. Currently, the only scopes support are enterprise and global. Enterprise scopes are defined on a per enterprises basis, whereas global scopes are Box application-wide. Attribute order within template instances is not guaranteed.\\nCurrently, there are four attributes supported by templates: string, enum, float, and  date (RFC 3339).\\n\\nGlobal Properties Template\\nIn addition to enterprise scoped templates, every file on Box has access to the global properties template. The Properties template is a bucket of free form key:value string pairs, with no additional schema associated with it. Properties are ideal for scenarios where applications want to write metadata to file objects in a flexible way, without pre-defined template structure.\\nProperties follow all the conventions of standard templates, except for being located at a different endpoint. All requests made to the properties template must be made to /files/{file_id}/metadata/global/properties.\",\"example\":{\"test\":\"testvalue\"},\"title\":\"Metadata Object\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"This object provides additional information about the event if available. This can include how a user performed an event as well as additional information to correlate an event to external Keysafe logs. Not all events have an additional_details object.  This object is only available in the Enterprise Events.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The object that was modified. See Object definitions for appropriate object: file, folder, comment, etc. Not all events have a source object.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Metadata can be used for many purposes. Enterprises may want to have a better way to organize their digital assets for their marketing teams or developers may want to provide advanced content functionality such as facilitating workflows or approvals. Metadata is also visible in the Box Web Application. To learn more, please visit the help documentation.\\nTemplates\\nMetadata that belongs to a file/folder is grouped by templates. Templates allow the metadata service to provide a multitude of services, such as pre-defining sets of key:value pairs or schema enforcement on specific fields. For example, a marketingCollateral template may define where and when specific marketing content should be used. You can also see the representation of the template in the Box web application while navigating to a file preview. Currently, metadata associated with folders does not show in the web application.\\nEach file/folder can have multiple distinct template instances associated with it, such as a marketingCollateral and retentionPolicy template instances. Template instances are also grouped by scopes. Currently, the only scopes support are enterprise and global. Enterprise scopes are defined on a per enterprises basis, whereas global scopes are Box application-wide. Attribute order within template instances is not guaranteed.\\nCurrently, there are four attributes supported by templates: string, enum, float, and  date (RFC 3339).\\n\\nGlobal Properties Template\\nIn addition to enterprise scoped templates, every file on Box has access to the global properties template. The Properties template is a bucket of free form key:value string pairs, with no additional schema associated with it. Properties are ideal for scenarios where applications want to write metadata to file objects in a flexible way, without pre-defined template structure.\\nProperties follow all the conventions of standard templates, except for being located at a different endpoint. All requests made to the properties template must be made to /files/{file_id}/metadata/global/properties.\",\"example\":{\"test\":\"testvalue\"},\"title\":\"Metadata Object\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The data for the operation.  Can vary depending on the operation.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 127,
        "numOpsQuery": 60,
        "numOpsMutation": 67,
        "numQueriesCreated": 58,
        "numMutationsCreated": 46
      }
    },
    {
      "name": "Box 2.0 OAuth2 Token",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /revoke' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 2,
        "numOpsQuery": 0,
        "numOpsMutation": 2,
        "numQueriesCreated": 0,
        "numMutationsCreated": 1
      }
    },
    {
      "name": "Box 2.0 Uploads",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /files/upload_sessions/{SESSION_ID}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /files/upload_sessions/{SESSION_ID}/commit' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '201'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /files/upload_sessions/{SESSION_ID}/commit' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '201'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"object\"},\"description\":\"Optional. An array of attributes to set on the created file. See https://box-content.readme.io/reference#file-object\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 9,
        "numOpsQuery": 2,
        "numOpsMutation": 7,
        "numQueriesCreated": 2,
        "numMutationsCreated": 6
      }
    },
    {
      "name": "BrandLovers Marketplace API V1",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /order/{orderId}/shipment/cancel' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /order/{orderId}/shipment/delivered' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /order/{orderId}/shipment/exchange' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /order/{orderId}/shipment/return' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /order/{orderId}/shipment/sent' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /orders/shipments/delivered' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /orders/shipments/shipped' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /product' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /product/{skuSellerId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /product/{skuSellerId}/prices' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /product/{skuSellerId}/status' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /product/{skuSellerId}/stock' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /products' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /products/prices' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /products/status' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /products/stocks' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /ticket' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /ticket/{ticketId}/message' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /ticket/{ticketId}/status' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 36,
        "numOpsQuery": 17,
        "numOpsMutation": 19,
        "numQueriesCreated": 17,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Browshot",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /screenshot/html' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /screenshot/thumbnail' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"URL to download the screenshot\",\"format\":\"string\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 17,
        "numOpsQuery": 16,
        "numOpsMutation": 1,
        "numQueriesCreated": 14,
        "numMutationsCreated": 1
      }
    },
    {
      "name": "Bufferapp",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 18,
        "numOpsQuery": 10,
        "numOpsMutation": 8,
        "numQueriesCreated": 10,
        "numMutationsCreated": 8
      }
    },
    {
      "name": "Bungie.Net",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/GroupsV2.GroupMember\"},\"description\":\"This property will be populated if the authenticated user is a member of the group. Note that because of account linking, a user can sometimes be part of a clan more than once. As such, this returns the highest member type available.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/GroupsV2.GroupPotentialMember\"},\"description\":\"This property will be populated if the authenticated user is an applicant or has an outstanding invitation to join. Note that because of account linking, a user can sometimes be part of a clan more than once.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/Destiny.DestinyProgression\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"format\":\"float\",\"type\":\"number\"},\"description\":\"Milestones may have arbitrary key/value pairs associated with them, for data that users will want to know about but that doesn't fit neatly into any of the common components such as Quests. A good example of this would be - if this existed in Destiny 1 - the number of wins you currently have on your Trials of Osiris ticket. Looking in the DestinyMilestoneDefinition, you can use the string identifier of this dictionary to look up more info about the value, including localized string content for displaying the value. The value in the dictionary is the floating point number. The definition will tell you how to format this number.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/Destiny.Milestones.DestinyPublicMilestone\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/Destiny.HistoricalStats.Definitions.DestinyHistoricalStatsDefinition\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"additionalProperties\":{\"$ref\":\"#/components/schemas/Destiny.HistoricalStats.DestinyLeaderboard\"},\"type\":\"object\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/Destiny.HistoricalStats.DestinyHistoricalStatsValue\"},\"description\":\"Collection of stats for the player in this activity.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/Destiny.HistoricalStats.DestinyHistoricalStatsValue\"},\"description\":\"Collection of stats for the player in this activity.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/Destiny.HistoricalStats.DestinyHistoricalStatsValue\"},\"description\":\"Collection of stats for the period.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/Destiny.HistoricalStats.DestinyHistoricalStatsByPeriod\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/Destiny.HistoricalStats.DestinyHistoricalStatsValue\"},\"description\":\"Collection of stats for the period.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/Destiny.HistoricalStats.DestinyHistoricalStatsValue\"},\"description\":\"Collection of stats for the player in this activity.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/Destiny.HistoricalStats.DestinyHistoricalStatsByPeriod\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/Destiny.HistoricalStats.DestinyHistoricalStatsValue\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/Destiny.HistoricalStats.DestinyHistoricalStatsValue\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/Destiny.HistoricalStats.DestinyHistoricalStatsValue\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/Destiny.HistoricalStats.DestinyHistoricalStatsValue\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/Destiny.HistoricalStats.DestinyHistoricalStatsByPeriod\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/Destiny.Entities.Characters.DestinyCharacterActivitiesComponent\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/Destiny.Entities.Inventory.DestinyInventoryComponent\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/Destiny.Entities.Inventory.DestinyInventoryComponent\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/Destiny.Components.Kiosks.DestinyKiosksComponent\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/Destiny.Entities.Characters.DestinyCharacterProgressionComponent\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/Destiny.Entities.Characters.DestinyCharacterRenderComponent\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/Destiny.Entities.Characters.DestinyCharacterComponent\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/Destiny.Entities.Items.DestinyItemInstanceComponent\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/Destiny.Entities.Items.DestinyItemObjectivesComponent\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/Destiny.Entities.Items.DestinyItemPerksComponent\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/Destiny.Components.Items.DestinyItemPlugComponent\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/Destiny.Entities.Items.DestinyItemRenderComponent\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/Destiny.Entities.Items.DestinyItemSocketsComponent\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/Destiny.Entities.Items.DestinyItemStatsComponent\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/Destiny.Entities.Items.DestinyItemTalentGridComponent\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"items\":{\"$ref\":\"#/components/schemas/Destiny.Components.Kiosks.DestinyKioskItem\"},\"type\":\"array\"},\"description\":\"A dictionary keyed by the Kiosk Vendor's hash identifier (use it to look up the DestinyVendorDefinition for the relevant kiosk vendor), and whose value is a list of all the items that the user can \\\"see\\\" in the Kiosk, and any other interesting metadata.\",\"type\":\"object\",\"x-mapped-definition\":{\"$ref\":\"#/components/schemas/Destiny.Definitions.DestinyVendorDefinition\"}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"format\":\"int32\",\"type\":\"integer\"},\"description\":\"Your character's stats, such as Agility, Resilience, etc... *not* historical stats.\\r\\nYou'll have to call a different endpoint for those.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/Destiny.Progression.DestinyFactionProgression\"},\"description\":\"A dictionary of all known Factions, keyed by the Faction's hash. It contains data about this character's status with the faction.\",\"type\":\"object\",\"x-mapped-definition\":{\"$ref\":\"#/components/schemas/Destiny.Definitions.DestinyFactionDefinition\"}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/Destiny.Milestones.DestinyMilestone\"},\"description\":\"Milestones are related to the simple progressions shown in the game, but return additional and hopefully helpful information for users about the specifics of the Milestone's status.\",\"type\":\"object\",\"x-mapped-definition\":{\"$ref\":\"#/components/schemas/Destiny.Definitions.Milestones.DestinyMilestoneDefinition\"}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/Destiny.DestinyProgression\"},\"description\":\"A Dictionary of all known progressions for the Character, keyed by the Progression's hash.\\r\\nNot all progressions have user-facing data, but those who do will have that data contained in the DestinyProgressionDefinition.\",\"type\":\"object\",\"x-mapped-definition\":{\"$ref\":\"#/components/schemas/Destiny.Definitions.DestinyProgressionDefinition\"}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"items\":{\"$ref\":\"#/components/schemas/Destiny.Quests.DestinyObjectiveProgress\"},\"type\":\"array\"},\"description\":\"Sometimes, you have items in your inventory that don't have instances, but still have Objective information. This provides you that objective information for uninstanced items. \\r\\nThis dictionary is keyed by the item's hash: which you can use to look up the name and description for the overall task(s) implied by the objective. The value is the list of objectives for this item, and their statuses.\",\"type\":\"object\",\"x-mapped-definition\":{\"$ref\":\"#/components/schemas/Destiny.Definitions.DestinyInventoryItemDefinition\"}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/Destiny.Entities.Vendors.DestinyVendorSaleItemComponent\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"format\":\"int32\",\"type\":\"integer\"},\"description\":\"A dictionary for rendering gear components, with:\\r\\nkey = Art Arrangement Region Index\\r\\nvalue = The chosen Arrangement Index for the Region, based on the value of a stat on the item used for making the choice.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/Destiny.DestinyStat\"},\"description\":\"If the item has stats that it provides (damage, defense, etc...), it will be given here.\",\"type\":\"object\",\"x-mapped-definition\":{\"$ref\":\"#/components/schemas/Destiny.Definitions.DestinyStatDefinition\"}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"object\"},\"description\":\"Firehose content is really a collection of metadata and \\\"properties\\\", which are the potentially-but-not-strictly localizable data that comprises the meat of whatever content is being shown.\\r\\nAs Cole Porter would have crooned, \\\"Anything Goes\\\" with Firehose properties. They are most often strings, but they can theoretically be anything. They are JSON encoded, and could be JSON structures, simple strings, numbers etc... The Content Type of the item (cType) will describe the properties, and thus how they ought to be deserialized.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 94,
        "numOpsQuery": 61,
        "numOpsMutation": 33,
        "numQueriesCreated": 61,
        "numMutationsCreated": 33
      }
    },
    {
      "name": "Cambase.io",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /api/v1/models.json' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /api/v1/models.json' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /api/v1/models/search.json' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /api/v1/models/{id}.json' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /api/v1/models/{id}.json' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /api/v1/recorders.json' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /api/v1/recorders.json' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /api/v1/recorders/search.json' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /api/v1/recorders/{id}.json' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /api/v1/recorders/{id}.json' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /api/v1/vendors.json' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /api/v1/vendors.json' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /api/v1/vendors/{id}.json' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /api/v1/vendors/{id}.json' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 14,
        "numOpsQuery": 8,
        "numOpsMutation": 6,
        "numQueriesCreated": 0,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "EVE Swagger Interface",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /characters/{character_id}/calendar/{event_id}/' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /characters/{character_id}/contacts/' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /characters/{character_id}/contacts/' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /characters/{character_id}/fittings/{fitting_id}/' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /characters/{character_id}/mail/labels/{label_id}/' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /characters/{character_id}/mail/{mail_id}/' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /characters/{character_id}/mail/{mail_id}/' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /corporations/{corporation_id}/structures/{structure_id}/' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /fleets/{fleet_id}/' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /fleets/{fleet_id}/members/' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /fleets/{fleet_id}/members/{member_id}/' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /fleets/{fleet_id}/members/{member_id}/' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /fleets/{fleet_id}/squads/{squad_id}/' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /fleets/{fleet_id}/squads/{squad_id}/' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /fleets/{fleet_id}/wings/{wing_id}/' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /fleets/{fleet_id}/wings/{wing_id}/' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /ui/autopilot/waypoint/' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /ui/openwindow/contract/' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /ui/openwindow/information/' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /ui/openwindow/marketdetails/' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /ui/openwindow/newmail/' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 203,
        "numOpsQuery": 168,
        "numOpsMutation": 35,
        "numQueriesCreated": 168,
        "numMutationsCreated": 14
      }
    },
    {
      "name": "Cenit IO - REST API Specification",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /setup/connection/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /setup/connection_role/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /setup/data_type/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /setup/flow/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /setup/namespace/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /setup/observer/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /setup/scheduler/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /setup/schema/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /setup/translator/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /setup/webhook/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 40,
        "numOpsQuery": 20,
        "numOpsMutation": 20,
        "numQueriesCreated": 40,
        "numMutationsCreated": 20
      }
    },
    {
      "name": "Channel 4",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /4od/episode-list/date/{yyyy}/{mm}/{dd}.atom' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /4od/episode-list/popular.atom' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /4od/recently-added/videos.atom' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /atoz.atom' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /atoz/{start_letter}.atom' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /atoz/{start_letter}/page-{pageno}.atom' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /brands/4od.atom' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /brands/4od/page-{pageno}.atom' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /brands/4od/popular.atom' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /brands/4od/popular/page-{pageno}.atom' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /brands/popular.atom' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /brands/popular/page-{pageno}.atom' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /categories.atom' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /categories/{category}.atom' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /categories/{category}/4od.atom' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /categories/{category}/4od/page-{pageno}.atom' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /categories/{category}/4od/popular.atom' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /categories/{category}/4od/popular/page-{pageno}.atom' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /categories/{category}/4od/title.atom' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /categories/{category}/4od/title/page-{pageno}.atom' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /categories/{category}/channel/{channel}.atom' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /categories/{category}/channel/{channel}/4od.atom' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /categories/{category}/channel/{channel}/4od/page-{pageno}.atom' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /categories/{category}/channel/{channel}/4od/popular.atom' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /categories/{category}/channel/{channel}/4od/popular/page-{pageno}.atom' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /categories/{category}/channel/{channel}/4od/title.atom' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /categories/{category}/channel/{channel}/4od/title/page-{pageno}.atom' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /categories/{category}/channel/{channel}/page-{pageno}.atom' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /categories/{category}/channel/{channel}/title.atom' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /categories/{category}/channel/{channel}/title/page-{pageno}.atom' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /categories/{category}/derived/ad.atom' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /categories/{category}/derived/ad/4od.atom' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /categories/{category}/derived/ad/4od/page-{pageno}.atom' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /categories/{category}/derived/ad/4od/popular.atom' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /categories/{category}/derived/ad/4od/popular/page-{pageno}.atom' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /categories/{category}/derived/ad/4od/title.atom' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /categories/{category}/derived/ad/4od/title/page-{pageno}.atom' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /categories/{category}/derived/ad/page-{pageno}.atom' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /categories/{category}/derived/ad/title.atom' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /categories/{category}/derived/ad/title/page-{pageno}.atom' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /categories/{category}/page-{pageno}.atom' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /categories/{category}/popular.atom' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /categories/{category}/popular/page-{pageno}.atom' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /categories/{category}/title.atom' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /categories/{category}/title/page-{pageno}.atom' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /collections/{collection_name}.atom' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /collections/{collection_name}/4od.atom' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /collections/{collection_name}/flattened.atom' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /collections/{collection_name}/flattened/4od.atom' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /coming-soon.atom' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /coming-soon/{category}.atom' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /programme/{programme-id}.atom' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /search.atom' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /search/page-{pageno}.atom' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /search/{q}.atom' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /search/{q}/page-{pageno}.atom' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /tv-listings/daily/{yyyy}/{mm}/{dd}.atom' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /tv-listings/daily/{yyyy}/{mm}/{dd}/{channel}.atom' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /{brand-web-safe-title}.atom' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /{brand-web-safe-title}/4od.atom' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /{brand-web-safe-title}/epg.atom' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /{brand-web-safe-title}/episode-guide.atom' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /{brand-web-safe-title}/episode-guide/series-{series_number}.atom' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /{brand-web-safe-title}/episode-guide/series-{series_number}/episode-{episode_number}.atom' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /{brand-web-safe-title}/videos/all.atom' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /{brand-web-safe-title}/videos/series-{series_number}.atom' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /{brand-web-safe-title}/videos/series-{series_number}/episode-{episode_number}.atom' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /{brand-web-safe-title}/videos/{clip-asset-id}.atom' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 68,
        "numOpsQuery": 68,
        "numOpsMutation": 0,
        "numQueriesCreated": 0,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "CircleCI",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /project/{username}/{project}/ssh-key' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /user/heroku-key' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"oneOf\":[{\"type\":\"integer\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"oneOf\":[{\"type\":\"integer\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"oneOf\":[{\"type\":\"integer\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"reason why we didn't build, if we didn't build\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"build_num of the build this is a retry of\",\"oneOf\":[{\"type\":\"integer\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"format\":\"uri\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaTypeScalar",
            "message": "Request / response schema has no (valid) type: Unknown JSON scalar type 'null'",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"oneOf\":[{\"type\":\"boolean\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"oneOf\":[{\"type\":\"boolean\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"oneOf\":[{\"type\":\"boolean\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"oneOf\":[{\"type\":\"boolean\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Additional environment variables to inject into the build environment. A map of names to values.\\n\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Additional environment variables to inject into the build environment. A map of names to values.\\n\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 22,
        "numOpsQuery": 11,
        "numOpsMutation": 11,
        "numQueriesCreated": 11,
        "numMutationsCreated": 9
      }
    },
    {
      "name": "REST API Version 2",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /alexaIntent' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /conversations/{convId}/favorite' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /conversations/{convId}/favorite' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /conversations/{convId}/messages/{itemId}/flag' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /conversations/{convId}/messages/{itemId}/flag' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /conversations/{convId}/messages/{itemId}/like' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /conversations/{convId}/messages/{itemId}/like' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /webhooks' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /webhooks/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 52,
        "numOpsQuery": 19,
        "numOpsMutation": 33,
        "numQueriesCreated": 19,
        "numMutationsCreated": 24
      }
    },
    {
      "name": "Cisco PSIRT openVuln",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /security/advisories/cvrf/advisory/{advisory_id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /security/advisories/cvrf/all' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /security/advisories/cvrf/cve/{cve_id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /security/advisories/cvrf/latest/{number}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /security/advisories/cvrf/product' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /security/advisories/cvrf/severity/{severity}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /security/advisories/cvrf/severity/{severity}/firstpublished' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /security/advisories/cvrf/severity/{severity}/lastpublished' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /security/advisories/cvrf/year/{year}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /security/advisories/ios' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /security/advisories/iosxe' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /security/advisories/oval/advisory/{advisory_id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /security/advisories/oval/all' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /security/advisories/oval/cve/{cve_id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /security/advisories/oval/latest/{number}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /security/advisories/oval/product' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /security/advisories/oval/severity/{severity}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /security/advisories/oval/severity/{severity}/firstpublished' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /security/advisories/oval/severity/{severity}/lastpublished' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 19,
        "numOpsQuery": 19,
        "numOpsMutation": 0,
        "numQueriesCreated": 0,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "SCIM",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /Groups/{groupKey}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /Users/{userKey}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 14,
        "numOpsQuery": 7,
        "numOpsMutation": 7,
        "numQueriesCreated": 7,
        "numMutationsCreated": 5
      }
    },
    {
      "name": "City Context",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 3,
        "numOpsQuery": 3,
        "numOpsMutation": 0,
        "numQueriesCreated": 3,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Clarify",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/bundles' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /v1/bundles' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /v1/bundles' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /v1/bundles/{bundle_id}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /v1/bundles/{bundle_id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/bundles/{bundle_id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /v1/bundles/{bundle_id}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /v1/bundles/{bundle_id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/bundles/{bundle_id}/insights' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /v1/bundles/{bundle_id}/insights' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /v1/bundles/{bundle_id}/insights' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/bundles/{bundle_id}/insights/{insight_id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /v1/bundles/{bundle_id}/metadata' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /v1/bundles/{bundle_id}/metadata' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/bundles/{bundle_id}/metadata' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /v1/bundles/{bundle_id}/metadata' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /v1/bundles/{bundle_id}/metadata' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /v1/bundles/{bundle_id}/tracks' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /v1/bundles/{bundle_id}/tracks' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/bundles/{bundle_id}/tracks' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /v1/bundles/{bundle_id}/tracks' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /v1/bundles/{bundle_id}/tracks' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /v1/bundles/{bundle_id}/tracks' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /v1/bundles/{bundle_id}/tracks/{track_id}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /v1/bundles/{bundle_id}/tracks/{track_id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/bundles/{bundle_id}/tracks/{track_id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /v1/bundles/{bundle_id}/tracks/{track_id}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /v1/bundles/{bundle_id}/tracks/{track_id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/reports/scores' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/reports/trends' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/search' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 21,
        "numOpsQuery": 10,
        "numOpsMutation": 11,
        "numQueriesCreated": 0,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Clever-Cloud",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /application/{appId}/environment' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /application/{appId}/environment' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /authorize' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /events/event-socket' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /github/callback' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /github/link' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /github/link' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /github/login' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /github/redeploy' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /github/signup' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /github/signup' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /logs/logs-chunked/{appId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /logs/logs-socket/{appId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /logs/{appId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /logs/{appId}/drains' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /logs/{appId}/drains' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /logs/{appId}/drains/:idOrUrl' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /logs/{appId}/drains/:idOrUrl' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /newsfeeds/blog' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /newsfeeds/engineering' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /notifications/emailhooks/{ownerId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /notifications/emailhooks/{ownerId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /notifications/emailhooks/{ownerId}/:id' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /notifications/emailhooks/{ownerId}/:id' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /notifications/info/events' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /notifications/info/webhookformats' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /notifications/webhooks/{ownerId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /notifications/webhooks/{ownerId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /notifications/webhooks/{ownerId}/:id' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /notifications/webhooks/{ownerId}/:id' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /oauth/access_token' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /oauth/access_token_query' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /oauth/authorize' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /oauth/authorize' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /oauth/request_token' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /oauth/request_token_query' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /organisations/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /organisations/{id}/addonproviders/{providerId}/features/{featureId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /organisations/{id}/addonproviders/{providerId}/plans/{planId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /organisations/{id}/addonproviders/{providerId}/plans/{planId}/features/{featureName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /organisations/{id}/addonproviders/{providerId}/plans/{planId}/features/{featureName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /organisations/{id}/addonproviders/{providerId}/testers' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /organisations/{id}/addons/preorders' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /organisations/{id}/addons/{addonId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /organisations/{id}/addons/{addonId}/tags/{tag}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /organisations/{id}/addons/{addonId}/tags/{tag}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /organisations/{id}/applications/{appId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /organisations/{id}/applications/{appId}/addons' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /organisations/{id}/applications/{appId}/addons/{addonId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /organisations/{id}/applications/{appId}/branch' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /organisations/{id}/applications/{appId}/branches' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /organisations/{id}/applications/{appId}/dependencies/{dependencyId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /organisations/{id}/applications/{appId}/dependencies/{dependencyId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /organisations/{id}/applications/{appId}/deployments/{deploymentId}/instances' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /organisations/{id}/applications/{appId}/env/{envName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /organisations/{id}/applications/{appId}/exposed_env' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /organisations/{id}/applications/{appId}/exposed_env' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /organisations/{id}/applications/{appId}/instances' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /organisations/{id}/applications/{appId}/instances' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /organisations/{id}/applications/{appId}/instances/{instanceId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /organisations/{id}/applications/{appId}/tags/{tag}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /organisations/{id}/applications/{appId}/tags/{tag}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /organisations/{id}/applications/{appId}/vhosts/favourite' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /organisations/{id}/applications/{appId}/vhosts/favourite' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /organisations/{id}/applications/{appId}/vhosts/{domain}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /organisations/{id}/applications/{appId}/vhosts/{domain}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /organisations/{id}/avatar' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /organisations/{id}/consumers' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /organisations/{id}/consumers/{key}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /organisations/{id}/consumers/{key}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /organisations/{id}/members' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /organisations/{id}/members/{userId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /organisations/{id}/members/{userId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /organisations/{id}/payment-info' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /organisations/{id}/payments/billings' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /organisations/{id}/payments/billings' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /organisations/{id}/payments/billings/unpaid' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /organisations/{id}/payments/billings/{bid}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /organisations/{id}/payments/billings/{bid}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /organisations/{id}/payments/billings/{bid}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /organisations/{id}/payments/billings/{bid}.pdf' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /organisations/{id}/payments/fullprice/{price}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /organisations/{id}/payments/methods' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /organisations/{id}/payments/methods' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /organisations/{id}/payments/methods/default' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /organisations/{id}/payments/methods/default' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /organisations/{id}/payments/methods/{mId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /organisations/{id}/payments/monthlyinvoice' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /organisations/{id}/payments/monthlyinvoice/maxcredit' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /organisations/{id}/payments/recurring' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /organisations/{id}/payments/recurring' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /organisations/{id}/payments/tokens/bt' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /password_forgotten' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /password_forgotten' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /password_forgotten/{key}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /password_forgotten/{key}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /payments/coupons/{name}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /payments/tokens/bt' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /payments/webhooks/bt' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /payments/{bid}/end/bt' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /products/mfa_kinds' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /products/packages' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /products/prices' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /self' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /self' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /self/addons' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /self/addons/preorders' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /self/addons/{addonId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /self/addons/{addonId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /self/addons/{addonId}/plan' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /self/addons/{addonId}/tags/{tag}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /self/addons/{addonId}/tags/{tag}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /self/applications' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /self/applications/{appId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /self/applications/{appId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /self/applications/{appId}/addons' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /self/applications/{appId}/addons/{addonId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /self/applications/{appId}/branch' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /self/applications/{appId}/branches' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /self/applications/{appId}/dependencies/{dependencyId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /self/applications/{appId}/dependencies/{dependencyId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /self/applications/{appId}/deployments/{deploymentId}/instances' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /self/applications/{appId}/env' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /self/applications/{appId}/env/{envName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /self/applications/{appId}/env/{envName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /self/applications/{appId}/exposed_env' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /self/applications/{appId}/exposed_env' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /self/applications/{appId}/instances' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /self/applications/{appId}/instances' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /self/applications/{appId}/instances/{instanceId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /self/applications/{appId}/tags/{tag}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /self/applications/{appId}/tags/{tag}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /self/applications/{appId}/vhosts/favourite' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /self/applications/{appId}/vhosts/favourite' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /self/applications/{appId}/vhosts/{domain}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /self/applications/{appId}/vhosts/{domain}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /self/avatar' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /self/confirmation_email' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /self/consumers' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /self/consumers/{key}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /self/consumers/{key}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /self/emails/{email}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /self/emails/{email}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /self/keys/{key}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /self/keys/{key}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /self/mfa/{kind}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /self/mfa/{kind}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /self/mfa/{kind}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /self/mfa/{kind}/backupcodes' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /self/mfa/{kind}/confirmation' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /self/payment-info' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /self/payments/billings' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /self/payments/billings' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /self/payments/billings/{bid}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /self/payments/billings/{bid}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /self/payments/billings/{bid}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /self/payments/billings/{bid}.pdf' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /self/payments/fullprice/{price}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /self/payments/methods' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /self/payments/methods' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /self/payments/methods/default' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /self/payments/methods/default' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /self/payments/methods/{mId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /self/payments/monthlyinvoice' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /self/payments/monthlyinvoice/maxcredit' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /self/payments/recurring' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /self/payments/recurring' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /self/payments/tokens/bt' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /self/tokens' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /self/tokens/{token}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /self/validate_email' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /users' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /users/{userId}/git-info' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /vendor/apps/{addonId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /vendor/apps/{addonId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /vendor/apps/{addonId}/consumptions' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"items\":{\"$ref\":\"#/components/schemas/AppInstance\"},\"type\":\"array\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 274,
        "numOpsQuery": 141,
        "numOpsMutation": 133,
        "numQueriesCreated": 83,
        "numMutationsCreated": 15
      }
    },
    {
      "name": "ClickMeter",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/Api.Core.Dto.Aggregated.AggregatedResult\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 108,
        "numOpsQuery": 65,
        "numOpsMutation": 43,
        "numQueriesCreated": 65,
        "numMutationsCreated": 43
      }
    },
    {
      "name": "Discovery Market Research",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /api/contracts/' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /api/metadata/' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /api/naics/' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /api/vendor/{duns}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /api/vendors/' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 5,
        "numOpsQuery": 5,
        "numOpsMutation": 0,
        "numQueriesCreated": 0,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Cnab Online",
      "report": {
        "warnings": [],
        "numOps": 4,
        "numOpsQuery": 3,
        "numOpsMutation": 1,
        "numQueriesCreated": 3,
        "numMutationsCreated": 1
      }
    },
    {
      "name": "The Consumer Financial Protection Bureau",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /data' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /data/hmda' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /data/hmda/concept/{concept}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /data/hmda/slice/{slice}/metadata' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /data/{dataset}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 6,
        "numOpsQuery": 6,
        "numOpsMutation": 0,
        "numQueriesCreated": 1,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "CORE API v2",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /articles/get/{coreId}/download/pdf' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 17,
        "numOpsQuery": 9,
        "numOpsMutation": 8,
        "numQueriesCreated": 8,
        "numMutationsCreated": 8
      }
    },
    {
      "name": "EU BON UTIS",
      "report": {
        "warnings": [],
        "numOps": 2,
        "numOpsQuery": 2,
        "numOpsMutation": 0,
        "numQueriesCreated": 2,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Regulations.gov",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /docket.{response_format}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /document.{response_format}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /documents.{response_format}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 3,
        "numOpsQuery": 3,
        "numOpsMutation": 0,
        "numQueriesCreated": 0,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Open Skills",
      "report": {
        "warnings": [],
        "numOps": 13,
        "numOpsQuery": 13,
        "numOpsMutation": 0,
        "numQueriesCreated": 13,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "DatumBox",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /1.0/AdultContentDetection.json' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /1.0/CommercialDetection.json' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /1.0/DocumentSimilarity.json' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /1.0/EducationalDetection.json' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /1.0/GenderDetection.json' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /1.0/KeywordExtraction.json' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /1.0/LanguageDetection.json' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /1.0/ReadabilityAssessment.json' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /1.0/SentimentAnalysis.json' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /1.0/SpamDetection.json' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /1.0/SubjectivityAnalysis.json' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /1.0/TextExtraction.json' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /1.0/TopicClassification.json' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /1.0/TwitterSentimentAnalysis.json' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 14,
        "numOpsQuery": 0,
        "numOpsMutation": 14,
        "numQueriesCreated": 0,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Betriebsstellen",
      "report": {
        "warnings": [],
        "numOps": 2,
        "numOpsQuery": 2,
        "numOpsMutation": 0,
        "numQueriesCreated": 2,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Fahrplan-Free",
      "report": {
        "warnings": [],
        "numOps": 4,
        "numOpsQuery": 4,
        "numOpsMutation": 0,
        "numQueriesCreated": 4,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "FaSta-Station_Facilities_Status",
      "report": {
        "warnings": [],
        "numOps": 5,
        "numOpsQuery": 5,
        "numOpsMutation": 0,
        "numQueriesCreated": 5,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Flinkster_API_NG",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"object\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"object\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"object\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"object\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"object\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"object\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 10,
        "numOpsQuery": 10,
        "numOpsMutation": 0,
        "numQueriesCreated": 10,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Reisezentren-API",
      "report": {
        "warnings": [],
        "numOps": 4,
        "numOpsQuery": 4,
        "numOpsMutation": 0,
        "numQueriesCreated": 4,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Stationsdatenbereitstellung",
      "report": {
        "warnings": [],
        "numOps": 4,
        "numOpsQuery": 4,
        "numOpsMutation": 0,
        "numQueriesCreated": 4,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "DocuSign",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /v2/accounts/{accountId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /v2/accounts/{accountId}/billing_plan/purchased_envelopes' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /v2/accounts/{accountId}/brands/{brandId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v2/accounts/{accountId}/brands/{brandId}/file' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /v2/accounts/{accountId}/brands/{brandId}/logos/{logoType}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v2/accounts/{accountId}/brands/{brandId}/logos/{logoType}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /v2/accounts/{accountId}/brands/{brandId}/logos/{logoType}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v2/accounts/{accountId}/brands/{brandId}/resources/{resourceContentType}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /v2/accounts/{accountId}/connect/failures/{failureId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /v2/accounts/{accountId}/connect/logs' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /v2/accounts/{accountId}/connect/logs/{logId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /v2/accounts/{accountId}/connect/{connectId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /v2/accounts/{accountId}/custom_fields/{customFieldId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v2/accounts/{accountId}/envelopes/{envelopeId}/attachments/{attachmentId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v2/accounts/{accountId}/envelopes/{envelopeId}/documents/{documentId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /v2/accounts/{accountId}/envelopes/{envelopeId}/documents/{documentId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /v2/accounts/{accountId}/envelopes/{envelopeId}/documents/{documentId}/pages/{pageNumber}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v2/accounts/{accountId}/envelopes/{envelopeId}/documents/{documentId}/pages/{pageNumber}/page_image' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /v2/accounts/{accountId}/envelopes/{envelopeId}/documents/{documentId}/pages/{pageNumber}/page_image' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /v2/accounts/{accountId}/envelopes/{envelopeId}/documents/{documentId}/templates/{templateId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v2/accounts/{accountId}/envelopes/{envelopeId}/recipients/{recipientId}/initials_image' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /v2/accounts/{accountId}/envelopes/{envelopeId}/recipients/{recipientId}/initials_image' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v2/accounts/{accountId}/envelopes/{envelopeId}/recipients/{recipientId}/signature_image' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /v2/accounts/{accountId}/envelopes/{envelopeId}/recipients/{recipientId}/signature_image' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /v2/accounts/{accountId}/permission_profiles/{permissionProfileId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /v2/accounts/{accountId}/powerforms/{powerFormId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /v2/accounts/{accountId}/settings' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /v2/accounts/{accountId}/settings/enote_configuration' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /v2/accounts/{accountId}/tab_definitions/{customTabId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v2/accounts/{accountId}/templates/{templateId}/documents/{documentId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /v2/accounts/{accountId}/templates/{templateId}/documents/{documentId}/pages/{pageNumber}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v2/accounts/{accountId}/templates/{templateId}/documents/{documentId}/pages/{pageNumber}/page_image' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /v2/accounts/{accountId}/templates/{templateId}/documents/{documentId}/pages/{pageNumber}/page_image' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /v2/accounts/{accountId}/users/{userId}/profile' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /v2/accounts/{accountId}/users/{userId}/profile/image' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v2/accounts/{accountId}/users/{userId}/profile/image' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /v2/accounts/{accountId}/users/{userId}/profile/image' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /v2/accounts/{accountId}/users/{userId}/settings' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /v2/accounts/{accountId}/users/{userId}/signatures/{signatureId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v2/accounts/{accountId}/users/{userId}/signatures/{signatureId}/{imageType}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /v2/accounts/{accountId}/users/{userId}/social' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /v2/accounts/{accountId}/users/{userId}/social' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /v2/accounts/{accountId}/workspaces/{workspaceId}/folders/{folderId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v2/accounts/{accountId}/workspaces/{workspaceId}/folders/{folderId}/files/{fileId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /v2/diagnostics/request_logs' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v2/diagnostics/request_logs/{requestLogId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /v2/login_information/{loginPart}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /v2/oauth2/revoke' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 303,
        "numOpsQuery": 129,
        "numOpsMutation": 174,
        "numQueriesCreated": 115,
        "numMutationsCreated": 140
      }
    },
    {
      "name": "domainsdb.info",
      "report": {
        "warnings": [],
        "numOps": 1,
        "numOpsQuery": 1,
        "numOpsMutation": 0,
        "numQueriesCreated": 1,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "DropX",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /products/' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /products/link-search' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /products/link-search-v2' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /products/search' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /products/search-v2' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /products/title-search' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /users/usage' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 7,
        "numOpsQuery": 7,
        "numOpsMutation": 0,
        "numQueriesCreated": 0,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "dweet.io",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /alert/{who}/when/{thing}/{condition}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /dweet/for/{thing}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /dweet/quietly/for/{thing}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /get/alert/for/{thing}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /get/dweets/for/{thing}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /get/latest/dweet/for/{thing}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /get/stored/alerts/for/{thing}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /get/stored/dweets/for/{thing}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /listen/for/dweets/from/{thing}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /lock/{thing}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /remove/alert/for/{thing}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /remove/lock/{lock}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /unlock/{thing}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 13,
        "numOpsQuery": 11,
        "numOpsMutation": 2,
        "numQueriesCreated": 0,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "API to View & Search for Items",
      "report": {
        "warnings": [],
        "numOps": 4,
        "numOpsQuery": 4,
        "numOpsMutation": 0,
        "numQueriesCreated": 4,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Item Feed Service",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /item' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /item' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /item_description' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /item_description' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          }
        ],
        "numOps": 2,
        "numOpsQuery": 2,
        "numOpsMutation": 0,
        "numQueriesCreated": 2,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Buy Marketing",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /merchandised_product/get_also_bought_products' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /merchandised_product/get_also_bought_products' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /merchandised_product/get_also_viewed_products' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /merchandised_product/get_also_viewed_products' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          }
        ],
        "numOps": 3,
        "numOpsQuery": 3,
        "numOpsMutation": 0,
        "numQueriesCreated": 3,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Taxonomy",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /category_tree/{category_tree_id}/get_category_suggestions' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /category_tree/{category_tree_id}/get_category_suggestions' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /category_tree/{category_tree_id}/get_item_aspects_for_category' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /category_tree/{category_tree_id}/get_item_aspects_for_category' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /get_default_category_tree_id' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /get_default_category_tree_id' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          }
        ],
        "numOps": 5,
        "numOpsQuery": 5,
        "numOpsMutation": 0,
        "numQueriesCreated": 5,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Fulfillment",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 5,
        "numOpsQuery": 4,
        "numOpsMutation": 1,
        "numQueriesCreated": 4,
        "numMutationsCreated": 1
      }
    },
    {
      "name": "U.S. EPA Enforcement and Compliance History Online (ECHO) - Enforcement Case Search",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /case_rest_services.get_download' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /case_rest_services.get_download' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 16,
        "numOpsQuery": 8,
        "numOpsMutation": 8,
        "numQueriesCreated": 7,
        "numMutationsCreated": 7
      }
    },
    {
      "name": "U.S. EPA Enforcement and Compliance History Online (ECHO) - Detailed Facility Report (DFR)",
      "report": {
        "warnings": [],
        "numOps": 68,
        "numOpsQuery": 34,
        "numOpsMutation": 34,
        "numQueriesCreated": 34,
        "numMutationsCreated": 34
      }
    },
    {
      "name": "U.S. EPA Enforcement and Compliance History Online (ECHO) - Effluent Charting and Reporting",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /eff_rest_services.download_effluent_chart' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /eff_rest_services.download_effluent_chart' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 8,
        "numOpsQuery": 4,
        "numOpsMutation": 4,
        "numQueriesCreated": 3,
        "numMutationsCreated": 3
      }
    },
    {
      "name": "REST API v1 Core Resources",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /api/v1/cinema-detail/search/{cinema_name}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /api/v1/cinema-schedule/search/{movie_title}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /api/v1/cinema-schedule/searchall/{param}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /api/v1/cinema-shedule-showtime/search/{movie_title}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /api/v1/cinema-shedule-showtime/searchall/{param}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /api/v1/cinema/search/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /api/v1/company-credits/search/{movie_title}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /api/v1/company-credits/searchall/{param}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /api/v1/company/search/{company_name}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /api/v1/filmography-type/search/{filmography_description}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /api/v1/filmography/search/{movie_title}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /api/v1/filmography/searchall/{param}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /api/v1/genre-type/search/{genre_description}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /api/v1/genre/search/{movie_title}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /api/v1/genre/searchall/{movie_genre_type}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /api/v1/job/search/{job_title}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /api/v1/job/searchall/{company_name}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /api/v1/media/search/{movie_title}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /api/v1/media/searchall/{user}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /api/v1/movie-cast/search/{movie_title}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /api/v1/movie-cast/searchall/{param}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /api/v1/movie/search/{movie_title}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /api/v1/news/search/{title}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /api/v1/people/search/{user}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /api/v1/showtime/searchall/{param}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /api/v1/watchlist/search/{movie_title}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /api/v1/watchlist/searchall/{param}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 27,
        "numOpsQuery": 27,
        "numOpsMutation": 0,
        "numQueriesCreated": 0,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Europeana",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v2/opensearch.rss' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v2/record/{collectionId}/{recordId}.rdf' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"object\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 13,
        "numOpsQuery": 13,
        "numOpsMutation": 0,
        "numQueriesCreated": 11,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "ExaVault",
      "report": {
        "warnings": [],
        "numOps": 35,
        "numOpsQuery": 35,
        "numOpsMutation": 0,
        "numQueriesCreated": 35,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Figshare",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /account/articles/{article_id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /account/articles/{article_id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /account/articles/{article_id}/authors' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /account/articles/{article_id}/authors' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /account/articles/{article_id}/authors/{author_id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /account/articles/{article_id}/categories' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /account/articles/{article_id}/categories' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /account/articles/{article_id}/categories/{category_id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /account/articles/{article_id}/confidentiality' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /account/articles/{article_id}/confidentiality' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /account/articles/{article_id}/embargo' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /account/articles/{article_id}/embargo' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /account/articles/{article_id}/files/{file_id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /account/articles/{article_id}/files/{file_id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /account/articles/{article_id}/private_links/{link_id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /account/articles/{article_id}/private_links/{link_id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /account/collections/{collection_id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /account/collections/{collection_id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /account/collections/{collection_id}/articles' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /account/collections/{collection_id}/articles/{article_id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /account/collections/{collection_id}/authors' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /account/collections/{collection_id}/authors/{author_id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /account/collections/{collection_id}/categories' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /account/collections/{collection_id}/categories/{category_id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /account/collections/{collection_id}/private_links/{link_id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /account/collections/{collection_id}/private_links/{link_id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /account/projects/{project_id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /account/projects/{project_id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /account/projects/{project_id}/articles/{article_id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /account/projects/{project_id}/collaborators/{user_id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /account/projects/{project_id}/leave' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /account/projects/{project_id}/notes/{note_id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /account/projects/{project_id}/notes/{note_id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /file/download/{file_id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Group ID\",\"example\":1234,\"oneOf\":[{\"type\":\"number\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Publishing date\",\"example\":\"2015-12-31T23:59:59.000Z\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Group resource id\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Group ID\",\"example\":1234,\"oneOf\":[{\"type\":\"number\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Publishing date\",\"example\":\"2015-12-31T23:59:59.000Z\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Date when embargo lifts\",\"example\":\"2017-05-18T11:49:03Z\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Article embargo\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Date when article was last modified\",\"example\":\"2017-05-18T11:49:03Z\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Article DOI\",\"example\":\"10.5072/FK2.developmentfigshare.2000005\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Article resource title\",\"example\":\"first article\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"True if field completion is mandatory\",\"example\":false,\"oneOf\":[{\"type\":\"boolean\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Date when embargo lifts\",\"example\":\"2018-05-22T04:04:04\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Embargo type\",\"example\":\"\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Status for file upload\",\"example\":\"created\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Date when collection was published \",\"example\":\"2015-08-12T00:39:55\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Collection group resource id\",\"example\":1,\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Date when collection was published \",\"example\":\"2015-08-12T00:39:55\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Institution domain\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Date when project was published\",\"example\":\"2017-05-16T14:55:08Z\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Project public url\",\"example\":\"https://figshare.com/projects/project/1\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Date when project was published\",\"example\":\"2017-05-16T14:55:08Z\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Date when embargo lifts\",\"example\":\"2017-05-18T11:49:03Z\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Article embargo\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Date when article was last modified\",\"example\":\"2017-05-18T11:49:03Z\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Group ID\",\"example\":1234,\"oneOf\":[{\"type\":\"number\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Publishing date\",\"example\":\"2015-12-31T23:59:59.000Z\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Article DOI\",\"example\":\"10.5072/FK2.developmentfigshare.2000005\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Article resource title\",\"example\":\"first article\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Group ID\",\"example\":1234,\"oneOf\":[{\"type\":\"number\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Publishing date\",\"example\":\"2015-12-31T23:59:59.000Z\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Date when embargo lifts\",\"example\":\"2017-05-18T11:49:03Z\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Article embargo\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Date when article was last modified\",\"example\":\"2017-05-18T11:49:03Z\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Date when project was published\",\"example\":\"2017-05-16T14:55:08Z\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Project public url\",\"example\":\"https://figshare.com/projects/project/1\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Date when project was published\",\"example\":\"2017-05-16T14:55:08Z\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"List of key, values pairs to be associated with the article\",\"example\":{\"defined_key\":\"value for it\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"List of key, values pairs to be associated with the article\",\"example\":{\"defined_key\":\"value for it\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 111,
        "numOpsQuery": 52,
        "numOpsMutation": 59,
        "numQueriesCreated": 51,
        "numMutationsCreated": 26
      }
    },
    {
      "name": "FireBrowse Beta API",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /Analyses/CopyNumber/Genes/All' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /Analyses/CopyNumber/Genes/Amplified' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /Analyses/CopyNumber/Genes/Deleted' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /Analyses/CopyNumber/Genes/Focal' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /Analyses/CopyNumber/Genes/Thresholded' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /Analyses/FeatureTable' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /Analyses/Mutation/MAF' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /Analyses/Mutation/SMG' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /Analyses/Reports' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /Analyses/mRNASeq/Quartiles' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /Archives/StandardData' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /Metadata/Centers' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /Metadata/ClinicalNames' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /Metadata/ClinicalNames_FH' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /Metadata/Cohorts' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /Metadata/Counts' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /Metadata/Dates' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /Metadata/HeartBeat' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /Metadata/MAFColNames' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /Metadata/Patients' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /Metadata/Platforms' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /Metadata/SampleType/Barcode/{TCGA_Barcode}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /Metadata/SampleType/Code/{code}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /Metadata/SampleType/ShortLetterCode/{short_letter_code}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /Metadata/SampleTypes' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /Metadata/TSSites' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /Samples/Clinical' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /Samples/Clinical_FH' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /Samples/mRNASeq' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /Samples/miRSeq' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 30,
        "numOpsQuery": 30,
        "numOpsMutation": 0,
        "numQueriesCreated": 0,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Freesound",
      "report": {
        "warnings": [],
        "numOps": 2,
        "numOpsQuery": 2,
        "numOpsMutation": 0,
        "numQueriesCreated": 2,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "FunTranslations",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /translate/braille' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /translate/braille/dots' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /translate/braille/html' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /translate/braille/image' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /translate/braille/unicode' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /translate/brooklyn' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /translate/chef' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /translate/cheunh' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /translate/cockney' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /translate/dolan' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /translate/dothraki' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /translate/ermahgerd' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /translate/ferblatin' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /translate/fudd' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /translate/gungan' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /translate/huttese' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /translate/jive' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /translate/klingon' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /translate/mandalorian' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /translate/minion' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /translate/morse' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /translate/morse/audio' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /translate/morse2english' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /translate/oldenglish' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /translate/piglatin' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /translate/pirate' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /translate/quneya' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /translate/shakespeare' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /translate/sindarin' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /translate/sith' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /translate/uk2us' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /translate/us2uk' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /translate/valspeak' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /translate/valyrian' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /translate/vulcan' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /translate/yoda' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 36,
        "numOpsQuery": 36,
        "numOpsMutation": 0,
        "numQueriesCreated": 0,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Furkot Trips",
      "report": {
        "warnings": [],
        "numOps": 2,
        "numOpsQuery": 2,
        "numOpsMutation": 0,
        "numQueriesCreated": 2,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Geneea Natural Language Processing",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /s1/correction' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /s1/correction' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /s1/entities' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /s1/entities' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /s1/lemmatize' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /s1/lemmatize' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /s1/sentiment' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /s1/sentiment' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /s1/topic' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /s1/topic' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Disambiguation links for the entity, e.g. its DBpedia page\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"[optional] Additional options for the internal modules (key-value pairs)\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 11,
        "numOpsQuery": 6,
        "numOpsMutation": 5,
        "numQueriesCreated": 6,
        "numMutationsCreated": 5
      }
    },
    {
      "name": "RAMADDA",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/entry/show' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/beforeafter' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/biblio' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/bio_dicom' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/bio_dicom_test' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/bio_fasta' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/bio_fastq' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/bio_hmmer_index' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/bio_ome_tiff' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/bio_ontology_assay' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/bio_ontology_cohort' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/bio_ontology_person' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/bio_ontology_sample' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/bio_ontology_series' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/bio_ontology_study' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/bio_sam' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/bio_sf_pdb' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/bio_sra' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/bio_stockholm' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/bio_taxonomy' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/blogentry' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/bookmarks' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/boulder_county_voter_details' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/calendar' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/cataloglink' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/cdm_grid' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/community_case' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/community_datahub' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/community_resource' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/contact' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/db_co_indicators' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/earth_merra' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/earth_satellite_landsat' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/earth_satellite_modis_aqua' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/earth_wrf_namelist' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/exercise' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/faq' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/feed' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/file' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/fits_data' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/frames' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/ftp' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/gadgets_clock' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/gadgets_countdown' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/gadgets_stock' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/gadgets_weather' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/gdata_docs' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/gdata_photos' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/geo_geotiff' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/geo_gpx' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/geo_hdf5' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/geo_kml' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/geo_shapefile' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/glossary' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/gridaggregation' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/group' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/hipchat_group' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/homepage' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/incident' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/incident_basement' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/investigation_case' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/investigation_cellphonelog' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/investigation_event' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/investigation_oldphonelog' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/investigation_person' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/investigation_thing' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/latlonimage' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/lidar_collection' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/lidar_glas' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/lidar_las' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/lidar_lvis' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/link' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/localfiles' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/locations' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/map_googlemap' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/media_audiofile' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/media_imageloop' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/media_photoalbum' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/media_video_channel' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/media_video_quicktime' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/media_youtubevideo' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/multisearch' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/nga_tracks' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/notes' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/notes_note' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/opendaplink' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/owl.class' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/owl.ontology' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/pasteitentry' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/point_text' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/poll' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/project_campaign' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/project_casestudy' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/project_contribution' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/project_dataformat' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/project_dataset' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/project_deployment' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/project_experiment' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/project_fieldnote' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/project_gps_controlpoints' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/project_gps_raw' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/project_gps_rinex' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/project_instrument' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/project_learning_resource' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/project_meeting' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/project_organization' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/project_program' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/project_project' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/project_service' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/project_site' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/project_softwarepackage' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/project_standard_name' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/project_surveylocation' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/project_term' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/project_visit' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/project_vocabulary' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/property_sales' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/propertydb' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/python_notebook' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/registrations' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/slack_team' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/statusboard' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/tasks' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/todo' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/trip_event' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/trip_flight' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/trip_hotel' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/trip_report' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/trip_trip' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/type_artists_space' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/type_awc_metar' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/type_awhere_farm' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/type_awhere_field' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/type_biz_stockseries' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/type_census_acs' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/type_db_table' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/type_document_csv' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/type_document_doc' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/type_document_html' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/type_document_pdf' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/type_document_ppt' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/type_document_xls' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/type_drilsdown_casestudy' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/type_edgar_filing' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/type_eia_category' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/type_eia_series' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/type_esri_featureserver' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/type_esri_geometryserver' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/type_esri_gpserver' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/type_esri_imageserver' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/type_esri_layer' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/type_esri_mapserver' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/type_esri_restfolder' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/type_esri_restserver' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/type_esri_restservice' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/type_fred_category' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/type_fred_series' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/type_gtfs_agency' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/type_gtfs_route' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/type_gtfs_routes' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/type_gtfs_stop' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/type_gtfs_stops' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/type_gtfs_trip' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/type_hazarddata' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/type_hydro_colorado' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/type_idv_bundle' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/type_image' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/type_image_airport' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/type_mb' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/type_mb_collection' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/type_mb_point_basic' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/type_metameta_collection' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/type_metameta_dictionary' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/type_metameta_field' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/type_nist_constant' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/type_nist_energy' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/type_nist_isotope' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/type_nist_janaffile' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/type_nitf' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/type_point_ameriflux_level2' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/type_point_amrc_final' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/type_point_amrc_freewave' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/type_point_collection' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/type_point_czo' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/type_point_gcnet' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/type_point_geomag_iaga2002' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/type_point_hydro_waterml' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/type_point_icebridge_atm_icessn' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/type_point_icebridge_atm_qfit' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/type_point_icebridge_mccords_irmcr2' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/type_point_icebridge_mccords_irmcr3' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/type_point_icebridge_paris' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/type_point_idv' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/type_point_ncdc_climate' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/type_point_netcdf' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/type_point_noaa_carbon' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/type_point_noaa_flask_event' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/type_point_noaa_flask_month' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/type_point_noaa_madis' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/type_point_noaa_tower' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/type_point_ocean_cnv' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/type_point_ocean_csv_sado_TTS' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/type_point_ocean_csv_sado_meteo' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/type_point_ocean_csv_sado_position' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/type_point_ocean_netcdf_glider' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/type_point_ocean_netcdf_track' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/type_point_ocean_ooi_dmgx' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/type_point_pbo_position_time_series' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/type_point_snotel' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/type_point_wsbb_ggp' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/type_power_miso_forecast' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/type_psd_monthly_climate_index' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/type_quandl_series' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/type_resilience_assessment' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/type_resilience_project' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/type_reuters_document' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/type_service_group' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/type_service_link' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/type_socrata_series' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/type_urbaninstitute_employment' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/type_usda_arms_crop' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/type_usda_arms_finance' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/type_usda_nass' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/type_virtual' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/type_wms_capabilities' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/type_wms_layer' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/vote_yesno' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/weblog' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repository/search/type/wikipage' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 229,
        "numOpsQuery": 229,
        "numOpsMutation": 0,
        "numQueriesCreated": 0,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "GoToTraining",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /organizers/{organizerKey}/trainings/{trainingKey}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /organizers/{organizerKey}/trainings/{trainingKey}/nameDescription' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /organizers/{organizerKey}/trainings/{trainingKey}/organizers' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /organizers/{organizerKey}/trainings/{trainingKey}/registrants/{registrantKey}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /organizers/{organizerKey}/trainings/{trainingKey}/registrationSettings' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /trainings/{trainingKey}/recordings/{recordingId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 22,
        "numOpsQuery": 13,
        "numOpsMutation": 9,
        "numQueriesCreated": 12,
        "numMutationsCreated": 4
      }
    },
    {
      "name": "GoToWebinar",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /organizers/{organizerKey}/webinars/{webinarKey}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /organizers/{organizerKey}/webinars/{webinarKey}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /organizers/{organizerKey}/webinars/{webinarKey}/audio' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /organizers/{organizerKey}/webinars/{webinarKey}/coorganizers/{coorganizerKey}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /organizers/{organizerKey}/webinars/{webinarKey}/coorganizers/{coorganizerKey}/resendInvitation' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /organizers/{organizerKey}/webinars/{webinarKey}/panelists/{panelistKey}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /organizers/{organizerKey}/webinars/{webinarKey}/panelists/{panelistKey}/resendInvitation' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /organizers/{organizerKey}/webinars/{webinarKey}/registrants/{registrantKey}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/SessionPerformance\"},\"description\":\"Describes performance details for webinars\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/CallNumbers\"},\"description\":\"The conference call numbers and access codes per country. This will be returned only, if 'type' is not set to 'Private'. Example for this object: \\\"confCallNumbers\\\":{\\\"CA\\\":{\\\"accessCodes\\\":{\\\"attendee\\\":\\\"159-309-045\\\",\\\"organizer\\\":\\\"791-426-085\\\",\\\"panelist\\\":\\\"690-270-339\\\"},\\\"tollFree\\\":\\\"1 888 455 4198\\\"},\\\"FI\\\":{\\\"accessCodes\\\":{\\\"attendee\\\":\\\"159-309-045\\\",\\\"organizer\\\":\\\"791-426-085\\\",\\\"panelist\\\":\\\"690-270-339\\\"},\\\"toll\\\":\\\"+358 (0) 338 79 4198\\\"},\\\"US\\\":{\\\"accessCodes\\\":{\\\"attendee\\\":\\\"159-309-045\\\",\\\"organizer\\\":\\\"791-426-085\\\",\\\"panelist\\\":\\\"690-270-339\\\"},\\\"toll\\\":\\\"+1 (805) 879-4198\\\",\\\"tollFree\\\":\\\"1 888 455 4198\\\"}}\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 38,
        "numOpsQuery": 26,
        "numOpsMutation": 12,
        "numQueriesCreated": 26,
        "numMutationsCreated": 4
      }
    },
    {
      "name": "Sandbox",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /1/sandboxes/{sandboxName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /1/sandboxes/{sandboxName}/state' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /1/sandboxes/{sandboxName}/state' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Transport headers for the given request.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Transport headers for the given response.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"object\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"object\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 9,
        "numOpsQuery": 5,
        "numOpsMutation": 4,
        "numQueriesCreated": 4,
        "numMutationsCreated": 2
      }
    },
    {
      "name": "Getty Images",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /v3/asset-changes/change-sets/{change-set-id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /v3/boards/{board_id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /v3/boards/{board_id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /v3/boards/{board_id}/assets' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /v3/boards/{board_id}/assets/{asset_id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 42,
        "numOpsQuery": 27,
        "numOpsMutation": 15,
        "numQueriesCreated": 27,
        "numMutationsCreated": 10
      }
    },
    {
      "name": "Giphy",
      "report": {
        "warnings": [],
        "numOps": 10,
        "numOpsQuery": 10,
        "numOpsMutation": 0,
        "numQueriesCreated": 10,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Gisgraphy webservices",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 6,
        "numOpsQuery": 6,
        "numOpsMutation": 0,
        "numQueriesCreated": 6,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "GitHub",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /gists/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /gists/{id}/comments/{commentId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /gists/{id}/forks' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /gists/{id}/star' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /gists/{id}/star' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /gists/{id}/star' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /markdown' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /markdown/raw' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /notifications' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /notifications/threads/{id}/subscription' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /orgs/{org}/members/{username}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /orgs/{org}/members/{username}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /orgs/{org}/public_members/{username}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /orgs/{org}/public_members/{username}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /orgs/{org}/public_members/{username}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /repos/{owner}/{repo}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repos/{owner}/{repo}/assignees/{assignee}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /repos/{owner}/{repo}/collaborators/{user}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repos/{owner}/{repo}/collaborators/{user}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /repos/{owner}/{repo}/collaborators/{user}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /repos/{owner}/{repo}/comments/{commentId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /repos/{owner}/{repo}/deployments/{id}/statuses' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /repos/{owner}/{repo}/downloads/{downloadId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /repos/{owner}/{repo}/git/refs/{ref}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /repos/{owner}/{repo}/hooks/{hookId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /repos/{owner}/{repo}/hooks/{hookId}/tests' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /repos/{owner}/{repo}/issues/comments/{commentId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /repos/{owner}/{repo}/issues/{number}/labels' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /repos/{owner}/{repo}/issues/{number}/labels/{name}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /repos/{owner}/{repo}/keys/{keyId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /repos/{owner}/{repo}/labels/{name}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /repos/{owner}/{repo}/merges' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '201'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /repos/{owner}/{repo}/merges' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '201'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /repos/{owner}/{repo}/milestones/{number}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /repos/{owner}/{repo}/notifications' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /repos/{owner}/{repo}/pulls/comments/{commentId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repos/{owner}/{repo}/pulls/{number}/merge' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /repos/{owner}/{repo}/releases/assets/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /repos/{owner}/{repo}/releases/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /repos/{owner}/{repo}/subscription' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /repos/{owner}/{repo}/{archive_format}/{path}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /teams/{teamId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /teams/{teamId}/members/{username}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /teams/{teamId}/members/{username}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /teams/{teamId}/members/{username}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /teams/{teamId}/memberships/{username}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /teams/{teamId}/repos/{org}/{repo}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /teams/{teamId}/repos/{owner}/{repo}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /teams/{teamId}/repos/{owner}/{repo}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /user/emails' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /user/emails' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /user/following/{username}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /user/following/{username}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /user/following/{username}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /user/keys/{keyId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /user/starred/{owner}/{repo}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /user/starred/{owner}/{repo}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /user/starred/{owner}/{repo}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /user/subscriptions/{owner}/{repo}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /user/subscriptions/{owner}/{repo}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /user/subscriptions/{owner}/{repo}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /users/{username}/events' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /users/{username}/events/orgs/{org}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /users/{username}/following/{targetUser}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /users/{username}/received_events' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /users/{username}/received_events/public' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /users/{username}/starred' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /users/{username}/subscriptions' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"integer\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaTypeScalar",
            "message": "Request / response schema has no (valid) type: Unknown JSON scalar type 'null'",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaTypeScalar",
            "message": "Request / response schema has no (valid) type: Unknown JSON scalar type 'null'",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaTypeScalar",
            "message": "Request / response schema has no (valid) type: Unknown JSON scalar type 'null'",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaTypeScalar",
            "message": "Request / response schema has no (valid) type: Unknown JSON scalar type 'null'",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaTypeScalar",
            "message": "Request / response schema has no (valid) type: Unknown JSON scalar type 'null'",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaTypeScalar",
            "message": "Request / response schema has no (valid) type: Unknown JSON scalar type 'null'",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaTypeScalar",
            "message": "Request / response schema has no (valid) type: Unknown JSON scalar type 'null'",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 226,
        "numOpsQuery": 146,
        "numOpsMutation": 80,
        "numQueriesCreated": 127,
        "numMutationsCreated": 33
      }
    },
    {
      "name": "Gitlab",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /v3/ci/lint' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v3/deploy_keys' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /v3/groups/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /v3/groups/{id}/access_requests/{user_id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /v3/groups/{id}/members/{user_id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /v3/internal/allowed' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v3/internal/broadcast_message' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v3/internal/check' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v3/internal/discover' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /v3/internal/lfs_authenticate' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v3/internal/merge_request_urls' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /v3/internal/two_factor_recovery_codes' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /v3/projects/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /v3/projects/{id}/access_requests/{user_id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v3/projects/{id}/builds/artifacts/{ref_name}/download' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v3/projects/{id}/builds/{build_id}/artifacts' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v3/projects/{id}/builds/{build_id}/trace' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /v3/projects/{id}/fork' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /v3/projects/{id}/fork/{forked_from_id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /v3/projects/{id}/issues/{issue_id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /v3/projects/{id}/issues/{issue_id}/add_spent_time' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /v3/projects/{id}/issues/{issue_id}/reset_spent_time' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /v3/projects/{id}/issues/{issue_id}/reset_time_estimate' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /v3/projects/{id}/issues/{issue_id}/time_estimate' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v3/projects/{id}/issues/{issue_id}/time_stats' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /v3/projects/{id}/members/{user_id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /v3/projects/{id}/merge_requests/{merge_request_id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /v3/projects/{id}/merge_requests/{merge_request_id}/add_spent_time' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /v3/projects/{id}/merge_requests/{merge_request_id}/reset_spent_time' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /v3/projects/{id}/merge_requests/{merge_request_id}/reset_time_estimate' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /v3/projects/{id}/merge_requests/{merge_request_id}/time_estimate' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v3/projects/{id}/merge_requests/{merge_request_id}/time_stats' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v3/projects/{id}/repository/archive' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v3/projects/{id}/repository/blobs/{sha}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /v3/projects/{id}/repository/branches/{branch}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v3/projects/{id}/repository/commits/{sha}/blob' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v3/projects/{id}/repository/commits/{sha}/diff' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /v3/projects/{id}/repository/files' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v3/projects/{id}/repository/files' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /v3/projects/{id}/repository/files' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /v3/projects/{id}/repository/files' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /v3/projects/{id}/repository/merged_branches' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v3/projects/{id}/repository/raw_blobs/{sha}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /v3/projects/{id}/repository/tags/{tag_name}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /v3/projects/{id}/services/asana' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /v3/projects/{id}/services/assembla' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /v3/projects/{id}/services/bamboo' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /v3/projects/{id}/services/bugzilla' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /v3/projects/{id}/services/buildkite' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /v3/projects/{id}/services/builds-email' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /v3/projects/{id}/services/campfire' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /v3/projects/{id}/services/custom-issue-tracker' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /v3/projects/{id}/services/drone-ci' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /v3/projects/{id}/services/emails-on-push' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /v3/projects/{id}/services/external-wiki' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /v3/projects/{id}/services/flowdock' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /v3/projects/{id}/services/gemnasium' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /v3/projects/{id}/services/hipchat' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /v3/projects/{id}/services/irker' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /v3/projects/{id}/services/jira' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /v3/projects/{id}/services/kubernetes' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /v3/projects/{id}/services/mattermost' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /v3/projects/{id}/services/mattermost-slash-commands' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /v3/projects/{id}/services/mattermost_slash_commands/trigger' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /v3/projects/{id}/services/pipelines-email' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /v3/projects/{id}/services/pivotaltracker' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /v3/projects/{id}/services/pushover' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /v3/projects/{id}/services/redmine' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /v3/projects/{id}/services/slack' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /v3/projects/{id}/services/slack-slash-commands' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /v3/projects/{id}/services/slack_slash_commands/trigger' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /v3/projects/{id}/services/teamcity' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /v3/projects/{id}/services/{service_slug}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /v3/projects/{id}/share/{group_id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /v3/projects/{id}/snippets/{snippet_id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v3/projects/{id}/snippets/{snippet_id}/raw' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /v3/projects/{id}/uploads' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v3/sidekiq/compound_metrics' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v3/sidekiq/job_stats' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v3/sidekiq/process_metrics' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v3/sidekiq/queue_metrics' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v3/snippets/{id}/raw' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /v3/todos' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /v3/user/emails/{email_id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /v3/users/{id}/block' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /v3/users/{id}/unblock' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v3/version' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 358,
        "numOpsQuery": 158,
        "numOpsMutation": 200,
        "numQueriesCreated": 270,
        "numMutationsCreated": 272
      }
    },
    {
      "name": "Google Abusive Experience Report",
      "report": {
        "warnings": [],
        "numOps": 2,
        "numOpsQuery": 2,
        "numOpsMutation": 0,
        "numQueriesCreated": 2,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Accelerated Mobile Pages (AMP) URL",
      "report": {
        "warnings": [],
        "numOps": 1,
        "numOpsQuery": 0,
        "numOpsMutation": 1,
        "numQueriesCreated": 0,
        "numMutationsCreated": 1
      }
    },
    {
      "name": "Ad Exchange Buyer",
      "report": {
        "warnings": [],
        "numOps": 6,
        "numOpsQuery": 4,
        "numOpsMutation": 2,
        "numQueriesCreated": 4,
        "numMutationsCreated": 2
      }
    },
    {
      "name": "Ad Exchange Buyer",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /pretargetingconfigs/{accountId}/{configId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 18,
        "numOpsQuery": 12,
        "numOpsMutation": 6,
        "numQueriesCreated": 12,
        "numMutationsCreated": 5
      }
    },
    {
      "name": "Ad Exchange Buyer",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /creatives/{accountId}/{buyerCreativeId}/addDeal/{dealId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /creatives/{accountId}/{buyerCreativeId}/removeDeal/{dealId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /pretargetingconfigs/{accountId}/{configId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /privateauction/{privateAuctionId}/updateproposal' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /proposals/{proposalId}/setupcomplete' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 34,
        "numOpsQuery": 18,
        "numOpsMutation": 16,
        "numQueriesCreated": 18,
        "numMutationsCreated": 11
      }
    },
    {
      "name": "Ad Exchange Buyer API II",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated\\nempty messages in your APIs. A typical example is to use it as the request\\nor the response type of an API method. For instance:\\n\\n    service Foo {\\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n    }\\n\\nThe JSON representation for `Empty` is empty JSON object `{}`.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated\\nempty messages in your APIs. A typical example is to use it as the request\\nor the response type of an API method. For instance:\\n\\n    service Foo {\\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n    }\\n\\nThe JSON representation for `Empty` is empty JSON object `{}`.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated\\nempty messages in your APIs. A typical example is to use it as the request\\nor the response type of an API method. For instance:\\n\\n    service Foo {\\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n    }\\n\\nThe JSON representation for `Empty` is empty JSON object `{}`.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated\\nempty messages in your APIs. A typical example is to use it as the request\\nor the response type of an API method. For instance:\\n\\n    service Foo {\\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n    }\\n\\nThe JSON representation for `Empty` is empty JSON object `{}`.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated\\nempty messages in your APIs. A typical example is to use it as the request\\nor the response type of an API method. For instance:\\n\\n    service Foo {\\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n    }\\n\\nThe JSON representation for `Empty` is empty JSON object `{}`.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 33,
        "numOpsQuery": 21,
        "numOpsMutation": 12,
        "numQueriesCreated": 21,
        "numMutationsCreated": 12
      }
    },
    {
      "name": "Ad Exchange Seller",
      "report": {
        "warnings": [],
        "numOps": 17,
        "numOpsQuery": 17,
        "numOpsMutation": 0,
        "numQueriesCreated": 17,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Ad Exchange Seller",
      "report": {
        "warnings": [],
        "numOps": 11,
        "numOpsQuery": 11,
        "numOpsMutation": 0,
        "numQueriesCreated": 11,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Ad Exchange Seller",
      "report": {
        "warnings": [],
        "numOps": 14,
        "numOpsQuery": 14,
        "numOpsMutation": 0,
        "numQueriesCreated": 14,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Google Ad Experience Report",
      "report": {
        "warnings": [],
        "numOps": 2,
        "numOpsQuery": 2,
        "numOpsMutation": 0,
        "numQueriesCreated": 2,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Admin Data Transfer",
      "report": {
        "warnings": [],
        "numOps": 5,
        "numOpsQuery": 4,
        "numOpsMutation": 1,
        "numQueriesCreated": 4,
        "numMutationsCreated": 1
      }
    },
    {
      "name": "Admin Directory",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /admin/directory_v1/channels/stop' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /customer/{customerId}/devices/chromeos/moveDevicesToOu' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /customer/{customerId}/devices/chromeos/{resourceId}/action' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /customer/{customerId}/devices/mobile/{resourceId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /customer/{customerId}/devices/mobile/{resourceId}/action' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /customer/{customerId}/orgunits/{orgUnitPath}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /customer/{customerId}/schemas/{schemaKey}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /customer/{customer}/domainaliases/{domainAliasName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /customer/{customer}/domains/{domainName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /customer/{customer}/notifications/{notificationId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /customer/{customer}/resources/buildings/{buildingId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /customer/{customer}/resources/calendars/{calendarResourceId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /customer/{customer}/resources/features/{featureKey}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /customer/{customer}/resources/features/{oldName}/rename' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /customer/{customer}/roleassignments/{roleAssignmentId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /customer/{customer}/roles/{roleId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /groups/{groupKey}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /groups/{groupKey}/aliases/{alias}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /groups/{groupKey}/members/{memberKey}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /users/{userKey}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /users/{userKey}/aliases/{alias}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /users/{userKey}/asps/{codeId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /users/{userKey}/makeAdmin' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /users/{userKey}/photos/thumbnail' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /users/{userKey}/tokens/{clientId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /users/{userKey}/undelete' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /users/{userKey}/verificationCodes/generate' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /users/{userKey}/verificationCodes/invalidate' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/UserCustomProperties\"},\"description\":\"Custom fields of the user.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/UserCustomProperties\"},\"description\":\"Custom fields of the user.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Declares a new parameter by name.\",\"type\":\"string\"},\"description\":\"Additional parameters controlling delivery channel behavior. Optional.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Declares a new parameter by name.\",\"type\":\"string\"},\"description\":\"Additional parameters controlling delivery channel behavior. Optional.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 100,
        "numOpsQuery": 43,
        "numOpsMutation": 57,
        "numQueriesCreated": 43,
        "numMutationsCreated": 29
      }
    },
    {
      "name": "Admin Reports",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /admin/reports_v1/channels/stop' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Declares a new parameter by name.\",\"type\":\"string\"},\"description\":\"Additional parameters controlling delivery channel behavior. Optional.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Declares a new parameter by name.\",\"type\":\"string\"},\"description\":\"Additional parameters controlling delivery channel behavior. Optional.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 6,
        "numOpsQuery": 4,
        "numOpsMutation": 2,
        "numQueriesCreated": 4,
        "numMutationsCreated": 1
      }
    },
    {
      "name": "AdSense Management",
      "report": {
        "warnings": [],
        "numOps": 34,
        "numOpsQuery": 34,
        "numOpsMutation": 0,
        "numQueriesCreated": 34,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "AdSense Management",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /accounts/{accountId}/alerts/{alertId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /alerts/{alertId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 38,
        "numOpsQuery": 36,
        "numOpsMutation": 2,
        "numQueriesCreated": 36,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "AdSense Host",
      "report": {
        "warnings": [],
        "numOps": 24,
        "numOpsQuery": 16,
        "numOpsMutation": 8,
        "numQueriesCreated": 16,
        "numMutationsCreated": 8
      }
    },
    {
      "name": "Google Analytics",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /data' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /management/accounts' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /management/accounts/{accountId}/webproperties' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /management/accounts/{accountId}/webproperties/{webPropertyId}/profiles' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /management/accounts/{accountId}/webproperties/{webPropertyId}/profiles/{profileId}/goals' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /management/segments' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 6,
        "numOpsQuery": 6,
        "numOpsMutation": 0,
        "numQueriesCreated": 0,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Google Analytics",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /management/accounts/{accountId}/entityUserLinks/{linkId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /management/accounts/{accountId}/webproperties/{webPropertyId}/customDataSources/{customDataSourceId}/deleteUploadData' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /management/accounts/{accountId}/webproperties/{webPropertyId}/entityAdWordsLinks/{webPropertyAdWordsLinkId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /management/accounts/{accountId}/webproperties/{webPropertyId}/entityUserLinks/{linkId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /management/accounts/{accountId}/webproperties/{webPropertyId}/profiles/{profileId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /management/accounts/{accountId}/webproperties/{webPropertyId}/profiles/{profileId}/entityUserLinks/{linkId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /management/accounts/{accountId}/webproperties/{webPropertyId}/profiles/{profileId}/experiments/{experimentId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /management/accounts/{accountId}/webproperties/{webPropertyId}/profiles/{profileId}/profileFilterLinks/{linkId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /management/accounts/{accountId}/webproperties/{webPropertyId}/profiles/{profileId}/unsampledReports/{unsampledReportId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /management/accounts/{accountId}/webproperties/{webPropertyId}/remarketingAudiences/{remarketingAudienceId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Key-value pair for the total value of a metric. Key is the metric name and the value is the total value for that metric.\",\"type\":\"string\"},\"description\":\"Total values for the requested metrics over all the results, not just the results returned in this response. The order of the metric totals is same as the metric order specified in the request.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Key-value pair for the total value of a metric. Key is the metric name and the value is the total value for that metric.\",\"type\":\"string\"},\"description\":\"Total values for the requested metrics over all the results, not just the results returned in this response. The order of the metric totals is same as the metric order specified in the request.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Key-value pair for the total value of a metric. Key is the metric name and the value is the total value for that metric.\",\"type\":\"string\"},\"description\":\"Total values for the requested metrics over all the results, not just the results returned in this response. The order of the metric totals is same as the metric order specified in the request.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"The name of the attribute.\",\"type\":\"string\"},\"description\":\"Map of attribute name and value for this column.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 75,
        "numOpsQuery": 35,
        "numOpsMutation": 40,
        "numQueriesCreated": 35,
        "numMutationsCreated": 30
      }
    },
    {
      "name": "Google Analytics Reporting",
      "report": {
        "warnings": [],
        "numOps": 1,
        "numOpsQuery": 0,
        "numOpsMutation": 1,
        "numQueriesCreated": 0,
        "numMutationsCreated": 1
      }
    },
    {
      "name": "Android Device Provisioning Partner",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated\\nempty messages in your APIs. A typical example is to use it as the request\\nor the response type of an API method. For instance:\\n\\n    service Foo {\\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n    }\\n\\nThe JSON representation for `Empty` is empty JSON object `{}`.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated\\nempty messages in your APIs. A typical example is to use it as the request\\nor the response type of an API method. For instance:\\n\\n    service Foo {\\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n    }\\n\\nThe JSON representation for `Empty` is empty JSON object `{}`.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated\\nempty messages in your APIs. A typical example is to use it as the request\\nor the response type of an API method. For instance:\\n\\n    service Foo {\\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n    }\\n\\nThe JSON representation for `Empty` is empty JSON object `{}`.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated\\nempty messages in your APIs. A typical example is to use it as the request\\nor the response type of an API method. For instance:\\n\\n    service Foo {\\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n    }\\n\\nThe JSON representation for `Empty` is empty JSON object `{}`.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated\\nempty messages in your APIs. A typical example is to use it as the request\\nor the response type of an API method. For instance:\\n\\n    service Foo {\\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n    }\\n\\nThe JSON representation for `Empty` is empty JSON object `{}`.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Metadata entries recorded as key-value pairs.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Metadata entries recorded as key-value pairs.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"description\":\"This field will contain a `DevicesLongRunningOperationMetadata` object if the operation is created by `claimAsync`, `unclaimAsync`, or `updateMetadataAsync`.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"description\":\"This field will contain a `DevicesLongRunningOperationResponse` object if the operation is created by `claimAsync`, `unclaimAsync`, or `updateMetadataAsync`.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 20,
        "numOpsQuery": 6,
        "numOpsMutation": 14,
        "numQueriesCreated": 6,
        "numMutationsCreated": 14
      }
    },
    {
      "name": "Google Play EMM",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /enterprises/acknowledgeNotificationSet' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /enterprises/{enterpriseId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /enterprises/{enterpriseId}/products/{productId}/approve' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /enterprises/{enterpriseId}/products/{productId}/unapprove' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /enterprises/{enterpriseId}/serviceAccountKeys/{keyId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /enterprises/{enterpriseId}/storeLayout/pages/{pageId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /enterprises/{enterpriseId}/storeLayout/pages/{pageId}/clusters/{clusterId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /enterprises/{enterpriseId}/unenroll' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /enterprises/{enterpriseId}/users/{userId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /enterprises/{enterpriseId}/users/{userId}/deviceAccess' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /enterprises/{enterpriseId}/users/{userId}/devices/{deviceId}/installs/{installId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /enterprises/{enterpriseId}/users/{userId}/devices/{deviceId}/managedConfigurationsForDevice/{managedConfigurationForDeviceId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /enterprises/{enterpriseId}/users/{userId}/entitlements/{entitlementId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /enterprises/{enterpriseId}/users/{userId}/managedConfigurationsForUser/{managedConfigurationForUserId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /enterprises/{enterpriseId}/users/{userId}/token' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 75,
        "numOpsQuery": 33,
        "numOpsMutation": 42,
        "numQueriesCreated": 33,
        "numMutationsCreated": 27
      }
    },
    {
      "name": "Android Management",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:\\nservice Foo {\\n  rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n}\\nThe JSON representation for Empty is empty JSON object {}.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:\\nservice Foo {\\n  rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n}\\nThe JSON representation for Empty is empty JSON object {}.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"description\":\"Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"description\":\"The normal response of the operation in case of success. If the original method returns no data on success, such as Delete, the response is google.protobuf.Empty. If the original method is standard Get/Create/Update, the response should be the resource. For other methods, the response should have the type XxxResponse, where Xxx is the original method name. For example, if the original method name is TakeSnapshot(), the inferred response type is TakeSnapshotResponse.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"A map which contains <locale, message> pairs. The locale is a BCP 47 language code, e.g. en-US, es-ES, fr.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"If the policy setting could not be applied, the current value of the setting on the device.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object.\"},\"description\":\"Network configuration for the device. See configure networks for more information.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object.\"},\"description\":\"Managed configuration applied to the app. The format for the configuration is dictated by the ManagedProperty values supported by the app. Each field name in the managed configuration must match the key field of the ManagedProperty. The field value must be compatible with the type of the ManagedProperty: <table> <tr><td><i>type</i></td><td><i>JSON value</i></td></tr> <tr><td>BOOL</td><td>true or false</td></tr> <tr><td>STRING</td><td>string</td></tr> <tr><td>INTEGER</td><td>number</td></tr> <tr><td>CHOICE</td><td>string</td></tr> <tr><td>MULTISELECT</td><td>array of strings</td></tr> <tr><td>HIDDEN</td><td>string</td></tr> <tr><td>BUNDLE_ARRAY</td><td>array of objects</td></tr> </table>\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 10,
        "numOpsQuery": 3,
        "numOpsMutation": 7,
        "numQueriesCreated": 3,
        "numMutationsCreated": 7
      }
    },
    {
      "name": "Google Play Developer",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /{packageName}/subscriptions/{subscriptionId}/purchases/{token}/cancel' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 3,
        "numOpsQuery": 2,
        "numOpsMutation": 1,
        "numQueriesCreated": 2,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Google Play Developer",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /{packageName}/subscriptions/{subscriptionId}/purchases/{token}/cancel' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 2,
        "numOpsQuery": 1,
        "numOpsMutation": 1,
        "numQueriesCreated": 1,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Google Play Developer",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /{packageName}/edits/{editId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /{packageName}/edits/{editId}/apks/{apkVersionCode}/listings' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /{packageName}/edits/{editId}/apks/{apkVersionCode}/listings/{language}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /{packageName}/edits/{editId}/listings' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /{packageName}/edits/{editId}/listings/{language}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /{packageName}/edits/{editId}/listings/{language}/{imageType}/{imageId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /{packageName}/inappproducts/{sku}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /{packageName}/purchases/subscriptions/{subscriptionId}/tokens/{token}:cancel' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /{packageName}/purchases/subscriptions/{subscriptionId}/tokens/{token}:refund' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /{packageName}/purchases/subscriptions/{subscriptionId}/tokens/{token}:revoke' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/InAppProductListing\"},\"description\":\"List of localized title and description data.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/Price\"},\"description\":\"Prices per buyer region. None of these prices should be zero. In-app products can never be free.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/InAppProductListing\"},\"description\":\"List of localized title and description data.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/Price\"},\"description\":\"Prices per buyer region. None of these prices should be zero. In-app products can never be free.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 49,
        "numOpsQuery": 20,
        "numOpsMutation": 29,
        "numQueriesCreated": 20,
        "numMutationsCreated": 19
      }
    },
    {
      "name": "Google App Engine Admin",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:\\nservice Foo {\\n  rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n}\\nThe JSON representation for Empty is empty JSON object {}.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:\\nservice Foo {\\n  rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n}\\nThe JSON representation for Empty is empty JSON object {}.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Request message for 'Applications.RepairApplication'.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Cross-service attributes for the location. For example\\n{\\\"cloud.googleapis.com/region\\\": \\\"us-east1\\\"}\\n\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"description\":\"Service-specific metadata. For example the available capacity at the given location.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"description\":\"Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"description\":\"The normal response of the operation in case of success. If the original method returns no data on success, such as Delete, the response is google.protobuf.Empty. If the original method is standard Get/Create/Update, the response should be the resource. For other methods, the response should have the type XxxResponse, where Xxx is the original method name. For example, if the original method name is TakeSnapshot(), the inferred response type is TakeSnapshotResponse.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"format\":\"double\",\"type\":\"number\"},\"description\":\"Mapping from version IDs within the service to fractional (0.000, 1] allocations of traffic for that version. Each version can be specified only once, but some versions in the service may not have any traffic allocation. Services that have traffic allocated cannot be deleted until either the service is deleted or their traffic allocation is removed. Allocations must sum to 1. Up to two decimal place precision is supported for IP-based splits and up to three decimal places is supported for cookie-based splits.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Metadata settings that are supplied to this version to enable beta runtime features.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Environment variables available to the application.Only returned in GET requests if view=FULL is set.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/FileInfo\"},\"description\":\"Manifest of the files stored in Google Cloud Storage that are included as part of this version. All files must be readable using the credentials supplied with this call.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"HTTP headers to use for all responses from these URLs.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Metadata settings that are supplied to this version to enable beta runtime features.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Environment variables available to the application.Only returned in GET requests if view=FULL is set.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/FileInfo\"},\"description\":\"Manifest of the files stored in Google Cloud Storage that are included as part of this version. All files must be readable using the credentials supplied with this call.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"HTTP headers to use for all responses from these URLs.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 32,
        "numOpsQuery": 18,
        "numOpsMutation": 14,
        "numQueriesCreated": 18,
        "numMutationsCreated": 14
      }
    },
    {
      "name": "Google App Engine Admin",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:\\nservice Foo {\\n  rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n}\\nThe JSON representation for Empty is empty JSON object {}.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Cross-service attributes for the location. For example\\n{\\\"cloud.googleapis.com/region\\\": \\\"us-east1\\\"}\\n\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"description\":\"Service-specific metadata. For example the available capacity at the given location.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"description\":\"Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"description\":\"The normal response of the operation in case of success. If the original method returns no data on success, such as Delete, the response is google.protobuf.Empty. If the original method is standard Get/Create/Update, the response should be the resource. For other methods, the response should have the type XxxResponse, where Xxx is the original method name. For example, if the original method name is TakeSnapshot(), the inferred response type is TakeSnapshotResponse.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 13,
        "numOpsQuery": 9,
        "numOpsMutation": 4,
        "numQueriesCreated": 9,
        "numMutationsCreated": 4
      }
    },
    {
      "name": "Google App Engine Admin",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:\\nservice Foo {\\n  rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n}\\nThe JSON representation for Empty is empty JSON object {}.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:\\nservice Foo {\\n  rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n}\\nThe JSON representation for Empty is empty JSON object {}.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Request message for 'Applications.RepairApplication'.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Cross-service attributes for the location. For example\\n{\\\"cloud.googleapis.com/region\\\": \\\"us-east1\\\"}\\n\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"description\":\"Service-specific metadata. For example the available capacity at the given location.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"description\":\"Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"description\":\"The normal response of the operation in case of success. If the original method returns no data on success, such as Delete, the response is google.protobuf.Empty. If the original method is standard Get/Create/Update, the response should be the resource. For other methods, the response should have the type XxxResponse, where Xxx is the original method name. For example, if the original method name is TakeSnapshot(), the inferred response type is TakeSnapshotResponse.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"format\":\"double\",\"type\":\"number\"},\"description\":\"Mapping from version IDs within the service to fractional (0.000, 1] allocations of traffic for that version. Each version can be specified only once, but some versions in the service may not have any traffic allocation. Services that have traffic allocated cannot be deleted until either the service is deleted or their traffic allocation is removed. Allocations must sum to 1. Up to two decimal place precision is supported for IP-based splits and up to three decimal places is supported for cookie-based splits.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Metadata settings that are supplied to this version to enable beta runtime features.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Environment variables available to the application.Only returned in GET requests if view=FULL is set.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/FileInfo\"},\"description\":\"Manifest of the files stored in Google Cloud Storage that are included as part of this version. All files must be readable using the credentials supplied with this call.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"HTTP headers to use for all responses from these URLs.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Metadata settings that are supplied to this version to enable beta runtime features.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Environment variables available to the application.Only returned in GET requests if view=FULL is set.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/FileInfo\"},\"description\":\"Manifest of the files stored in Google Cloud Storage that are included as part of this version. All files must be readable using the credentials supplied with this call.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"HTTP headers to use for all responses from these URLs.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 32,
        "numOpsQuery": 18,
        "numOpsMutation": 14,
        "numQueriesCreated": 18,
        "numMutationsCreated": 14
      }
    },
    {
      "name": "Google App Engine Admin",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Cross-service attributes for the location. For example\\n{\\\"cloud.googleapis.com/region\\\": \\\"us-east1\\\"}\\n\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"description\":\"Service-specific metadata. For example the available capacity at the given location.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"format\":\"double\",\"type\":\"number\"},\"description\":\"Mapping from version IDs within the module to fractional (0.000, 1] allocations of traffic for that version. Each version can be specified only once, but some versions in the module may not have any traffic allocation. Modules that have traffic allocated cannot be deleted until either the module is deleted or their traffic allocation is removed. Allocations must sum to 1. Up to two decimal place precision is supported for IP-based splits and up to three decimal places is supported for cookie-based splits.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Metadata settings that are supplied to this version to enable beta runtime features.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Environment variables made available to the application.Only returned in GET requests if view=FULL is set.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/FileInfo\"},\"description\":\"Manifest of the files stored in Google Cloud Storage that are included as part of this version. All files must be readable using the credentials supplied with this call.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"HTTP headers to use for all responses from these URLs.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"HTTP headers to use for all responses from these URLs.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"description\":\"Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"description\":\"The normal response of the operation in case of success. If the original method returns no data on success, such as Delete, the response is google.protobuf.Empty. If the original method is standard Get/Create/Update, the response should be the resource. For other methods, the response should have the type XxxResponse, where Xxx is the original method name. For example, if the original method name is TakeSnapshot(), the inferred response type is TakeSnapshotResponse.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Metadata settings that are supplied to this version to enable beta runtime features.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Environment variables made available to the application.Only returned in GET requests if view=FULL is set.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/FileInfo\"},\"description\":\"Manifest of the files stored in Google Cloud Storage that are included as part of this version. All files must be readable using the credentials supplied with this call.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"HTTP headers to use for all responses from these URLs.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"HTTP headers to use for all responses from these URLs.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 17,
        "numOpsQuery": 11,
        "numOpsMutation": 6,
        "numQueriesCreated": 11,
        "numMutationsCreated": 6
      }
    },
    {
      "name": "Google App Engine Admin",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Cross-service attributes for the location. For example\\n{\\\"cloud.googleapis.com/region\\\": \\\"us-east1\\\"}\\n\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"description\":\"Service-specific metadata. For example the available capacity at the given location.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"description\":\"Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"description\":\"The normal response of the operation in case of success. If the original method returns no data on success, such as Delete, the response is google.protobuf.Empty. If the original method is standard Get/Create/Update, the response should be the resource. For other methods, the response should have the type XxxResponse, where Xxx is the original method name. For example, if the original method name is TakeSnapshot(), the inferred response type is TakeSnapshotResponse.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"format\":\"double\",\"type\":\"number\"},\"description\":\"Mapping from version IDs within the service to fractional (0.000, 1] allocations of traffic for that version. Each version can be specified only once, but some versions in the service may not have any traffic allocation. Services that have traffic allocated cannot be deleted until either the service is deleted or their traffic allocation is removed. Allocations must sum to 1. Up to two decimal place precision is supported for IP-based splits and up to three decimal places is supported for cookie-based splits.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Metadata settings that are supplied to this version to enable beta runtime features.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Environment variables made available to the application.Only returned in GET requests if view=FULL is set.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/FileInfo\"},\"description\":\"Manifest of the files stored in Google Cloud Storage that are included as part of this version. All files must be readable using the credentials supplied with this call.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"HTTP headers to use for all responses from these URLs.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Metadata settings that are supplied to this version to enable beta runtime features.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Environment variables made available to the application.Only returned in GET requests if view=FULL is set.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/FileInfo\"},\"description\":\"Manifest of the files stored in Google Cloud Storage that are included as part of this version. All files must be readable using the credentials supplied with this call.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"HTTP headers to use for all responses from these URLs.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 17,
        "numOpsQuery": 11,
        "numOpsMutation": 6,
        "numQueriesCreated": 11,
        "numMutationsCreated": 6
      }
    },
    {
      "name": "G Suite Activity",
      "report": {
        "warnings": [],
        "numOps": 1,
        "numOpsQuery": 1,
        "numOpsMutation": 0,
        "numQueriesCreated": 1,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Google App State",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /states/{stateKey}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 5,
        "numOpsQuery": 2,
        "numOpsMutation": 3,
        "numQueriesCreated": 2,
        "numMutationsCreated": 2
      }
    },
    {
      "name": "BigQuery",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /projects/{projectId}/datasets/{datasetId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /projects/{projectId}/datasets/{datasetId}/tables/{tableId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The labels associated with this dataset. You can use these to organize and group your datasets.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The labels associated with this dataset. You can use these to organize and group your datasets. You can set this property when inserting or updating a dataset. See Labeling Datasets for more information.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"[Experimental] The labels associated with this table. You can use these to organize and group your tables.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"[Experimental] The labels associated with this table. You can use these to organize and group your tables. Label keys and values can be no longer than 63 characters, can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. Label values are optional. Label keys must start with a letter and each label in the list must have a different key.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"[Experimental] The labels associated with this job. You can use these to organize and group your jobs. Label keys and values can be no longer than 63 characters, can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. Label values are optional. Label keys must start with a letter and each label in the list must have a different key.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/ExternalDataConfiguration\"},\"description\":\"[Optional] If querying an external data source outside of BigQuery, describes the data format, location and other properties of the data source. By defining these properties, the data source can then be queried as if it were a standard BigQuery table.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/QueryParameterValue\"},\"description\":\"[Optional] The struct field values, in order of the struct type's declaration.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The labels associated with this dataset. You can use these to organize and group your datasets. You can set this property when inserting or updating a dataset. See Labeling Datasets for more information.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"[Experimental] The labels associated with this table. You can use these to organize and group your tables. Label keys and values can be no longer than 63 characters, can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. Label values are optional. Label keys must start with a letter and each label in the list must have a different key.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/JsonValue\"},\"description\":\"Represents a single JSON object.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/QueryParameterValue\"},\"description\":\"[Optional] The struct field values, in order of the struct type's declaration.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 20,
        "numOpsQuery": 10,
        "numOpsMutation": 10,
        "numQueriesCreated": 10,
        "numMutationsCreated": 8
      }
    },
    {
      "name": "BigQuery Data Transfer",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated\\nempty messages in your APIs. A typical example is to use it as the request\\nor the response type of an API method. For instance:\\n\\n    service Foo {\\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n    }\\n\\nThe JSON representation for `Empty` is empty JSON object `{}`.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A request to determine whether the user has valid credentials. This method\\nis used to limit the number of OAuth popups in the user interface. The\\nuser id is inferred from the API call context.\\nIf the data source has the Google+ authorization type, this method\\nreturns false, as it cannot be determined whether the credentials are\\nalready valid merely based on the user id.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object.\"},\"description\":\"Data transfer specific parameters.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Cross-service attributes for the location. For example\\n\\n    {\\\"cloud.googleapis.com/region\\\": \\\"us-east1\\\"}\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"description\":\"Service-specific metadata. For example the available capacity at the given\\nlocation.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object.\"},\"description\":\"Data transfer specific parameters.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object.\"},\"description\":\"Data transfer specific parameters.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 10,
        "numOpsQuery": 6,
        "numOpsMutation": 4,
        "numQueriesCreated": 6,
        "numMutationsCreated": 4
      }
    },
    {
      "name": "Blogger",
      "report": {
        "warnings": [],
        "numOps": 9,
        "numOpsQuery": 9,
        "numOpsMutation": 0,
        "numQueriesCreated": 9,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Blogger",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /blogs/{blogId}/pages/{pageId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /blogs/{blogId}/posts/{postId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /blogs/{blogId}/posts/{postId}/comments/{commentId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 31,
        "numOpsQuery": 17,
        "numOpsMutation": 14,
        "numQueriesCreated": 17,
        "numMutationsCreated": 11
      }
    },
    {
      "name": "Books",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /cloudloading/deleteBook' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /familysharing/share' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /familysharing/unshare' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /mylibrary/annotations/{annotationId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /mylibrary/bookshelves/{shelf}/addVolume' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /mylibrary/bookshelves/{shelf}/clearVolumes' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /mylibrary/bookshelves/{shelf}/moveVolume' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /mylibrary/bookshelves/{shelf}/removeVolume' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /mylibrary/readingpositions/{volumeId}/setPosition' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /promooffer/accept' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /promooffer/dismiss' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The reading modes available for this volume.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 51,
        "numOpsQuery": 30,
        "numOpsMutation": 21,
        "numQueriesCreated": 30,
        "numMutationsCreated": 10
      }
    },
    {
      "name": "Calendar",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /calendars/{calendarId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /calendars/{calendarId}/acl/{ruleId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /calendars/{calendarId}/clear' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /calendars/{calendarId}/events/{eventId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /channels/stop' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /users/me/calendarList/{calendarId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"The name of the private property and the corresponding value.\",\"type\":\"string\"},\"description\":\"Properties that are private to the copy of the event that appears on this calendar.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"The name of the shared property and the corresponding value.\",\"type\":\"string\"},\"description\":\"Properties that are shared between copies of the event on other attendees' calendars.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"The preference name and corresponding value.\",\"type\":\"string\"},\"description\":\"Preferences.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/ColorDefinition\"},\"description\":\"A global palette of calendar colors, mapping from the color ID to its definition. A calendarListEntry resource refers to one of these color IDs in its color field. Read-only.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/ColorDefinition\"},\"description\":\"A global palette of event colors, mapping from the color ID to its definition. An event resource may refer to one of these color IDs in its color field. Read-only.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Declares a new parameter by name.\",\"type\":\"string\"},\"description\":\"Additional parameters controlling delivery channel behavior. Optional.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Declares a new parameter by name.\",\"type\":\"string\"},\"description\":\"Additional parameters controlling delivery channel behavior. Optional.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"The name of the private property and the corresponding value.\",\"type\":\"string\"},\"description\":\"Properties that are private to the copy of the event that appears on this calendar.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"The name of the shared property and the corresponding value.\",\"type\":\"string\"},\"description\":\"Properties that are shared between copies of the event on other attendees' calendars.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"The preference name and corresponding value.\",\"type\":\"string\"},\"description\":\"Preferences.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/FreeBusyCalendar\"},\"description\":\"List of free/busy information for calendars.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/FreeBusyGroup\"},\"description\":\"Expansion of groups.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 33,
        "numOpsQuery": 11,
        "numOpsMutation": 22,
        "numQueriesCreated": 11,
        "numMutationsCreated": 16
      }
    },
    {
      "name": "Google Civic Information",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/GeographicDivision\"},\"description\":\"Political geographic divisions that contain the requested address.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/GeographicDivision\"},\"description\":\"Political geographic divisions that contain the requested address.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 5,
        "numOpsQuery": 5,
        "numOpsMutation": 0,
        "numQueriesCreated": 5,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Google Classroom",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated\\nempty messages in your APIs. A typical example is to use it as the request\\nor the response type of an API method. For instance:\\n\\n    service Foo {\\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n    }\\n\\nThe JSON representation for `Empty` is empty JSON object `{}`.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated\\nempty messages in your APIs. A typical example is to use it as the request\\nor the response type of an API method. For instance:\\n\\n    service Foo {\\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n    }\\n\\nThe JSON representation for `Empty` is empty JSON object `{}`.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated\\nempty messages in your APIs. A typical example is to use it as the request\\nor the response type of an API method. For instance:\\n\\n    service Foo {\\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n    }\\n\\nThe JSON representation for `Empty` is empty JSON object `{}`.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Request to reclaim a student submission.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated\\nempty messages in your APIs. A typical example is to use it as the request\\nor the response type of an API method. For instance:\\n\\n    service Foo {\\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n    }\\n\\nThe JSON representation for `Empty` is empty JSON object `{}`.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Request to return a student submission.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated\\nempty messages in your APIs. A typical example is to use it as the request\\nor the response type of an API method. For instance:\\n\\n    service Foo {\\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n    }\\n\\nThe JSON representation for `Empty` is empty JSON object `{}`.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Request to turn in a student submission.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated\\nempty messages in your APIs. A typical example is to use it as the request\\nor the response type of an API method. For instance:\\n\\n    service Foo {\\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n    }\\n\\nThe JSON representation for `Empty` is empty JSON object `{}`.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated\\nempty messages in your APIs. A typical example is to use it as the request\\nor the response type of an API method. For instance:\\n\\n    service Foo {\\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n    }\\n\\nThe JSON representation for `Empty` is empty JSON object `{}`.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated\\nempty messages in your APIs. A typical example is to use it as the request\\nor the response type of an API method. For instance:\\n\\n    service Foo {\\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n    }\\n\\nThe JSON representation for `Empty` is empty JSON object `{}`.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated\\nempty messages in your APIs. A typical example is to use it as the request\\nor the response type of an API method. For instance:\\n\\n    service Foo {\\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n    }\\n\\nThe JSON representation for `Empty` is empty JSON object `{}`.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated\\nempty messages in your APIs. A typical example is to use it as the request\\nor the response type of an API method. For instance:\\n\\n    service Foo {\\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n    }\\n\\nThe JSON representation for `Empty` is empty JSON object `{}`.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated\\nempty messages in your APIs. A typical example is to use it as the request\\nor the response type of an API method. For instance:\\n\\n    service Foo {\\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n    }\\n\\nThe JSON representation for `Empty` is empty JSON object `{}`.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated\\nempty messages in your APIs. A typical example is to use it as the request\\nor the response type of an API method. For instance:\\n\\n    service Foo {\\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n    }\\n\\nThe JSON representation for `Empty` is empty JSON object `{}`.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated\\nempty messages in your APIs. A typical example is to use it as the request\\nor the response type of an API method. For instance:\\n\\n    service Foo {\\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n    }\\n\\nThe JSON representation for `Empty` is empty JSON object `{}`.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 48,
        "numOpsQuery": 22,
        "numOpsMutation": 26,
        "numQueriesCreated": 22,
        "numMutationsCreated": 26
      }
    },
    {
      "name": "Google Cloud Billing",
      "report": {
        "warnings": [],
        "numOps": 7,
        "numOpsQuery": 6,
        "numOpsMutation": 1,
        "numQueriesCreated": 6,
        "numMutationsCreated": 1
      }
    },
    {
      "name": "Google Cloud Container Builder",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Request to cancel an ongoing build.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"RetryBuildRequest specifies a build to retry.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated\\nempty messages in your APIs. A typical example is to use it as the request\\nor the response type of an API method. For instance:\\n\\n    service Foo {\\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n    }\\n\\nThe JSON representation for `Empty` is empty JSON object `{}`.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated\\nempty messages in your APIs. A typical example is to use it as the request\\nor the response type of an API method. For instance:\\n\\n    service Foo {\\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n    }\\n\\nThe JSON representation for `Empty` is empty JSON object `{}`.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The request message for Operations.CancelOperation.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Substitutions data for Build resource.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/TimeSpan\"},\"description\":\"Stores timing information for phases of the build.\\nValid keys are:\\n- BUILD: time to execute all build steps\\n- PUSH: time to push all specified images.\\n- FETCHSOURCE: time to fetch source.\\nIf the build does not specify source, or does not specify images,\\nthese keys will not be included.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"format\":\"byte\",\"type\":\"string\"},\"description\":\"Map of environment variable name to its encrypted value.\\n\\nSecret environment variables must be unique across all of a build's\\nsecrets, and must be used by at least one build step. Values can be at most\\n1 KB in size. There can be at most ten secret values across all of a\\nbuild's secrets.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/FileHashes\"},\"description\":\"Hash(es) of the build source, which can be used to verify that the original\\nsource integrity was maintained in the build. Note that FileHashes will\\nonly be populated if BuildOptions has requested a SourceProvenanceHash.\\n\\nThe keys to this map are file paths used as build source and the values\\ncontain the hash values for those files.\\n\\nIf the build source came in a single package such as a gzipped tarfile\\n(.tar.gz), the FileHash will be for the single path to that file.\\n@OutputOnly\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Substitutions data for Build resource.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"description\":\"Service-specific metadata associated with the operation.  It typically\\ncontains progress information and common metadata such as create time.\\nSome services might not provide such metadata.  Any method that returns a\\nlong-running operation should document the metadata type, if any.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"description\":\"The normal response of the operation in case of success.  If the original\\nmethod returns no data on success, such as `Delete`, the response is\\n`google.protobuf.Empty`.  If the original method is standard\\n`Get`/`Create`/`Update`, the response should be the resource.  For other\\nmethods, the response should have the type `XxxResponse`, where `Xxx`\\nis the original method name.  For example, if the original method name\\nis `TakeSnapshot()`, the inferred response type is\\n`TakeSnapshotResponse`.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Substitutions data for Build resource.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/TimeSpan\"},\"description\":\"Stores timing information for phases of the build.\\nValid keys are:\\n- BUILD: time to execute all build steps\\n- PUSH: time to push all specified images.\\n- FETCHSOURCE: time to fetch source.\\nIf the build does not specify source, or does not specify images,\\nthese keys will not be included.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"format\":\"byte\",\"type\":\"string\"},\"description\":\"Map of environment variable name to its encrypted value.\\n\\nSecret environment variables must be unique across all of a build's\\nsecrets, and must be used by at least one build step. Values can be at most\\n1 KB in size. There can be at most ten secret values across all of a\\nbuild's secrets.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/FileHashes\"},\"description\":\"Hash(es) of the build source, which can be used to verify that the original\\nsource integrity was maintained in the build. Note that FileHashes will\\nonly be populated if BuildOptions has requested a SourceProvenanceHash.\\n\\nThe keys to this map are file paths used as build source and the values\\ncontain the hash values for those files.\\n\\nIf the build source came in a single package such as a gzipped tarfile\\n(.tar.gz), the FileHash will be for the single path to that file.\\n@OutputOnly\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Substitutions data for Build resource.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 12,
        "numOpsQuery": 5,
        "numOpsMutation": 7,
        "numQueriesCreated": 5,
        "numMutationsCreated": 7
      }
    },
    {
      "name": "Stackdriver Debugger",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Response for updating an active breakpoint.\\nThe message is defined to allow future extensions.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated\\nempty messages in your APIs. A typical example is to use it as the request\\nor the response type of an API method. For instance:\\n\\n    service Foo {\\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n    }\\n\\nThe JSON representation for `Empty` is empty JSON object `{}`.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"A set of custom breakpoint properties, populated by the agent, to be\\ndisplayed to the user.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"A set of custom debuggee properties, populated by the agent, to be\\ndisplayed to the user.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Labels with user defined metadata.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"A set of custom debuggee properties, populated by the agent, to be\\ndisplayed to the user.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Labels with user defined metadata.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"A set of custom breakpoint properties, populated by the agent, to be\\ndisplayed to the user.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 8,
        "numOpsQuery": 4,
        "numOpsMutation": 4,
        "numQueriesCreated": 4,
        "numMutationsCreated": 4
      }
    },
    {
      "name": "Stackdriver Error Reporting",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Response message for deleting error events.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Response for reporting an individual error event.\\nData may be added to this message in the future.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 6,
        "numOpsQuery": 3,
        "numOpsMutation": 3,
        "numQueriesCreated": 3,
        "numMutationsCreated": 3
      }
    },
    {
      "name": "Google Cloud Functions",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Request of `GenerateSourceUploadUrl` method.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"description\":\"Service-specific metadata associated with the operation.  It typically\\ncontains progress information and common metadata such as create time.\\nSome services might not provide such metadata.  Any method that returns a\\nlong-running operation should document the metadata type, if any.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"description\":\"The normal response of the operation in case of success.  If the original\\nmethod returns no data on success, such as `Delete`, the response is\\n`google.protobuf.Empty`.  If the original method is standard\\n`Get`/`Create`/`Update`, the response should be the resource.  For other\\nmethods, the response should have the type `XxxResponse`, where `Xxx`\\nis the original method name.  For example, if the original method name\\nis `TakeSnapshot()`, the inferred response type is\\n`TakeSnapshotResponse`.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Cross-service attributes for the location. For example\\n\\n    {\\\"cloud.googleapis.com/region\\\": \\\"us-east1\\\"}\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"description\":\"Service-specific metadata. For example the available capacity at the given\\nlocation.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Labels associated with this Cloud Function.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Describes the retry policy in case of function's execution failure.\\nA function execution will be retried on any failure.\\nA failed execution will be retried up to 7 days with an exponential backoff\\n(capped at 10 seconds).\\nRetried execution is charged as any other execution.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Labels associated with this Cloud Function.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Describes the retry policy in case of function's execution failure.\\nA function execution will be retried on any failure.\\nA failed execution will be retried up to 7 days with an exponential backoff\\n(capped at 10 seconds).\\nRetried execution is charged as any other execution.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 9,
        "numOpsQuery": 4,
        "numOpsMutation": 5,
        "numQueriesCreated": 4,
        "numMutationsCreated": 5
      }
    },
    {
      "name": "Google Cloud Functions",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Request of `GenerateUploadUrl` method.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"description\":\"Service-specific metadata associated with the operation.  It typically\\ncontains progress information and common metadata such as create time.\\nSome services might not provide such metadata.  Any method that returns a\\nlong-running operation should document the metadata type, if any.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"description\":\"The normal response of the operation in case of success.  If the original\\nmethod returns no data on success, such as `Delete`, the response is\\n`google.protobuf.Empty`.  If the original method is standard\\n`Get`/`Create`/`Update`, the response should be the resource.  For other\\nmethods, the response should have the type `XxxResponse`, where `Xxx`\\nis the original method name.  For example, if the original method name\\nis `TakeSnapshot()`, the inferred response type is\\n`TakeSnapshotResponse`.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Labels associated with this Cloud Function.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Describes the retry policy in case of function's execution failure.\\nA function execution will be retried on any failure.\\nA failed execution will be retried up to 7 days with an exponential backoff\\n(capped at 10 seconds).\\nRetried execution is charged as any other execution.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Cross-service attributes for the location. For example\\n\\n    {\\\"cloud.googleapis.com/region\\\": \\\"us-east1\\\"}\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"description\":\"Service-specific metadata. For example the available capacity at the given\\nlocation.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Labels associated with this Cloud Function.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Describes the retry policy in case of function's execution failure.\\nA function execution will be retried on any failure.\\nA failed execution will be retried up to 7 days with an exponential backoff\\n(capped at 10 seconds).\\nRetried execution is charged as any other execution.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 10,
        "numOpsQuery": 4,
        "numOpsMutation": 6,
        "numQueriesCreated": 4,
        "numMutationsCreated": 6
      }
    },
    {
      "name": "Google Cloud IoT",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated\\nempty messages in your APIs. A typical example is to use it as the request\\nor the response type of an API method. For instance:\\n\\n    service Foo {\\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n    }\\n\\nThe JSON representation for `Empty` is empty JSON object `{}`.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Request message for `GetIamPolicy` method.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The metadata key-value pairs assigned to the device. This metadata is not\\ninterpreted or indexed by Cloud IoT Core. It can be used to add contextual\\ninformation for the device.\\n\\nKeys must conform to the regular expression [a-zA-Z0-9-_]+ and be less than\\n128 bytes in length.\\n\\nValues are free-form strings. Each value must be less than or equal to 32\\nKB in size.\\n\\nThe total size of all keys and values must be less than 256 KB, and the\\nmaximum number of key-value pairs is 500.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The metadata key-value pairs assigned to the device. This metadata is not\\ninterpreted or indexed by Cloud IoT Core. It can be used to add contextual\\ninformation for the device.\\n\\nKeys must conform to the regular expression [a-zA-Z0-9-_]+ and be less than\\n128 bytes in length.\\n\\nValues are free-form strings. Each value must be less than or equal to 32\\nKB in size.\\n\\nThe total size of all keys and values must be less than 256 KB, and the\\nmaximum number of key-value pairs is 500.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 12,
        "numOpsQuery": 5,
        "numOpsMutation": 7,
        "numQueriesCreated": 5,
        "numMutationsCreated": 7
      }
    },
    {
      "name": "Google Cloud IoT",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated\\nempty messages in your APIs. A typical example is to use it as the request\\nor the response type of an API method. For instance:\\n\\n    service Foo {\\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n    }\\n\\nThe JSON representation for `Empty` is empty JSON object `{}`.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Request message for `GetIamPolicy` method.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 11,
        "numOpsQuery": 4,
        "numOpsMutation": 7,
        "numQueriesCreated": 4,
        "numMutationsCreated": 7
      }
    },
    {
      "name": "Google Cloud Key Management Service (KMS)",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Request message for KeyManagementService.DestroyCryptoKeyVersion.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Request message for KeyManagementService.RestoreCryptoKeyVersion.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Cross-service attributes for the location. For example\\n\\n    {\\\"cloud.googleapis.com/region\\\": \\\"us-east1\\\"}\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"description\":\"Service-specific metadata. For example the available capacity at the given\\nlocation.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Labels with user-defined metadata. For more information, see\\n[Labeling Keys](/kms/docs/labeling-keys).\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Labels with user-defined metadata. For more information, see\\n[Labeling Keys](/kms/docs/labeling-keys).\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 16,
        "numOpsQuery": 6,
        "numOpsMutation": 10,
        "numQueriesCreated": 6,
        "numMutationsCreated": 10
      }
    },
    {
      "name": "Cloud Monitoring",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"The label's name.\",\"type\":\"string\"},\"description\":\"The label's name.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"The label's name.\",\"type\":\"string\"},\"description\":\"The label's name.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"The label's name.\",\"type\":\"string\"},\"description\":\"The label's name.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 6,
        "numOpsQuery": 3,
        "numOpsMutation": 3,
        "numQueriesCreated": 3,
        "numMutationsCreated": 3
      }
    },
    {
      "name": "Google Cloud Resource Manager",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated\\nempty messages in your APIs. A typical example is to use it as the request\\nor the response type of an API method. For instance:\\n\\n    service Foo {\\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n    }\\n\\nThe JSON representation for `Empty` is empty JSON object `{}`.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The request sent to the\\nGetAncestry\\nmethod.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated\\nempty messages in your APIs. A typical example is to use it as the request\\nor the response type of an API method. For instance:\\n\\n    service Foo {\\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n    }\\n\\nThe JSON representation for `Empty` is empty JSON object `{}`.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The request sent to the UndeleteProject\\nmethod.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Request message for `GetIamPolicy` method.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated\\nempty messages in your APIs. A typical example is to use it as the request\\nor the response type of an API method. For instance:\\n\\n    service Foo {\\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n    }\\n\\nThe JSON representation for `Empty` is empty JSON object `{}`.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated\\nempty messages in your APIs. A typical example is to use it as the request\\nor the response type of an API method. For instance:\\n\\n    service Foo {\\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n    }\\n\\nThe JSON representation for `Empty` is empty JSON object `{}`.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Request message for `GetIamPolicy` method.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The labels associated with this Project.\\n\\nLabel keys must be between 1 and 63 characters long and must conform\\nto the following regular expression: \\\\[a-z\\\\](\\\\[-a-z0-9\\\\]*\\\\[a-z0-9\\\\])?.\\n\\nLabel values must be between 0 and 63 characters long and must conform\\nto the regular expression (\\\\[a-z\\\\](\\\\[-a-z0-9\\\\]*\\\\[a-z0-9\\\\])?)?.\\n\\nNo more than 256 labels can be associated with a given resource.\\n\\nClients should store labels in a representation such as JSON that does not\\ndepend on specific characters being disallowed.\\n\\nExample: <code>\\\"environment\\\" : \\\"dev\\\"</code>\\nRead-write.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"description\":\"Service-specific metadata associated with the operation.  It typically\\ncontains progress information and common metadata such as create time.\\nSome services might not provide such metadata.  Any method that returns a\\nlong-running operation should document the metadata type, if any.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"description\":\"The normal response of the operation in case of success.  If the original\\nmethod returns no data on success, such as `Delete`, the response is\\n`google.protobuf.Empty`.  If the original method is standard\\n`Get`/`Create`/`Update`, the response should be the resource.  For other\\nmethods, the response should have the type `XxxResponse`, where `Xxx`\\nis the original method name.  For example, if the original method name\\nis `TakeSnapshot()`, the inferred response type is\\n`TakeSnapshotResponse`.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The labels associated with this Project.\\n\\nLabel keys must be between 1 and 63 characters long and must conform\\nto the following regular expression: \\\\[a-z\\\\](\\\\[-a-z0-9\\\\]*\\\\[a-z0-9\\\\])?.\\n\\nLabel values must be between 0 and 63 characters long and must conform\\nto the regular expression (\\\\[a-z\\\\](\\\\[-a-z0-9\\\\]*\\\\[a-z0-9\\\\])?)?.\\n\\nNo more than 256 labels can be associated with a given resource.\\n\\nClients should store labels in a representation such as JSON that does not\\ndepend on specific characters being disallowed.\\n\\nExample: <code>\\\"environment\\\" : \\\"dev\\\"</code>\\nRead-write.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Ignores policies set above this resource and restores the\\n`constraint_default` enforcement behavior of the specific `Constraint` at\\nthis resource.\\n\\nSuppose that `constraint_default` is set to `ALLOW` for the\\n`Constraint` `constraints/serviceuser.services`. Suppose that organization\\nfoo.com sets a `Policy` at their Organization resource node that restricts\\nthe allowed service activations to deny all service activations. They\\ncould then set a `Policy` with the `policy_type` `restore_default` on\\nseveral experimental projects, restoring the `constraint_default`\\nenforcement of the `Constraint` for only those projects, allowing those\\nprojects to have all services activated.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A `Constraint` that is either enforced or not.\\n\\nFor example a constraint `constraints/compute.disableSerialPortAccess`.\\nIf it is enforced on a VM instance, serial port connections will not be\\nopened to that instance.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Ignores policies set above this resource and restores the\\n`constraint_default` enforcement behavior of the specific `Constraint` at\\nthis resource.\\n\\nSuppose that `constraint_default` is set to `ALLOW` for the\\n`Constraint` `constraints/serviceuser.services`. Suppose that organization\\nfoo.com sets a `Policy` at their Organization resource node that restricts\\nthe allowed service activations to deny all service activations. They\\ncould then set a `Policy` with the `policy_type` `restore_default` on\\nseveral experimental projects, restoring the `constraint_default`\\nenforcement of the `Constraint` for only those projects, allowing those\\nprojects to have all services activated.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 24,
        "numOpsQuery": 4,
        "numOpsMutation": 20,
        "numQueriesCreated": 4,
        "numMutationsCreated": 20
      }
    },
    {
      "name": "Google Cloud Resource Manager",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated\\nempty messages in your APIs. A typical example is to use it as the request\\nor the response type of an API method. For instance:\\n\\n    service Foo {\\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n    }\\n\\nThe JSON representation for `Empty` is empty JSON object `{}`.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The request sent to the\\nGetAncestry\\nmethod.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated\\nempty messages in your APIs. A typical example is to use it as the request\\nor the response type of an API method. For instance:\\n\\n    service Foo {\\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n    }\\n\\nThe JSON representation for `Empty` is empty JSON object `{}`.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The request sent to the UndeleteProject\\nmethod.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Request message for `GetIamPolicy` method.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Request message for `GetIamPolicy` method.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The labels associated with this Project.\\n\\nLabel keys must be between 1 and 63 characters long and must conform\\nto the following regular expression: \\\\[a-z\\\\](\\\\[-a-z0-9\\\\]*\\\\[a-z0-9\\\\])?.\\n\\nLabel values must be between 0 and 63 characters long and must conform\\nto the regular expression (\\\\[a-z\\\\](\\\\[-a-z0-9\\\\]*\\\\[a-z0-9\\\\])?)?.\\n\\nNo more than 256 labels can be associated with a given resource.\\n\\nClients should store labels in a representation such as JSON that does not\\ndepend on specific characters being disallowed.\\n\\nExample: <code>\\\"environment\\\" : \\\"dev\\\"</code>\\nRead-write.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The labels associated with this Project.\\n\\nLabel keys must be between 1 and 63 characters long and must conform\\nto the following regular expression: \\\\[a-z\\\\](\\\\[-a-z0-9\\\\]*\\\\[a-z0-9\\\\])?.\\n\\nLabel values must be between 0 and 63 characters long and must conform\\nto the regular expression (\\\\[a-z\\\\](\\\\[-a-z0-9\\\\]*\\\\[a-z0-9\\\\])?)?.\\n\\nNo more than 256 labels can be associated with a given resource.\\n\\nClients should store labels in a representation such as JSON that does not\\ndepend on specific characters being disallowed.\\n\\nExample: <code>\\\"environment\\\" : \\\"dev\\\"</code>\\nRead-write.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 16,
        "numOpsQuery": 4,
        "numOpsMutation": 12,
        "numQueriesCreated": 4,
        "numMutationsCreated": 12
      }
    },
    {
      "name": "Google Cloud Resource Manager",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The UndeleteFolder request message.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Request message for `GetIamPolicy` method.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"description\":\"Service-specific metadata associated with the operation.  It typically\\ncontains progress information and common metadata such as create time.\\nSome services might not provide such metadata.  Any method that returns a\\nlong-running operation should document the metadata type, if any.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"description\":\"The normal response of the operation in case of success.  If the original\\nmethod returns no data on success, such as `Delete`, the response is\\n`google.protobuf.Empty`.  If the original method is standard\\n`Get`/`Create`/`Update`, the response should be the resource.  For other\\nmethods, the response should have the type `XxxResponse`, where `Xxx`\\nis the original method name.  For example, if the original method name\\nis `TakeSnapshot()`, the inferred response type is\\n`TakeSnapshotResponse`.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 10,
        "numOpsQuery": 2,
        "numOpsMutation": 8,
        "numQueriesCreated": 2,
        "numMutationsCreated": 8
      }
    },
    {
      "name": "Cloud Tasks",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated\\nempty messages in your APIs. A typical example is to use it as the request\\nor the response type of an API method. For instance:\\n\\n    service Foo {\\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n    }\\n\\nThe JSON representation for `Empty` is empty JSON object `{}`.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated\\nempty messages in your APIs. A typical example is to use it as the request\\nor the response type of an API method. For instance:\\n\\n    service Foo {\\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n    }\\n\\nThe JSON representation for `Empty` is empty JSON object `{}`.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Request message for CloudTasks.PauseQueue.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Request message for CloudTasks.PurgeQueue.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Request message for CloudTasks.ResumeQueue.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Request message for `GetIamPolicy` method.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"HTTP request headers.\\n\\nThis map contains the header field names and values.\\nHeaders can be set when the\\n[task is created](google.cloud.tasks.v2beta2.CloudTasks.CreateTask).\\nRepeated headers are not supported but a header value can contain commas.\\n\\nCloud Tasks sets some headers to default values:\\n\\n* `User-Agent`: By default, this header is\\n  `\\\"AppEngine-Google; (+http://code.google.com/appengine)\\\"`.\\n  This header can be modified, but Cloud Tasks will append\\n  `\\\"AppEngine-Google; (+http://code.google.com/appengine)\\\"` to the\\n  modified `User-Agent`.\\n\\nIf the task has an AppEngineHttpRequest.payload, Cloud Tasks sets the\\nfollowing headers:\\n\\n* `Content-Type`: By default, the `Content-Type` header is set to\\n  `\\\"application/octet-stream\\\"`. The default can be overridden by explictly\\n  setting `Content-Type` to a particular media type when the\\n  [task is created](google.cloud.tasks.v2beta2.CloudTasks.CreateTask).\\n  For example, `Content-Type` can be set to `\\\"application/json\\\"`.\\n* `Content-Length`: This is computed by Cloud Tasks. This value is\\n  output only. It cannot be changed.\\n\\nThe headers below cannot be set or overridden:\\n\\n* `Host`\\n* `X-Google-*`\\n* `X-AppEngine-*`\\n\\nIn addition, Cloud Tasks sets some headers when the task is dispatched,\\nsuch as headers containing information about the task; see\\n[request headers](/appengine/docs/python/taskqueue/push/creating-handlers#reading_request_headers).\\nThese headers are set only when the task is dispatched, so they are not\\nvisible when the task is returned in a Cloud Tasks response.\\n\\nAlthough there is no specific limit for the maximum number of headers or\\nthe size, there is a limit on the maximum size of the Task. For more\\ninformation, see the CloudTasks.CreateTask documentation.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Cross-service attributes for the location. For example\\n\\n    {\\\"cloud.googleapis.com/region\\\": \\\"us-east1\\\"}\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"description\":\"Service-specific metadata. For example the available capacity at the given\\nlocation.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Pull target.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Pull target.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"HTTP request headers.\\n\\nThis map contains the header field names and values.\\nHeaders can be set when the\\n[task is created](google.cloud.tasks.v2beta2.CloudTasks.CreateTask).\\nRepeated headers are not supported but a header value can contain commas.\\n\\nCloud Tasks sets some headers to default values:\\n\\n* `User-Agent`: By default, this header is\\n  `\\\"AppEngine-Google; (+http://code.google.com/appengine)\\\"`.\\n  This header can be modified, but Cloud Tasks will append\\n  `\\\"AppEngine-Google; (+http://code.google.com/appengine)\\\"` to the\\n  modified `User-Agent`.\\n\\nIf the task has an AppEngineHttpRequest.payload, Cloud Tasks sets the\\nfollowing headers:\\n\\n* `Content-Type`: By default, the `Content-Type` header is set to\\n  `\\\"application/octet-stream\\\"`. The default can be overridden by explictly\\n  setting `Content-Type` to a particular media type when the\\n  [task is created](google.cloud.tasks.v2beta2.CloudTasks.CreateTask).\\n  For example, `Content-Type` can be set to `\\\"application/json\\\"`.\\n* `Content-Length`: This is computed by Cloud Tasks. This value is\\n  output only. It cannot be changed.\\n\\nThe headers below cannot be set or overridden:\\n\\n* `Host`\\n* `X-Google-*`\\n* `X-AppEngine-*`\\n\\nIn addition, Cloud Tasks sets some headers when the task is dispatched,\\nsuch as headers containing information about the task; see\\n[request headers](/appengine/docs/python/taskqueue/push/creating-handlers#reading_request_headers).\\nThese headers are set only when the task is dispatched, so they are not\\nvisible when the task is returned in a Cloud Tasks response.\\n\\nAlthough there is no specific limit for the maximum number of headers or\\nthe size, there is a limit on the maximum size of the Task. For more\\ninformation, see the CloudTasks.CreateTask documentation.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 18,
        "numOpsQuery": 4,
        "numOpsMutation": 14,
        "numQueriesCreated": 4,
        "numMutationsCreated": 14
      }
    },
    {
      "name": "Stackdriver Trace",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Collection of labels associated with the span. Label keys must be less than\\n128 bytes. Label values must be less than 16 kilobytes (10MB for\\n`/stacktrace` values).\\n\\nSome predefined label keys exist, or you may create your own. When creating\\nyour own, we recommend the following formats:\\n\\n* `/category/product/key` for agents of well-known products (e.g.\\n  `/db/mongodb/read_size`).\\n* `short_host/path/key` for domain-specific keys (e.g.\\n  `foo.com/myproduct/bar`)\\n\\nPredefined labels include:\\n\\n*   `/agent`\\n*   `/component`\\n*   `/error/message`\\n*   `/error/name`\\n*   `/http/client_city`\\n*   `/http/client_country`\\n*   `/http/client_protocol`\\n*   `/http/client_region`\\n*   `/http/host`\\n*   `/http/method`\\n*   `/http/redirected_url`\\n*   `/http/request/size`\\n*   `/http/response/size`\\n*   `/http/status_code`\\n*   `/http/url`\\n*   `/http/user_agent`\\n*   `/pid`\\n*   `/stacktrace`\\n*   `/tid`\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 2,
        "numOpsQuery": 2,
        "numOpsMutation": 0,
        "numQueriesCreated": 2,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Stackdriver Trace",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated\\nempty messages in your APIs. A typical example is to use it as the request\\nor the response type of an API method. For instance:\\n\\n    service Foo {\\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n    }\\n\\nThe JSON representation for `Empty` is empty JSON object `{}`.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/AttributeValue\"},\"description\":\"The set of attributes. Each attribute's key can be up to 128 bytes\\nlong. The value can be a string up to 256 bytes, an integer, or the\\nBoolean values `true` and `false`. For example:\\n\\n    \\\"/instance_id\\\": \\\"my-instance\\\"\\n    \\\"/http/user_agent\\\": \\\"\\\"\\n    \\\"/http/request_bytes\\\": 300\\n    \\\"abc.com/myattribute\\\": true\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/AttributeValue\"},\"description\":\"The set of attributes. Each attribute's key can be up to 128 bytes\\nlong. The value can be a string up to 256 bytes, an integer, or the\\nBoolean values `true` and `false`. For example:\\n\\n    \\\"/instance_id\\\": \\\"my-instance\\\"\\n    \\\"/http/user_agent\\\": \\\"\\\"\\n    \\\"/http/request_bytes\\\": 300\\n    \\\"abc.com/myattribute\\\": true\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 2,
        "numOpsQuery": 0,
        "numOpsMutation": 2,
        "numQueriesCreated": 0,
        "numMutationsCreated": 2
      }
    },
    {
      "name": "Cloud User Accounts",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /{project}/global/operations/{operation}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 23,
        "numOpsQuery": 8,
        "numOpsMutation": 15,
        "numQueriesCreated": 8,
        "numMutationsCreated": 14
      }
    },
    {
      "name": "Cloud User Accounts",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /{project}/global/operations/{operation}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 17,
        "numOpsQuery": 6,
        "numOpsMutation": 11,
        "numQueriesCreated": 6,
        "numMutationsCreated": 10
      }
    },
    {
      "name": "Cloud User Accounts",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /{project}/global/operations/{operation}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 23,
        "numOpsQuery": 8,
        "numOpsMutation": 15,
        "numQueriesCreated": 8,
        "numMutationsCreated": 14
      }
    },
    {
      "name": "Cloud User Accounts",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /{project}/global/operations/{operation}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 17,
        "numOpsQuery": 6,
        "numOpsMutation": 11,
        "numQueriesCreated": 6,
        "numMutationsCreated": 10
      }
    },
    {
      "name": "Compute Engine",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /{project}/global/operations/{operation}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /{project}/regions/{region}/operations/{operation}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /{project}/zones/{zone}/operations/{operation}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/AcceleratorTypesScopedList\"},\"description\":\"A list of AcceleratorTypesScopedList resources.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/AddressesScopedList\"},\"description\":\"A list of AddressesScopedList resources.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/AutoscalersScopedList\"},\"description\":\"A list of AutoscalersScopedList resources.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/BackendServicesScopedList\"},\"description\":\"A list of BackendServicesScopedList resources.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/CommitmentsScopedList\"},\"description\":\"A list of CommitmentsScopedList resources.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/DiskTypesScopedList\"},\"description\":\"A list of DiskTypesScopedList resources.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/DisksScopedList\"},\"description\":\"A list of DisksScopedList resources.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/ForwardingRulesScopedList\"},\"description\":\"A list of ForwardingRulesScopedList resources.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/HostTypesScopedList\"},\"description\":\"A list of HostTypesScopedList resources.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/HostsScopedList\"},\"description\":\"A list of HostsScopedList resources.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/InstanceGroupManagersScopedList\"},\"description\":\"A list of InstanceGroupManagersScopedList resources.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/InstanceGroupsScopedList\"},\"description\":\"A list of InstanceGroupsScopedList resources.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/InstancesScopedList\"},\"description\":\"A list of InstancesScopedList resources.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/InterconnectAttachmentsScopedList\"},\"description\":\"A list of InterconnectAttachmentsScopedList resources.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/MachineTypesScopedList\"},\"description\":\"A list of MachineTypesScopedList resources.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/MaintenancePoliciesScopedList\"},\"description\":\"A list of MaintenancePolicy resources.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/NetworkEndpointGroupsScopedList\"},\"description\":\"A list of NetworkEndpointGroupsScopedList resources.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/OperationsScopedList\"},\"description\":\"[Output Only] A map of scoped operation lists.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/RoutersScopedList\"},\"description\":\"A list of Router resources.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/SubnetworksScopedList\"},\"description\":\"A list of SubnetworksScopedList resources.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/TargetInstancesScopedList\"},\"description\":\"A list of TargetInstance resources.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/TargetPoolsScopedList\"},\"description\":\"A list of TargetPool resources.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/TargetVpnGatewaysScopedList\"},\"description\":\"A list of TargetVpnGateway resources.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/VpnTunnelsScopedList\"},\"description\":\"A list of VpnTunnelsScopedList resources.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Labels to apply to this Address resource. These can be later modified by the setLabels method. Each label key/value must comply with RFC1035. Label values may be empty.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Labels to apply to this resource. These can be later modified by the setLabels method. Each label key/value pair must comply with RFC1035. Label values may be empty.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Labels to apply to this image. These can be later modified by the setLabels method.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Labels to apply to instances that are created from this template.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Labels to apply to this Interconnect resource. These can be later modified by the setLabels method. Each label key/value must comply with RFC1035. Label values may be empty.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Labels to apply to this snapshot. These can be later modified by the setLabels method. Label values may be empty.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Labels to apply to this disk. These can be later modified by the setLabels method.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Labels to apply to this InterconnectAttachment resource. These can be later modified by the setLabels method. Each label key/value must comply with RFC1035. Label values may be empty.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Labels to apply to this TargetVpnGateway resource. These can be later modified by the setLabels method. Each label key/value must comply with RFC1035. Label values may be empty.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Labels to apply to this VpnTunnel. These can be later modified by the setLabels method. Each label key/value pair must comply with RFC1035. Label values may be empty.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Labels to apply to this host.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Labels to apply to this instance. These can be later modified by the setLabels method.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Labels to apply to this Address resource. These can be later modified by the setLabels method. Each label key/value must comply with RFC1035. Label values may be empty.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"A list of labels to apply for this resource. Each label key & value must comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash. For example, \\\"webserver-frontend\\\": \\\"images\\\". A label value can also be empty (e.g. \\\"my-label\\\": \\\"\\\").\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Labels to apply to this resource. These can be later modified by the setLabels method. Each label key/value pair must comply with RFC1035. Label values may be empty.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Labels to apply to this image. These can be later modified by the setLabels method.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Labels to apply to instances that are created from this template.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Labels to apply to this Interconnect resource. These can be later modified by the setLabels method. Each label key/value must comply with RFC1035. Label values may be empty.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The labels to set for this resource.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Labels to apply to this disk. These can be later modified by the setLabels method.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Labels to apply to this snapshot. These can be later modified by the setLabels method. Label values may be empty.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Labels to apply to this InterconnectAttachment resource. These can be later modified by the setLabels method. Each label key/value must comply with RFC1035. Label values may be empty.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Labels to apply to this TargetVpnGateway resource. These can be later modified by the setLabels method. Each label key/value must comply with RFC1035. Label values may be empty.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Labels to apply to this VpnTunnel. These can be later modified by the setLabels method. Each label key/value pair must comply with RFC1035. Label values may be empty.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Labels to apply to this host.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Labels to apply to this instance. These can be later modified by the setLabels method.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 451,
        "numOpsQuery": 163,
        "numOpsMutation": 288,
        "numQueriesCreated": 163,
        "numMutationsCreated": 285
      }
    },
    {
      "name": "Compute Engine",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /{project}/global/operations/{operation}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /{project}/regions/{region}/operations/{operation}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /{project}/zones/{zone}/operations/{operation}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/AcceleratorTypesScopedList\"},\"description\":\"A list of AcceleratorTypesScopedList resources.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/AddressesScopedList\"},\"description\":\"A list of AddressesScopedList resources.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/AutoscalersScopedList\"},\"description\":\"A list of AutoscalersScopedList resources.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/BackendServicesScopedList\"},\"description\":\"A list of BackendServicesScopedList resources.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/CommitmentsScopedList\"},\"description\":\"A list of CommitmentsScopedList resources.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/DiskTypesScopedList\"},\"description\":\"A list of DiskTypesScopedList resources.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/DisksScopedList\"},\"description\":\"A list of DisksScopedList resources.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/ForwardingRulesScopedList\"},\"description\":\"A list of ForwardingRulesScopedList resources.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/InstanceGroupManagersScopedList\"},\"description\":\"A list of InstanceGroupManagersScopedList resources.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/InstanceGroupsScopedList\"},\"description\":\"A list of InstanceGroupsScopedList resources.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/InstancesScopedList\"},\"description\":\"A list of InstancesScopedList resources.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/InterconnectAttachmentsScopedList\"},\"description\":\"A list of InterconnectAttachmentsScopedList resources.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/MachineTypesScopedList\"},\"description\":\"A list of MachineTypesScopedList resources.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/OperationsScopedList\"},\"description\":\"[Output Only] A map of scoped operation lists.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/RoutersScopedList\"},\"description\":\"A list of Router resources.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/SubnetworksScopedList\"},\"description\":\"A list of SubnetworksScopedList resources.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/TargetInstancesScopedList\"},\"description\":\"A list of TargetInstance resources.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/TargetPoolsScopedList\"},\"description\":\"A list of TargetPool resources.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/TargetVpnGatewaysScopedList\"},\"description\":\"A list of TargetVpnGateway resources.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/VpnTunnelsScopedList\"},\"description\":\"A list of VpnTunnelsScopedList resources.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Labels to apply to this Address resource. These can be later modified by the setLabels method. Each label key/value must comply with RFC1035. Label values may be empty.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Labels to apply to this resource. These can be later modified by the setLabels method. Each label key/value pair must comply with RFC1035. Label values may be empty.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Labels to apply to this image. These can be later modified by the setLabels method.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Labels to apply to instances that are created from this template.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Labels to apply to this snapshot. These can be later modified by the setLabels method. Label values may be empty.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Labels to apply to this TargetVpnGateway resource. These can be later modified by the setLabels method. Each label key/value must comply with RFC1035. Label values may be empty.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Labels to apply to this VpnTunnel. These can be later modified by the setLabels method. Each label key/value pair must comply with RFC1035. Label values may be empty.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Labels to apply to this disk. These can be later modified by the setLabels method.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Labels to apply to this instance. These can be later modified by the setLabels method.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Labels to apply to this Address resource. These can be later modified by the setLabels method. Each label key/value must comply with RFC1035. Label values may be empty.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"A list of labels to apply for this resource. Each label key & value must comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash. For example, \\\"webserver-frontend\\\": \\\"images\\\". A label value can also be empty (e.g. \\\"my-label\\\": \\\"\\\").\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Labels to apply to this resource. These can be later modified by the setLabels method. Each label key/value pair must comply with RFC1035. Label values may be empty.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Labels to apply to this image. These can be later modified by the setLabels method.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Labels to apply to instances that are created from this template.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The labels to set for this resource.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Labels to apply to this TargetVpnGateway resource. These can be later modified by the setLabels method. Each label key/value must comply with RFC1035. Label values may be empty.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Labels to apply to this VpnTunnel. These can be later modified by the setLabels method. Each label key/value pair must comply with RFC1035. Label values may be empty.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Labels to apply to this disk. These can be later modified by the setLabels method.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Labels to apply to this snapshot. These can be later modified by the setLabels method. Label values may be empty.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Labels to apply to this instance. These can be later modified by the setLabels method.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 368,
        "numOpsQuery": 133,
        "numOpsMutation": 235,
        "numQueriesCreated": 133,
        "numMutationsCreated": 232
      }
    },
    {
      "name": "Compute Engine",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /{project}/global/operations/{operation}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /{project}/regions/{region}/operations/{operation}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /{project}/zones/{zone}/operations/{operation}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/AcceleratorTypesScopedList\"},\"description\":\"A list of AcceleratorTypesScopedList resources.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/AddressesScopedList\"},\"description\":\"A list of AddressesScopedList resources.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/AutoscalersScopedList\"},\"description\":\"A list of AutoscalersScopedList resources.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/BackendServicesScopedList\"},\"description\":\"A list of BackendServicesScopedList resources.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/CommitmentsScopedList\"},\"description\":\"A list of CommitmentsScopedList resources.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/DiskTypesScopedList\"},\"description\":\"A list of DiskTypesScopedList resources.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/DisksScopedList\"},\"description\":\"A list of DisksScopedList resources.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/ForwardingRulesScopedList\"},\"description\":\"A list of ForwardingRulesScopedList resources.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/InstanceGroupManagersScopedList\"},\"description\":\"A list of InstanceGroupManagersScopedList resources.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/InstanceGroupsScopedList\"},\"description\":\"A list of InstanceGroupsScopedList resources.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/InstancesScopedList\"},\"description\":\"A list of InstancesScopedList resources.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/InterconnectAttachmentsScopedList\"},\"description\":\"A list of InterconnectAttachmentsScopedList resources.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/MachineTypesScopedList\"},\"description\":\"A list of MachineTypesScopedList resources.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/OperationsScopedList\"},\"description\":\"[Output Only] A map of scoped operation lists.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/RoutersScopedList\"},\"description\":\"A list of Router resources.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/SubnetworksScopedList\"},\"description\":\"A list of SubnetworksScopedList resources.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/TargetInstancesScopedList\"},\"description\":\"A list of TargetInstance resources.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/TargetPoolsScopedList\"},\"description\":\"A list of TargetPool resources.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/TargetVpnGatewaysScopedList\"},\"description\":\"A list of TargetVpnGateway resources.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/VpnTunnelsScopedList\"},\"description\":\"A list of VpnTunnelsScopedList resources.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Labels to apply to this image. These can be later modified by the setLabels method.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Labels to apply to instances that are created from this template.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Labels to apply to this snapshot. These can be later modified by the setLabels method. Label values may be empty.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Labels to apply to this disk. These can be later modified by the setLabels method.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Labels to apply to this instance. These can be later modified by the setLabels method.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Labels to apply to this image. These can be later modified by the setLabels method.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"A list of labels to apply for this resource. Each label key & value must comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash. For example, \\\"webserver-frontend\\\": \\\"images\\\". A label value can also be empty (e.g. \\\"my-label\\\": \\\"\\\").\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Labels to apply to instances that are created from this template.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Labels to apply to this disk. These can be later modified by the setLabels method.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Labels to apply to this snapshot. These can be later modified by the setLabels method. Label values may be empty.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The labels to set for this resource.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Labels to apply to this instance. These can be later modified by the setLabels method.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 290,
        "numOpsQuery": 123,
        "numOpsMutation": 167,
        "numQueriesCreated": 123,
        "numMutationsCreated": 164
      }
    },
    {
      "name": "Consumer Surveys",
      "report": {
        "warnings": [],
        "numOps": 11,
        "numOpsQuery": 5,
        "numOpsMutation": 6,
        "numQueriesCreated": 5,
        "numMutationsCreated": 6
      }
    },
    {
      "name": "Google Container Engine",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"RollbackNodePoolUpgradeRequest rollbacks the previously Aborted or Failed\\nNodePool upgrade. This will be an no-op if the last upgrade successfully\\ncompleted.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"CompleteIPRotationRequest moves the cluster master back into single-IP mode.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"StartIPRotationRequest creates a new IP for the cluster and then performs\\na node upgrade on each node pool to point to the new IP.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated\\nempty messages in your APIs. A typical example is to use it as the request\\nor the response type of an API method. For instance:\\n\\n    service Foo {\\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n    }\\n\\nThe JSON representation for `Empty` is empty JSON object `{}`.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"CancelOperationRequest cancels a single operation.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The resource labels for the cluster to use to annotate any related\\nGoogle Compute Engine resources.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The map of Kubernetes labels (key/value pairs) to be applied to each node.\\nThese will added in addition to any default label(s) that\\nKubernetes may apply to the node.\\nIn case of conflict in label keys, the applied set may differ depending on\\nthe Kubernetes version -- it's best to assume the behavior is undefined\\nand conflicts should be avoided.\\nFor more information, including usage and the valid values, see:\\nhttps://kubernetes.io/docs/concepts/overview/working-with-objects/labels/\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The metadata key/value pairs assigned to instances in the cluster.\\n\\nKeys must conform to the regexp [a-zA-Z0-9-_]+ and be less than 128 bytes\\nin length. These are reflected as part of a URL in the metadata server.\\nAdditionally, to avoid ambiguity, keys must not conflict with any other\\nmetadata keys for the project or be one of the four reserved keys:\\n\\\"instance-template\\\", \\\"kube-env\\\", \\\"startup-script\\\", and \\\"user-data\\\"\\n\\nValues are free-form strings, and only have meaning as interpreted by\\nthe image running in the instance. The only restriction placed on them is\\nthat each value's size must be less than or equal to 32 KB.\\n\\nThe total size of all keys and values must be less than 512 KB.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The resource labels for the cluster to use to annotate any related\\nGoogle Compute Engine resources.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The map of Kubernetes labels (key/value pairs) to be applied to each node.\\nThese will added in addition to any default label(s) that\\nKubernetes may apply to the node.\\nIn case of conflict in label keys, the applied set may differ depending on\\nthe Kubernetes version -- it's best to assume the behavior is undefined\\nand conflicts should be avoided.\\nFor more information, including usage and the valid values, see:\\nhttps://kubernetes.io/docs/concepts/overview/working-with-objects/labels/\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The metadata key/value pairs assigned to instances in the cluster.\\n\\nKeys must conform to the regexp [a-zA-Z0-9-_]+ and be less than 128 bytes\\nin length. These are reflected as part of a URL in the metadata server.\\nAdditionally, to avoid ambiguity, keys must not conflict with any other\\nmetadata keys for the project or be one of the four reserved keys:\\n\\\"instance-template\\\", \\\"kube-env\\\", \\\"startup-script\\\", and \\\"user-data\\\"\\n\\nValues are free-form strings, and only have meaning as interpreted by\\nthe image running in the instance. The only restriction placed on them is\\nthat each value's size must be less than or equal to 32 KB.\\n\\nThe total size of all keys and values must be less than 512 KB.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The labels to set for that cluster.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 30,
        "numOpsQuery": 7,
        "numOpsMutation": 23,
        "numQueriesCreated": 7,
        "numMutationsCreated": 23
      }
    },
    {
      "name": "Google Container Engine",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated\\nempty messages in your APIs. A typical example is to use it as the request\\nor the response type of an API method. For instance:\\n\\n    service Foo {\\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n    }\\n\\nThe JSON representation for `Empty` is empty JSON object `{}`.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated\\nempty messages in your APIs. A typical example is to use it as the request\\nor the response type of an API method. For instance:\\n\\n    service Foo {\\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n    }\\n\\nThe JSON representation for `Empty` is empty JSON object `{}`.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The map of Kubernetes labels (key/value pairs) to be applied to each node.\\nThese will added in addition to any default label(s) that\\nKubernetes may apply to the node.\\nIn case of conflict in label keys, the applied set may differ depending on\\nthe Kubernetes version -- it's best to assume the behavior is undefined\\nand conflicts should be avoided.\\nFor more information, including usage and the valid values, see:\\nhttps://kubernetes.io/docs/concepts/overview/working-with-objects/labels/\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The metadata key/value pairs assigned to instances in the cluster.\\n\\nKeys must conform to the regexp [a-zA-Z0-9-_]+ and be less than 128 bytes\\nin length. These are reflected as part of a URL in the metadata server.\\nAdditionally, to avoid ambiguity, keys must not conflict with any other\\nmetadata keys for the project or be one of the four reserved keys:\\n\\\"instance-template\\\", \\\"kube-env\\\", \\\"startup-script\\\", and \\\"user-data\\\"\\n\\nValues are free-form strings, and only have meaning as interpreted by\\nthe image running in the instance. The only restriction placed on them is\\nthat each value's size must be less than or equal to 32 KB.\\n\\nThe total size of all keys and values must be less than 512 KB.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The map of Kubernetes labels (key/value pairs) to be applied to each node.\\nThese will added in addition to any default label(s) that\\nKubernetes may apply to the node.\\nIn case of conflict in label keys, the applied set may differ depending on\\nthe Kubernetes version -- it's best to assume the behavior is undefined\\nand conflicts should be avoided.\\nFor more information, including usage and the valid values, see:\\nhttps://kubernetes.io/docs/concepts/overview/working-with-objects/labels/\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The metadata key/value pairs assigned to instances in the cluster.\\n\\nKeys must conform to the regexp [a-zA-Z0-9-_]+ and be less than 128 bytes\\nin length. These are reflected as part of a URL in the metadata server.\\nAdditionally, to avoid ambiguity, keys must not conflict with any other\\nmetadata keys for the project or be one of the four reserved keys:\\n\\\"instance-template\\\", \\\"kube-env\\\", \\\"startup-script\\\", and \\\"user-data\\\"\\n\\nValues are free-form strings, and only have meaning as interpreted by\\nthe image running in the instance. The only restriction placed on them is\\nthat each value's size must be less than or equal to 32 KB.\\n\\nThe total size of all keys and values must be less than 512 KB.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The labels to set for that cluster.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 54,
        "numOpsQuery": 12,
        "numOpsMutation": 42,
        "numQueriesCreated": 12,
        "numMutationsCreated": 42
      }
    },
    {
      "name": "Content API for Shopping",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /{merchantId}/accounts/{accountId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /{merchantId}/datafeeds/{datafeedId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /{merchantId}/products/{productId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 56,
        "numOpsQuery": 22,
        "numOpsMutation": 34,
        "numQueriesCreated": 22,
        "numMutationsCreated": 31
      }
    },
    {
      "name": "Content API for Shopping",
      "report": {
        "warnings": [],
        "numOps": 17,
        "numOpsQuery": 4,
        "numOpsMutation": 13,
        "numQueriesCreated": 4,
        "numMutationsCreated": 13
      }
    },
    {
      "name": "CustomSearch",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"items\":{\"$ref\":\"#/components/schemas/Query\"},\"type\":\"array\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"items\":{\"additionalProperties\":{},\"type\":\"object\"},\"type\":\"array\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 2,
        "numOpsQuery": 2,
        "numOpsMutation": 0,
        "numQueriesCreated": 2,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Google Dataflow",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Response to a send capture request.\\nnothing\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Response to a send capture request.\\nnothing\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"User-defined labels for this job.\\n\\nThe labels map can contain no more than 64 entries.  Entries of the labels\\nmap are UTF8 strings that comply with the following restrictions:\\n\\n* Keys must conform to regexp:  \\\\p{Ll}\\\\p{Lo}{0,62}\\n* Values must conform to regexp:  [\\\\p{Ll}\\\\p{Lo}\\\\p{N}_-]{0,63}\\n* Both keys and values are additionally constrained to be <= 128 bytes in\\nsize.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The map of transform name prefixes of the job to be replaced to the\\ncorresponding name prefixes of the new job.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"description\":\"Experimental settings.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object.\"},\"description\":\"The Cloud Dataflow SDK pipeline options specified by the user. These\\noptions are passed through the service and are used to recreate the\\nSDK pipeline options on the worker in a language agnostic and platform\\nindependent way.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object.\"},\"description\":\"A description of the process that generated the request.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object.\"},\"description\":\"A structure describing which components and their versions of the service\\nare required in order to run the job.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Metadata to set on the Google Compute Engine VMs.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"description\":\"Extra arguments for this worker pool.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/JobExecutionStageInfo\"},\"description\":\"A mapping from each stage to the information about that stage.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object.\"},\"description\":\"Named properties associated with the step. Each kind of\\npredefined step has its own required set of properties.\\nMust be provided on Create.  Only retrieved with JOB_VIEW_ALL.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Value for this parameter.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A struct value describing properties of a distribution of numeric values.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Worker-computed aggregate value for internal use by the Dataflow\\nservice.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Worker-computed aggregate value for the \\\"Mean\\\" aggregation kind.\\nThis holds the count of the aggregated values and is used in combination\\nwith mean_sum above to obtain the actual mean aggregate value.\\nThe only possible value type is Long.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Worker-computed aggregate value for the \\\"Mean\\\" aggregation kind.\\nThis holds the sum of the aggregated values and is used in combination\\nwith mean_count below to obtain the actual mean aggregate value.\\nThe only possible value types are Long and Double.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Worker-computed aggregate value for aggregation kinds \\\"Sum\\\", \\\"Max\\\", \\\"Min\\\",\\n\\\"And\\\", and \\\"Or\\\".  The possible value types are Long, Double, and Boolean.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Worker-computed aggregate value for the \\\"Set\\\" aggregation kind.  The only\\npossible value type is a list of Values whose type can be Long, Double,\\nor String, according to the metric's type.  All Values in the list must\\nbe of the same type.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Zero or more labeled fields which identify the part of the job this\\nmetric is associated with, such as the name of a step or collection.\\n\\nFor example, built-in counters associated with steps will have\\ncontext['step'] = <step-name>. Counters associated with PCollections\\nin the SDK will have context['pcollection'] = <pcollection-name>.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Labels are used to group WorkerMessages.\\nFor example, a worker_message about a particular container\\nmight have the labels:\\n{ \\\"JOB_ID\\\": \\\"2015-04-22\\\",\\n  \\\"WORKER_ID\\\": \\\"wordcount-vm-2015…\\\"\\n  \\\"CONTAINER_TYPE\\\": \\\"worker\\\",\\n  \\\"CONTAINER_ID\\\": \\\"ac1234def\\\"}\\nLabel tags typically correspond to Label enum values. However, for ease\\nof development other strings can be used as tags. LABEL_UNSPECIFIED should\\nnot be used here.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object.\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object.\"},\"description\":\"Parameters contains specific information about the code.\\n\\nThis is a struct to allow parameters of different types.\\n\\nExamples:\\n 1. For a \\\"HARNESS_STARTED\\\" message parameters might provide the name\\n    of the worker and additional data like timing information.\\n 2. For a \\\"GCS_DOWNLOAD_ERROR\\\" parameters might contain fields listing\\n    the GCS objects being downloaded and fields containing errors.\\n\\nIn general complex data structures should be avoided. If a worker\\nneeds to send a specific and complicated data structure then please\\nconsider defining a new proto and adding it to the data oneof in\\nWorkerMessageResponse.\\n\\nConventions:\\n Parameters should only be used for information that isn't typically passed\\n as a label.\\n hostname and other worker identifiers should almost always be passed\\n as labels since they will be included on most messages.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Service-side response to WorkerMessage reporting resource utilization.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Service-side response to WorkerMessage issuing shutdown notice.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"User-defined labels for this job.\\n\\nThe labels map can contain no more than 64 entries.  Entries of the labels\\nmap are UTF8 strings that comply with the following restrictions:\\n\\n* Keys must conform to regexp:  \\\\p{Ll}\\\\p{Lo}{0,62}\\n* Values must conform to regexp:  [\\\\p{Ll}\\\\p{Lo}\\\\p{N}_-]{0,63}\\n* Both keys and values are additionally constrained to be <= 128 bytes in\\nsize.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The map of transform name prefixes of the job to be replaced to the\\ncorresponding name prefixes of the new job.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"description\":\"Experimental settings.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object.\"},\"description\":\"The Cloud Dataflow SDK pipeline options specified by the user. These\\noptions are passed through the service and are used to recreate the\\nSDK pipeline options on the worker in a language agnostic and platform\\nindependent way.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object.\"},\"description\":\"A description of the process that generated the request.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object.\"},\"description\":\"A structure describing which components and their versions of the service\\nare required in order to run the job.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Metadata to set on the Google Compute Engine VMs.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"description\":\"Extra arguments for this worker pool.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/JobExecutionStageInfo\"},\"description\":\"A mapping from each stage to the information about that stage.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object.\"},\"description\":\"Named properties associated with the step. Each kind of\\npredefined step has its own required set of properties.\\nMust be provided on Create.  Only retrieved with JOB_VIEW_ALL.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object.\"},\"description\":\"The codec to use to encode data being written via this output.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object.\"},\"description\":\"The user function to invoke.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object.\"},\"description\":\"How to interpret the source element(s) as a side input value.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object.\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object.\"},\"description\":\"The codec to use to decode data read from the source.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object.\"},\"description\":\"The source to read from, plus its parameters.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object.\"},\"description\":\"The codec to use for interpreting an element in the input PTable.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object.\"},\"description\":\"The value combining function to invoke.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object.\"},\"description\":\"The codec to use to encode data written to the sink.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object.\"},\"description\":\"The sink to write to, plus its parameters.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object.\"},\"description\":\"The user function to invoke.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Map from user step names to state families.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Maps user stage names to stable computation names.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Value for internally-defined counters used by the Dataflow service.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object.\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object.\"},\"description\":\"The codec to use to decode data read from the source.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object.\"},\"description\":\"The source to read from, plus its parameters.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A struct value describing properties of a distribution of numeric values.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Worker-computed aggregate value for internal use by the Dataflow\\nservice.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Worker-computed aggregate value for the \\\"Mean\\\" aggregation kind.\\nThis holds the count of the aggregated values and is used in combination\\nwith mean_sum above to obtain the actual mean aggregate value.\\nThe only possible value type is Long.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Worker-computed aggregate value for the \\\"Mean\\\" aggregation kind.\\nThis holds the sum of the aggregated values and is used in combination\\nwith mean_count below to obtain the actual mean aggregate value.\\nThe only possible value types are Long and Double.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Worker-computed aggregate value for aggregation kinds \\\"Sum\\\", \\\"Max\\\", \\\"Min\\\",\\n\\\"And\\\", and \\\"Or\\\".  The possible value types are Long, Double, and Boolean.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Worker-computed aggregate value for the \\\"Set\\\" aggregation kind.  The only\\npossible value type is a list of Values whose type can be Long, Double,\\nor String, according to the metric's type.  All Values in the list must\\nbe of the same type.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Zero or more labeled fields which identify the part of the job this\\nmetric is associated with, such as the name of a step or collection.\\n\\nFor example, built-in counters associated with steps will have\\ncontext['step'] = <step-name>. Counters associated with PCollections\\nin the SDK will have context['pcollection'] = <pcollection-name>.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object.\"},\"description\":\"Other data returned by the service, specific to the particular\\nworker harness.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The runtime parameters to pass to the job.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The runtime parameters to pass to the job.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 29,
        "numOpsQuery": 11,
        "numOpsMutation": 18,
        "numQueriesCreated": 11,
        "numMutationsCreated": 18
      }
    },
    {
      "name": "Google Cloud Dataproc",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A request to collect cluster diagnostic information.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:\\nservice Foo {\\n  rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n}\\nThe JSON representation for Empty is empty JSON object {}.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A request to cancel a job.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:\\nservice Foo {\\n  rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n}\\nThe JSON representation for Empty is empty JSON object {}.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:\\nservice Foo {\\n  rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n}\\nThe JSON representation for Empty is empty JSON object {}.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Optional. The labels to associate with this cluster. Label keys must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). Label values may be empty, but, if present, must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). No more than 32 labels can be associated with a cluster.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The Google Compute Engine metadata entries to add to all instances (see Project and instance metadata (https://cloud.google.com/compute/docs/storing-retrieving-metadata#project_and_instance_metadata)).\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Optional. The properties to set on daemon config files.Property keys are specified in prefix:property format, such as core:fs.defaultFS. The following are supported prefixes and their mappings:\\ncapacity-scheduler: capacity-scheduler.xml\\ncore: core-site.xml\\ndistcp: distcp-default.xml\\nhdfs: hdfs-site.xml\\nhive: hive-site.xml\\nmapred: mapred-site.xml\\npig: pig.properties\\nspark: spark-defaults.conf\\nyarn: yarn-site.xmlFor more information, see Cluster properties.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"format\":\"int64\",\"type\":\"string\"},\"description\":\"The HDFS metrics.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"format\":\"int64\",\"type\":\"string\"},\"description\":\"The YARN metrics.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Optional. The labels to associate with this job. Label keys must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). Label values may be empty, but, if present, must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). No more than 32 labels can be associated with a job.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Optional. A mapping of property names to values, used to configure Hadoop. Properties that conflict with values set by the Cloud Dataproc API may be overwritten. Can include properties set in /etc/hadoop/conf/*-site and classes in user code.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"enum\":[\"LEVEL_UNSPECIFIED\",\"ALL\",\"TRACE\",\"DEBUG\",\"INFO\",\"WARN\",\"ERROR\",\"FATAL\",\"OFF\"],\"type\":\"string\"},\"description\":\"The per-package log levels for the driver. This may include \\\"root\\\" package name to configure rootLogger. Examples:  'com.google = FATAL', 'root = INFO', 'org.apache = DEBUG'\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Optional. A mapping of property names and values, used to configure Hive. Properties that conflict with values set by the Cloud Dataproc API may be overwritten. Can include properties set in /etc/hadoop/conf/*-site.xml, /etc/hive/conf/hive-site.xml, and classes in user code.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Optional. Mapping of query variable names to values (equivalent to the Hive command: SET name=\\\"value\\\";).\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Optional. A mapping of property names to values, used to configure Pig. Properties that conflict with values set by the Cloud Dataproc API may be overwritten. Can include properties set in /etc/hadoop/conf/*-site.xml, /etc/pig/conf/pig.properties, and classes in user code.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Optional. Mapping of query variable names to values (equivalent to the Pig command: name=[value]).\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Optional. A mapping of property names to values, used to configure PySpark. Properties that conflict with values set by the Cloud Dataproc API may be overwritten. Can include properties set in /etc/spark/conf/spark-defaults.conf and classes in user code.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Optional. A mapping of property names to values, used to configure Spark. Properties that conflict with values set by the Cloud Dataproc API may be overwritten. Can include properties set in /etc/spark/conf/spark-defaults.conf and classes in user code.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Optional. A mapping of property names to values, used to configure Spark SQL's SparkConf. Properties that conflict with values set by the Cloud Dataproc API may be overwritten.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Optional. Mapping of query variable names to values (equivalent to the Spark SQL command: SET name=\\\"value\\\";).\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"description\":\"Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"description\":\"The normal response of the operation in case of success. If the original method returns no data on success, such as Delete, the response is google.protobuf.Empty. If the original method is standard Get/Create/Update, the response should be the resource. For other methods, the response should have the type XxxResponse, where Xxx is the original method name. For example, if the original method name is TakeSnapshot(), the inferred response type is TakeSnapshotResponse.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Optional. The labels to associate with this cluster. Label keys must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). Label values may be empty, but, if present, must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). No more than 32 labels can be associated with a cluster.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The Google Compute Engine metadata entries to add to all instances (see Project and instance metadata (https://cloud.google.com/compute/docs/storing-retrieving-metadata#project_and_instance_metadata)).\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Optional. The properties to set on daemon config files.Property keys are specified in prefix:property format, such as core:fs.defaultFS. The following are supported prefixes and their mappings:\\ncapacity-scheduler: capacity-scheduler.xml\\ncore: core-site.xml\\ndistcp: distcp-default.xml\\nhdfs: hdfs-site.xml\\nhive: hive-site.xml\\nmapred: mapred-site.xml\\npig: pig.properties\\nspark: spark-defaults.conf\\nyarn: yarn-site.xmlFor more information, see Cluster properties.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"format\":\"int64\",\"type\":\"string\"},\"description\":\"The HDFS metrics.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"format\":\"int64\",\"type\":\"string\"},\"description\":\"The YARN metrics.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Optional. The labels to associate with this job. Label keys must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). Label values may be empty, but, if present, must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). No more than 32 labels can be associated with a job.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Optional. A mapping of property names to values, used to configure Hadoop. Properties that conflict with values set by the Cloud Dataproc API may be overwritten. Can include properties set in /etc/hadoop/conf/*-site and classes in user code.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"enum\":[\"LEVEL_UNSPECIFIED\",\"ALL\",\"TRACE\",\"DEBUG\",\"INFO\",\"WARN\",\"ERROR\",\"FATAL\",\"OFF\"],\"type\":\"string\"},\"description\":\"The per-package log levels for the driver. This may include \\\"root\\\" package name to configure rootLogger. Examples:  'com.google = FATAL', 'root = INFO', 'org.apache = DEBUG'\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Optional. A mapping of property names and values, used to configure Hive. Properties that conflict with values set by the Cloud Dataproc API may be overwritten. Can include properties set in /etc/hadoop/conf/*-site.xml, /etc/hive/conf/hive-site.xml, and classes in user code.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Optional. Mapping of query variable names to values (equivalent to the Hive command: SET name=\\\"value\\\";).\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Optional. A mapping of property names to values, used to configure Pig. Properties that conflict with values set by the Cloud Dataproc API may be overwritten. Can include properties set in /etc/hadoop/conf/*-site.xml, /etc/pig/conf/pig.properties, and classes in user code.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Optional. Mapping of query variable names to values (equivalent to the Pig command: name=[value]).\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Optional. A mapping of property names to values, used to configure PySpark. Properties that conflict with values set by the Cloud Dataproc API may be overwritten. Can include properties set in /etc/spark/conf/spark-defaults.conf and classes in user code.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Optional. A mapping of property names to values, used to configure Spark. Properties that conflict with values set by the Cloud Dataproc API may be overwritten. Can include properties set in /etc/spark/conf/spark-defaults.conf and classes in user code.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Optional. A mapping of property names to values, used to configure Spark SQL's SparkConf. Properties that conflict with values set by the Cloud Dataproc API may be overwritten.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Optional. Mapping of query variable names to values (equivalent to the Spark SQL command: SET name=\\\"value\\\";).\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 13,
        "numOpsQuery": 5,
        "numOpsMutation": 8,
        "numQueriesCreated": 5,
        "numMutationsCreated": 8
      }
    },
    {
      "name": "Google Cloud Dataproc",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A request to cancel a job.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:\\nservice Foo {\\n  rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n}\\nThe JSON representation for Empty is empty JSON object {}.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:\\nservice Foo {\\n  rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n}\\nThe JSON representation for Empty is empty JSON object {}.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The request message for Operations.CancelOperation.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Optional The labels to associate with this cluster.Label keys must be between 1 and 63 characters long, and must conform to the following PCRE regular expression: \\\\p{Ll}\\\\p{Lo}{0,62}Label values must be between 1 and 63 characters long, and must conform to the following PCRE regular expression: \\\\p{Ll}\\\\p{Lo}\\\\p{N}_-{0,63}No more than 64 labels can be associated with a given cluster.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The Google Compute Engine metadata entries to add to all instances.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Optional The properties to set on daemon configuration files.Property keys are specified in \\\"prefix:property\\\" format, such as \\\"core:fs.defaultFS\\\". The following are supported prefixes and their mappings:  core - core-site.xml  hdfs - hdfs-site.xml  mapred - mapred-site.xml  yarn - yarn-site.xml  hive - hive-site.xml  pig - pig.properties  spark - spark-defaults.conf\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"format\":\"int64\",\"type\":\"string\"},\"description\":\"The HDFS metrics.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"format\":\"int64\",\"type\":\"string\"},\"description\":\"The YARN metrics.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Optional The labels to associate with this job.Label keys must be between 1 and 63 characters long, and must conform to the following regular expression: \\\\p{Ll}\\\\p{Lo}{0,62}Label values must be between 1 and 63 characters long, and must conform to the following regular expression: \\\\p{Ll}\\\\p{Lo}\\\\p{N}_-{0,63}No more than 64 labels can be associated with a given job.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Optional A mapping of property names to values, used to configure Hadoop. Properties that conflict with values set by the Cloud Dataproc API may be overwritten. Can include properties set in /etc/hadoop/conf/*-site and classes in user code.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"enum\":[\"LEVEL_UNSPECIFIED\",\"ALL\",\"TRACE\",\"DEBUG\",\"INFO\",\"WARN\",\"ERROR\",\"FATAL\",\"OFF\"],\"type\":\"string\"},\"description\":\"The per-package log levels for the driver. This may include 'root' package name to configure rootLogger. Examples:  com.google = FATAL, root = INFO, org.apache = DEBUG\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Optional A mapping of property names and values, used to configure Hive. Properties that conflict with values set by the Cloud Dataproc API may be overwritten. Can include properties set in /etc/hadoop/conf/*-site.xml, /etc/hive/conf/hive-site.xml, and classes in user code.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Optional Mapping of query variable names to values (equivalent to the Hive command: 'SET name=\\\"value\\\";').\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Optional A mapping of property names to values, used to configure Pig. Properties that conflict with values set by the Cloud Dataproc API may be overwritten. Can include properties set in /etc/hadoop/conf/*-site.xml, /etc/pig/conf/pig.properties, and classes in user code.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Optional Mapping of query variable names to values (equivalent to the Pig command: \\\"name=value\\\").\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Optional A mapping of property names to values, used to configure PySpark. Properties that conflict with values set by the Cloud Dataproc API may be overwritten. Can include properties set in /etc/spark/conf/spark-defaults.conf and classes in user code.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Optional A mapping of property names to values, used to configure Spark. Properties that conflict with values set by the Cloud Dataproc API may be overwritten. Can include properties set in /etc/spark/conf/spark-defaults.conf and classes in user code.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Optional A mapping of property names to values, used to configure Spark SQL's SparkConf. Properties that conflict with values set by the Cloud Dataproc API may be overwritten.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Optional Mapping of query variable names to values (equivalent to the Spark SQL command: SET name=\\\"value\\\";).\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"description\":\"Service-specific metadata associated with the operation.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"description\":\"The operation response. If the called method returns no data on success, the response is google.protobuf.Empty. If the called method is Get,Create or Update, the response is the resource. For all other methods, the response type is a concatenation of the method name and \\\"Response\\\". For example, if the called method is TakeSnapshot(), the response type is TakeSnapshotResponse.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Optional The labels to associate with this cluster.Label keys must be between 1 and 63 characters long, and must conform to the following PCRE regular expression: \\\\p{Ll}\\\\p{Lo}{0,62}Label values must be between 1 and 63 characters long, and must conform to the following PCRE regular expression: \\\\p{Ll}\\\\p{Lo}\\\\p{N}_-{0,63}No more than 64 labels can be associated with a given cluster.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The Google Compute Engine metadata entries to add to all instances.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Optional The properties to set on daemon configuration files.Property keys are specified in \\\"prefix:property\\\" format, such as \\\"core:fs.defaultFS\\\". The following are supported prefixes and their mappings:  core - core-site.xml  hdfs - hdfs-site.xml  mapred - mapred-site.xml  yarn - yarn-site.xml  hive - hive-site.xml  pig - pig.properties  spark - spark-defaults.conf\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"format\":\"int64\",\"type\":\"string\"},\"description\":\"The HDFS metrics.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"format\":\"int64\",\"type\":\"string\"},\"description\":\"The YARN metrics.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Optional The labels to associate with this job.Label keys must be between 1 and 63 characters long, and must conform to the following regular expression: \\\\p{Ll}\\\\p{Lo}{0,62}Label values must be between 1 and 63 characters long, and must conform to the following regular expression: \\\\p{Ll}\\\\p{Lo}\\\\p{N}_-{0,63}No more than 64 labels can be associated with a given job.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Optional A mapping of property names to values, used to configure Hadoop. Properties that conflict with values set by the Cloud Dataproc API may be overwritten. Can include properties set in /etc/hadoop/conf/*-site and classes in user code.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"enum\":[\"LEVEL_UNSPECIFIED\",\"ALL\",\"TRACE\",\"DEBUG\",\"INFO\",\"WARN\",\"ERROR\",\"FATAL\",\"OFF\"],\"type\":\"string\"},\"description\":\"The per-package log levels for the driver. This may include 'root' package name to configure rootLogger. Examples:  com.google = FATAL, root = INFO, org.apache = DEBUG\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Optional A mapping of property names and values, used to configure Hive. Properties that conflict with values set by the Cloud Dataproc API may be overwritten. Can include properties set in /etc/hadoop/conf/*-site.xml, /etc/hive/conf/hive-site.xml, and classes in user code.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Optional Mapping of query variable names to values (equivalent to the Hive command: 'SET name=\\\"value\\\";').\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Optional A mapping of property names to values, used to configure Pig. Properties that conflict with values set by the Cloud Dataproc API may be overwritten. Can include properties set in /etc/hadoop/conf/*-site.xml, /etc/pig/conf/pig.properties, and classes in user code.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Optional Mapping of query variable names to values (equivalent to the Pig command: \\\"name=value\\\").\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Optional A mapping of property names to values, used to configure PySpark. Properties that conflict with values set by the Cloud Dataproc API may be overwritten. Can include properties set in /etc/spark/conf/spark-defaults.conf and classes in user code.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Optional A mapping of property names to values, used to configure Spark. Properties that conflict with values set by the Cloud Dataproc API may be overwritten. Can include properties set in /etc/spark/conf/spark-defaults.conf and classes in user code.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Optional A mapping of property names to values, used to configure Spark SQL's SparkConf. Properties that conflict with values set by the Cloud Dataproc API may be overwritten.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Optional Mapping of query variable names to values (equivalent to the Spark SQL command: SET name=\\\"value\\\";).\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 12,
        "numOpsQuery": 4,
        "numOpsMutation": 8,
        "numQueriesCreated": 4,
        "numMutationsCreated": 8
      }
    },
    {
      "name": "Google Cloud Dataproc",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A request to collect cluster diagnostic information.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:\\nservice Foo {\\n  rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n}\\nThe JSON representation for Empty is empty JSON object {}.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A request to cancel a job.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:\\nservice Foo {\\n  rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n}\\nThe JSON representation for Empty is empty JSON object {}.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:\\nservice Foo {\\n  rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n}\\nThe JSON representation for Empty is empty JSON object {}.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The request message for Operations.CancelOperation.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Optional The labels to associate with this cluster.Label keys must be between 1 and 63 characters long, and must conform to the following PCRE regular expression: \\\\p{Ll}\\\\p{Lo}{0,62}Label values must be between 1 and 63 characters long, and must conform to the following PCRE regular expression: \\\\p{Ll}\\\\p{Lo}\\\\p{N}_-{0,63}No more than 64 labels can be associated with a given cluster.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The Google Compute Engine metadata entries to add to all instances.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Optional The properties to set on daemon configuration files.Property keys are specified in \\\"prefix:property\\\" format, such as \\\"core:fs.defaultFS\\\". The following are supported prefixes and their mappings:  core - core-site.xml  hdfs - hdfs-site.xml  mapred - mapred-site.xml  yarn - yarn-site.xml  hive - hive-site.xml  pig - pig.properties  spark - spark-defaults.conf\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"format\":\"int64\",\"type\":\"string\"},\"description\":\"The HDFS metrics.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"format\":\"int64\",\"type\":\"string\"},\"description\":\"The YARN metrics.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Optional The labels to associate with this job.Label keys must be between 1 and 63 characters long, and must conform to the following regular expression: \\\\p{Ll}\\\\p{Lo}{0,62}Label values must be between 1 and 63 characters long, and must conform to the following regular expression: \\\\p{Ll}\\\\p{Lo}\\\\p{N}_-{0,63}No more than 64 labels can be associated with a given job.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Optional A mapping of property names to values, used to configure Hadoop. Properties that conflict with values set by the Cloud Dataproc API may be overwritten. Can include properties set in /etc/hadoop/conf/*-site and classes in user code.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"enum\":[\"LEVEL_UNSPECIFIED\",\"ALL\",\"TRACE\",\"DEBUG\",\"INFO\",\"WARN\",\"ERROR\",\"FATAL\",\"OFF\"],\"type\":\"string\"},\"description\":\"The per-package log levels for the driver. This may include \\\"root\\\" package name to configure rootLogger. Examples:  'com.google = FATAL', 'root = INFO', 'org.apache = DEBUG'\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Optional A mapping of property names and values, used to configure Hive. Properties that conflict with values set by the Cloud Dataproc API may be overwritten. Can include properties set in /etc/hadoop/conf/*-site.xml, /etc/hive/conf/hive-site.xml, and classes in user code.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Optional Mapping of query variable names to values (equivalent to the Hive command: SET name=\\\"value\\\";).\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Optional A mapping of property names to values, used to configure Pig. Properties that conflict with values set by the Cloud Dataproc API may be overwritten. Can include properties set in /etc/hadoop/conf/*-site.xml, /etc/pig/conf/pig.properties, and classes in user code.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Optional Mapping of query variable names to values (equivalent to the Pig command: name=[value]).\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Optional A mapping of property names to values, used to configure PySpark. Properties that conflict with values set by the Cloud Dataproc API may be overwritten. Can include properties set in /etc/spark/conf/spark-defaults.conf and classes in user code.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Optional A mapping of property names to values, used to configure Spark. Properties that conflict with values set by the Cloud Dataproc API may be overwritten. Can include properties set in /etc/spark/conf/spark-defaults.conf and classes in user code.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Optional A mapping of property names to values, used to configure Spark SQL's SparkConf. Properties that conflict with values set by the Cloud Dataproc API may be overwritten.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Optional Mapping of query variable names to values (equivalent to the Spark SQL command: SET name=\\\"value\\\";).\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"description\":\"Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"description\":\"The normal response of the operation in case of success. If the original method returns no data on success, such as Delete, the response is google.protobuf.Empty. If the original method is standard Get/Create/Update, the response should be the resource. For other methods, the response should have the type XxxResponse, where Xxx is the original method name. For example, if the original method name is TakeSnapshot(), the inferred response type is TakeSnapshotResponse.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Optional The labels to associate with this cluster.Label keys must be between 1 and 63 characters long, and must conform to the following PCRE regular expression: \\\\p{Ll}\\\\p{Lo}{0,62}Label values must be between 1 and 63 characters long, and must conform to the following PCRE regular expression: \\\\p{Ll}\\\\p{Lo}\\\\p{N}_-{0,63}No more than 64 labels can be associated with a given cluster.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The Google Compute Engine metadata entries to add to all instances.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Optional The properties to set on daemon configuration files.Property keys are specified in \\\"prefix:property\\\" format, such as \\\"core:fs.defaultFS\\\". The following are supported prefixes and their mappings:  core - core-site.xml  hdfs - hdfs-site.xml  mapred - mapred-site.xml  yarn - yarn-site.xml  hive - hive-site.xml  pig - pig.properties  spark - spark-defaults.conf\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"format\":\"int64\",\"type\":\"string\"},\"description\":\"The HDFS metrics.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"format\":\"int64\",\"type\":\"string\"},\"description\":\"The YARN metrics.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Optional The labels to associate with this job.Label keys must be between 1 and 63 characters long, and must conform to the following regular expression: \\\\p{Ll}\\\\p{Lo}{0,62}Label values must be between 1 and 63 characters long, and must conform to the following regular expression: \\\\p{Ll}\\\\p{Lo}\\\\p{N}_-{0,63}No more than 64 labels can be associated with a given job.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Optional A mapping of property names to values, used to configure Hadoop. Properties that conflict with values set by the Cloud Dataproc API may be overwritten. Can include properties set in /etc/hadoop/conf/*-site and classes in user code.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"enum\":[\"LEVEL_UNSPECIFIED\",\"ALL\",\"TRACE\",\"DEBUG\",\"INFO\",\"WARN\",\"ERROR\",\"FATAL\",\"OFF\"],\"type\":\"string\"},\"description\":\"The per-package log levels for the driver. This may include \\\"root\\\" package name to configure rootLogger. Examples:  'com.google = FATAL', 'root = INFO', 'org.apache = DEBUG'\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Optional A mapping of property names and values, used to configure Hive. Properties that conflict with values set by the Cloud Dataproc API may be overwritten. Can include properties set in /etc/hadoop/conf/*-site.xml, /etc/hive/conf/hive-site.xml, and classes in user code.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Optional Mapping of query variable names to values (equivalent to the Hive command: SET name=\\\"value\\\";).\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Optional A mapping of property names to values, used to configure Pig. Properties that conflict with values set by the Cloud Dataproc API may be overwritten. Can include properties set in /etc/hadoop/conf/*-site.xml, /etc/pig/conf/pig.properties, and classes in user code.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Optional Mapping of query variable names to values (equivalent to the Pig command: name=[value]).\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Optional A mapping of property names to values, used to configure PySpark. Properties that conflict with values set by the Cloud Dataproc API may be overwritten. Can include properties set in /etc/spark/conf/spark-defaults.conf and classes in user code.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Optional A mapping of property names to values, used to configure Spark. Properties that conflict with values set by the Cloud Dataproc API may be overwritten. Can include properties set in /etc/spark/conf/spark-defaults.conf and classes in user code.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Optional A mapping of property names to values, used to configure Spark SQL's SparkConf. Properties that conflict with values set by the Cloud Dataproc API may be overwritten.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Optional Mapping of query variable names to values (equivalent to the Spark SQL command: SET name=\\\"value\\\";).\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 13,
        "numOpsQuery": 5,
        "numOpsMutation": 8,
        "numQueriesCreated": 5,
        "numMutationsCreated": 8
      }
    },
    {
      "name": "Google Cloud Dataproc",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A request to collect cluster diagnostic information.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:\\nservice Foo {\\n  rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n}\\nThe JSON representation for Empty is empty JSON object {}.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A request to cancel a job.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:\\nservice Foo {\\n  rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n}\\nThe JSON representation for Empty is empty JSON object {}.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:\\nservice Foo {\\n  rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n}\\nThe JSON representation for Empty is empty JSON object {}.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Optional. The labels to associate with this cluster. Label keys must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). Label values may be empty, but, if present, must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). No more than 32 labels can be associated with a cluster.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The Google Compute Engine metadata entries to add to all instances (see Project and instance metadata (https://cloud.google.com/compute/docs/storing-retrieving-metadata#project_and_instance_metadata)).\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Optional. The properties to set on daemon config files.Property keys are specified in prefix:property format, such as core:fs.defaultFS. The following are supported prefixes and their mappings:\\ncapacity-scheduler: capacity-scheduler.xml\\ncore: core-site.xml\\ndistcp: distcp-default.xml\\nhdfs: hdfs-site.xml\\nhive: hive-site.xml\\nmapred: mapred-site.xml\\npig: pig.properties\\nspark: spark-defaults.conf\\nyarn: yarn-site.xmlFor more information, see Cluster properties.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"format\":\"int64\",\"type\":\"string\"},\"description\":\"The HDFS metrics.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"format\":\"int64\",\"type\":\"string\"},\"description\":\"The YARN metrics.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Optional. The labels to associate with this job. Label keys must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). Label values may be empty, but, if present, must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). No more than 32 labels can be associated with a job.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Optional. A mapping of property names to values, used to configure Hadoop. Properties that conflict with values set by the Cloud Dataproc API may be overwritten. Can include properties set in /etc/hadoop/conf/*-site and classes in user code.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"enum\":[\"LEVEL_UNSPECIFIED\",\"ALL\",\"TRACE\",\"DEBUG\",\"INFO\",\"WARN\",\"ERROR\",\"FATAL\",\"OFF\"],\"type\":\"string\"},\"description\":\"The per-package log levels for the driver. This may include \\\"root\\\" package name to configure rootLogger. Examples:  'com.google = FATAL', 'root = INFO', 'org.apache = DEBUG'\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Optional. A mapping of property names and values, used to configure Hive. Properties that conflict with values set by the Cloud Dataproc API may be overwritten. Can include properties set in /etc/hadoop/conf/*-site.xml, /etc/hive/conf/hive-site.xml, and classes in user code.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Optional. Mapping of query variable names to values (equivalent to the Hive command: SET name=\\\"value\\\";).\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Optional. A mapping of property names to values, used to configure Pig. Properties that conflict with values set by the Cloud Dataproc API may be overwritten. Can include properties set in /etc/hadoop/conf/*-site.xml, /etc/pig/conf/pig.properties, and classes in user code.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Optional. Mapping of query variable names to values (equivalent to the Pig command: name=[value]).\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Optional. A mapping of property names to values, used to configure PySpark. Properties that conflict with values set by the Cloud Dataproc API may be overwritten. Can include properties set in /etc/spark/conf/spark-defaults.conf and classes in user code.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Optional. A mapping of property names to values, used to configure Spark. Properties that conflict with values set by the Cloud Dataproc API may be overwritten. Can include properties set in /etc/spark/conf/spark-defaults.conf and classes in user code.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Optional. A mapping of property names to values, used to configure Spark SQL's SparkConf. Properties that conflict with values set by the Cloud Dataproc API may be overwritten.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Optional. Mapping of query variable names to values (equivalent to the Spark SQL command: SET name=\\\"value\\\";).\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Optional. The labels to associate with this template. These labels will be propagated to all jobs and clusters created by the workflow instance.Label keys must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt).Label values may be empty, but, if present, must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt).No more than 32 labels can be associated with a template.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Optional. The labels to associate with this job.Label keys must be between 1 and 63 characters long, and must conform to the following regular expression: \\\\p{Ll}\\\\p{Lo}{0,62}Label values must be between 1 and 63 characters long, and must conform to the following regular expression: \\\\p{Ll}\\\\p{Lo}\\\\p{N}_-{0,63}No more than 64 labels can be associated with a given job.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Required. The cluster labels. Cluster must have all labels to match.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Optional. The labels to associate with this cluster.Label keys must be between 1 and 63 characters long, and must conform to the following PCRE regular expression: \\\\p{Ll}\\\\p{Lo}{0,62}Label values must be between 1 and 63 characters long, and must conform to the following PCRE regular expression: \\\\p{Ll}\\\\p{Lo}\\\\p{N}_-{0,63}No more than 64 labels can be associated with a given cluster.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Optional. The labels to associate with this cluster. Label keys must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). Label values may be empty, but, if present, must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). No more than 32 labels can be associated with a cluster.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The Google Compute Engine metadata entries to add to all instances (see Project and instance metadata (https://cloud.google.com/compute/docs/storing-retrieving-metadata#project_and_instance_metadata)).\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Optional. The properties to set on daemon config files.Property keys are specified in prefix:property format, such as core:fs.defaultFS. The following are supported prefixes and their mappings:\\ncapacity-scheduler: capacity-scheduler.xml\\ncore: core-site.xml\\ndistcp: distcp-default.xml\\nhdfs: hdfs-site.xml\\nhive: hive-site.xml\\nmapred: mapred-site.xml\\npig: pig.properties\\nspark: spark-defaults.conf\\nyarn: yarn-site.xmlFor more information, see Cluster properties.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"format\":\"int64\",\"type\":\"string\"},\"description\":\"The HDFS metrics.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"format\":\"int64\",\"type\":\"string\"},\"description\":\"The YARN metrics.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"description\":\"Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"description\":\"The normal response of the operation in case of success. If the original method returns no data on success, such as Delete, the response is google.protobuf.Empty. If the original method is standard Get/Create/Update, the response should be the resource. For other methods, the response should have the type XxxResponse, where Xxx is the original method name. For example, if the original method name is TakeSnapshot(), the inferred response type is TakeSnapshotResponse.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Optional. The labels to associate with this job. Label keys must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). Label values may be empty, but, if present, must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). No more than 32 labels can be associated with a job.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Optional. A mapping of property names to values, used to configure Hadoop. Properties that conflict with values set by the Cloud Dataproc API may be overwritten. Can include properties set in /etc/hadoop/conf/*-site and classes in user code.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"enum\":[\"LEVEL_UNSPECIFIED\",\"ALL\",\"TRACE\",\"DEBUG\",\"INFO\",\"WARN\",\"ERROR\",\"FATAL\",\"OFF\"],\"type\":\"string\"},\"description\":\"The per-package log levels for the driver. This may include \\\"root\\\" package name to configure rootLogger. Examples:  'com.google = FATAL', 'root = INFO', 'org.apache = DEBUG'\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Optional. A mapping of property names and values, used to configure Hive. Properties that conflict with values set by the Cloud Dataproc API may be overwritten. Can include properties set in /etc/hadoop/conf/*-site.xml, /etc/hive/conf/hive-site.xml, and classes in user code.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Optional. Mapping of query variable names to values (equivalent to the Hive command: SET name=\\\"value\\\";).\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Optional. A mapping of property names to values, used to configure Pig. Properties that conflict with values set by the Cloud Dataproc API may be overwritten. Can include properties set in /etc/hadoop/conf/*-site.xml, /etc/pig/conf/pig.properties, and classes in user code.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Optional. Mapping of query variable names to values (equivalent to the Pig command: name=[value]).\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Optional. A mapping of property names to values, used to configure PySpark. Properties that conflict with values set by the Cloud Dataproc API may be overwritten. Can include properties set in /etc/spark/conf/spark-defaults.conf and classes in user code.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Optional. A mapping of property names to values, used to configure Spark. Properties that conflict with values set by the Cloud Dataproc API may be overwritten. Can include properties set in /etc/spark/conf/spark-defaults.conf and classes in user code.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Optional. A mapping of property names to values, used to configure Spark SQL's SparkConf. Properties that conflict with values set by the Cloud Dataproc API may be overwritten.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Optional. Mapping of query variable names to values (equivalent to the Spark SQL command: SET name=\\\"value\\\";).\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Optional. The labels to associate with this template. These labels will be propagated to all jobs and clusters created by the workflow instance.Label keys must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt).Label values may be empty, but, if present, must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt).No more than 32 labels can be associated with a template.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Optional. The labels to associate with this job.Label keys must be between 1 and 63 characters long, and must conform to the following regular expression: \\\\p{Ll}\\\\p{Lo}{0,62}Label values must be between 1 and 63 characters long, and must conform to the following regular expression: \\\\p{Ll}\\\\p{Lo}\\\\p{N}_-{0,63}No more than 64 labels can be associated with a given job.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Required. The cluster labels. Cluster must have all labels to match.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Optional. The labels to associate with this cluster.Label keys must be between 1 and 63 characters long, and must conform to the following PCRE regular expression: \\\\p{Ll}\\\\p{Lo}{0,62}Label values must be between 1 and 63 characters long, and must conform to the following PCRE regular expression: \\\\p{Ll}\\\\p{Lo}\\\\p{N}_-{0,63}No more than 64 labels can be associated with a given cluster.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 20,
        "numOpsQuery": 7,
        "numOpsMutation": 13,
        "numQueriesCreated": 7,
        "numMutationsCreated": 13
      }
    },
    {
      "name": "Google Cloud Datastore",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The response for Datastore.ReserveIds.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The response for Datastore.Rollback.\\n(an empty message).\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated\\nempty messages in your APIs. A typical example is to use it as the request\\nor the response type of an API method. For instance:\\n\\n    service Foo {\\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n    }\\n\\nThe JSON representation for `Empty` is empty JSON object `{}`.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated\\nempty messages in your APIs. A typical example is to use it as the request\\nor the response type of an API method. For instance:\\n\\n    service Foo {\\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n    }\\n\\nThe JSON representation for `Empty` is empty JSON object `{}`.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"description\":\"Service-specific metadata associated with the operation.  It typically\\ncontains progress information and common metadata such as create time.\\nSome services might not provide such metadata.  Any method that returns a\\nlong-running operation should document the metadata type, if any.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"description\":\"The normal response of the operation in case of success.  If the original\\nmethod returns no data on success, such as `Delete`, the response is\\n`google.protobuf.Empty`.  If the original method is standard\\n`Get`/`Create`/`Update`, the response should be the resource.  For other\\nmethods, the response should have the type `XxxResponse`, where `Xxx`\\nis the original method name.  For example, if the original method name\\nis `TakeSnapshot()`, the inferred response type is\\n`TakeSnapshotResponse`.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Options specific to read-only transactions.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/Value\"},\"description\":\"The entity's properties.\\nThe map's keys are property names.\\nA property name matching regex `__.*__` is reserved.\\nA reserved property name is forbidden in certain documented contexts.\\nThe name must not contain more than 500 characters.\\nThe name cannot be `\\\"\\\"`.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/Value\"},\"description\":\"The entity's properties.\\nThe map's keys are property names.\\nA property name matching regex `__.*__` is reserved.\\nA reserved property name is forbidden in certain documented contexts.\\nThe name must not contain more than 500 characters.\\nThe name cannot be `\\\"\\\"`.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/GqlQueryParameter\"},\"description\":\"For each non-reserved named binding site in the query string, there must be\\na named parameter with that name, but not necessarily the inverse.\\n\\nKey must match regex `A-Za-z_$*`, must not match regex\\n`__.*__`, and must not be `\\\"\\\"`.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 11,
        "numOpsQuery": 2,
        "numOpsMutation": 9,
        "numQueriesCreated": 2,
        "numMutationsCreated": 9
      }
    },
    {
      "name": "Google Cloud Datastore",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Client-assigned labels.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"description\":\"Service-specific metadata associated with the operation.  It typically\\ncontains progress information and common metadata such as create time.\\nSome services might not provide such metadata.  Any method that returns a\\nlong-running operation should document the metadata type, if any.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"description\":\"The normal response of the operation in case of success.  If the original\\nmethod returns no data on success, such as `Delete`, the response is\\n`google.protobuf.Empty`.  If the original method is standard\\n`Get`/`Create`/`Update`, the response should be the resource.  For other\\nmethods, the response should have the type `XxxResponse`, where `Xxx`\\nis the original method name.  For example, if the original method name\\nis `TakeSnapshot()`, the inferred response type is\\n`TakeSnapshotResponse`.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Client-assigned labels.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 2,
        "numOpsQuery": 0,
        "numOpsMutation": 2,
        "numQueriesCreated": 0,
        "numMutationsCreated": 2
      }
    },
    {
      "name": "Google Cloud Datastore",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The response for Datastore.ReserveIds.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The response for Datastore.Rollback.\\n(an empty message).\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Options specific to read-only transactions.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/Value\"},\"description\":\"The entity's properties.\\nThe map's keys are property names.\\nA property name matching regex `__.*__` is reserved.\\nA reserved property name is forbidden in certain documented contexts.\\nThe name must not contain more than 500 characters.\\nThe name cannot be `\\\"\\\"`.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/Value\"},\"description\":\"The entity's properties.\\nThe map's keys are property names.\\nA property name matching regex `__.*__` is reserved.\\nA reserved property name is forbidden in certain documented contexts.\\nThe name must not contain more than 500 characters.\\nThe name cannot be `\\\"\\\"`.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/GqlQueryParameter\"},\"description\":\"For each non-reserved named binding site in the query string, there must be\\na named parameter with that name, but not necessarily the inverse.\\n\\nKey must match regex `A-Za-z_$*`, must not match regex\\n`__.*__`, and must not be `\\\"\\\"`.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 7,
        "numOpsQuery": 0,
        "numOpsMutation": 7,
        "numQueriesCreated": 0,
        "numMutationsCreated": 7
      }
    },
    {
      "name": "Google Cloud Deployment Manager Alpha",
      "report": {
        "warnings": [],
        "numOps": 33,
        "numOpsQuery": 17,
        "numOpsMutation": 16,
        "numQueriesCreated": 17,
        "numMutationsCreated": 16
      }
    },
    {
      "name": "Google Cloud Deployment Manager",
      "report": {
        "warnings": [],
        "numOps": 17,
        "numOpsQuery": 10,
        "numOpsMutation": 7,
        "numQueriesCreated": 10,
        "numMutationsCreated": 7
      }
    },
    {
      "name": "Google Cloud Deployment Manager API V2Beta Methods",
      "report": {
        "warnings": [],
        "numOps": 29,
        "numOpsQuery": 16,
        "numOpsMutation": 13,
        "numQueriesCreated": 16,
        "numMutationsCreated": 13
      }
    },
    {
      "name": "DCM/DFA Reporting And Trafficking",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /userprofiles/{profileId}/advertiserGroups/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /userprofiles/{profileId}/campaigns/{campaignId}/landingPages/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /userprofiles/{profileId}/contentCategories/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /userprofiles/{profileId}/creativeFields/{creativeFieldId}/creativeFieldValues/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /userprofiles/{profileId}/creativeFields/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /userprofiles/{profileId}/dynamicTargetingKeys/{objectId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /userprofiles/{profileId}/eventTags/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /userprofiles/{profileId}/floodlightActivities/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /userprofiles/{profileId}/placementStrategies/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /userprofiles/{profileId}/reports/{reportId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /userprofiles/{profileId}/userRoles/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 178,
        "numOpsQuery": 107,
        "numOpsMutation": 71,
        "numQueriesCreated": 107,
        "numMutationsCreated": 60
      }
    },
    {
      "name": "DCM/DFA Reporting And Trafficking",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /userprofiles/{profileId}/advertiserGroups/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /userprofiles/{profileId}/campaigns/{campaignId}/landingPages/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /userprofiles/{profileId}/contentCategories/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /userprofiles/{profileId}/creativeFields/{creativeFieldId}/creativeFieldValues/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /userprofiles/{profileId}/creativeFields/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /userprofiles/{profileId}/dynamicTargetingKeys/{objectId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /userprofiles/{profileId}/eventTags/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /userprofiles/{profileId}/floodlightActivities/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /userprofiles/{profileId}/placementStrategies/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /userprofiles/{profileId}/reports/{reportId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /userprofiles/{profileId}/userRoles/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 179,
        "numOpsQuery": 107,
        "numOpsMutation": 72,
        "numQueriesCreated": 107,
        "numMutationsCreated": 61
      }
    },
    {
      "name": "DCM/DFA Reporting And Trafficking",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /userprofiles/{profileId}/advertiserGroups/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /userprofiles/{profileId}/contentCategories/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /userprofiles/{profileId}/creativeFields/{creativeFieldId}/creativeFieldValues/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /userprofiles/{profileId}/creativeFields/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /userprofiles/{profileId}/dynamicTargetingKeys/{objectId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /userprofiles/{profileId}/eventTags/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /userprofiles/{profileId}/floodlightActivities/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /userprofiles/{profileId}/placementStrategies/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /userprofiles/{profileId}/reports/{reportId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /userprofiles/{profileId}/userRoles/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 178,
        "numOpsQuery": 107,
        "numOpsMutation": 71,
        "numQueriesCreated": 107,
        "numMutationsCreated": 61
      }
    },
    {
      "name": "APIs Discovery Service",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/RestMethod\"},\"description\":\"API-level methods for this API.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/JsonSchema\"},\"description\":\"Common parameters that apply across all apis.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/RestResource\"},\"description\":\"The resources in this API.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/JsonSchema\"},\"description\":\"The schemas for this API.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"The scope value.\",\"properties\":{\"description\":{\"description\":\"Description of scope.\",\"type\":\"string\"}},\"type\":\"object\"},\"description\":\"Available OAuth 2.0 scopes.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 2,
        "numOpsQuery": 2,
        "numOpsMutation": 0,
        "numQueriesCreated": 2,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "DLP",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated\\nempty messages in your APIs. A typical example is to use it as the request\\nor the response type of an API method. For instance:\\n\\n    service Foo {\\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n    }\\n\\nThe JSON representation for `Empty` is empty JSON object `{}`.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated\\nempty messages in your APIs. A typical example is to use it as the request\\nor the response type of an API method. For instance:\\n\\n    service Foo {\\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n    }\\n\\nThe JSON representation for `Empty` is empty JSON object `{}`.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The request message for Operations.CancelOperation.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"description\":\"This field will contain an InspectOperationMetadata object for `inspect.operations.create` or a RiskAnalysisOperationMetadata object for `dataSource.analyze`.  This will always be returned with the Operation.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"description\":\"This field will contain an InspectOperationResult object for `inspect.operations.create` or a RiskAnalysisOperationResult object for `dataSource.analyze`.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Redact a given value. For example, if used with an `InfoTypeTransformation`\\ntransforming PHONE_NUMBER, and input 'My phone number is 206-555-0123', the\\noutput would be 'My phone number is '.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Replace each matching finding with the name of the info_type.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Message for detecting output from deidentification transformations\\nsuch as\\n[`CryptoReplaceFfxFpeConfig`](/dlp/docs/reference/rest/v2beta1/content/deidentify#CryptoReplaceFfxFpeConfig).\\nThese types of transformations are\\nthose that perform pseudonymization, thereby producing a \\\"surrogate\\\" as\\noutput. This should be used in conjunction with a field on the\\ntransformation such as `surrogate_info_type`. This custom info type does\\nnot support the use of `detection_rules`.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Redact a given value. For example, if used with an `InfoTypeTransformation`\\ntransforming PHONE_NUMBER, and input 'My phone number is 206-555-0123', the\\noutput would be 'My phone number is '.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Replace each matching finding with the name of the info_type.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated\\nempty messages in your APIs. A typical example is to use it as the request\\nor the response type of an API method. For instance:\\n\\n    service Foo {\\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n    }\\n\\nThe JSON representation for `Empty` is empty JSON object `{}`.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 11,
        "numOpsQuery": 4,
        "numOpsMutation": 7,
        "numQueriesCreated": 4,
        "numMutationsCreated": 7
      }
    },
    {
      "name": "Google Cloud DNS",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /{project}/managedZones/{managedZone}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 9,
        "numOpsQuery": 6,
        "numOpsMutation": 3,
        "numQueriesCreated": 6,
        "numMutationsCreated": 2
      }
    },
    {
      "name": "Google Cloud DNS",
      "report": {
        "warnings": [],
        "numOps": 14,
        "numOpsQuery": 10,
        "numOpsMutation": 4,
        "numQueriesCreated": 10,
        "numMutationsCreated": 4
      }
    },
    {
      "name": "Google Cloud DNS",
      "report": {
        "warnings": [],
        "numOps": 14,
        "numOpsQuery": 10,
        "numOpsMutation": 4,
        "numQueriesCreated": 10,
        "numMutationsCreated": 4
      }
    },
    {
      "name": "DoubleClick Bid Manager",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /query/{queryId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /query/{queryId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 9,
        "numOpsQuery": 3,
        "numOpsMutation": 6,
        "numQueriesCreated": 3,
        "numMutationsCreated": 4
      }
    },
    {
      "name": "DoubleClick Search",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /reports/{reportId}/files/{reportFragment}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Indicates the columns that are represented in this row. That is, each key corresponds to a column with a non-empty cell in this row.\"},\"description\":\"A row in a DoubleClick Search report.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 9,
        "numOpsQuery": 4,
        "numOpsMutation": 5,
        "numQueriesCreated": 3,
        "numMutationsCreated": 5
      }
    },
    {
      "name": "Drive",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /channels/stop' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /files/trash' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /files/{fileId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /files/{fileId}/comments/{commentId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /files/{fileId}/comments/{commentId}/replies/{replyId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /files/{fileId}/export' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /files/{fileId}/parents/{parentId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /files/{fileId}/permissions/{permissionId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /files/{fileId}/properties/{propertyKey}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /files/{fileId}/realtime' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /files/{fileId}/realtime' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /files/{fileId}/revisions/{revisionId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /files/{folderId}/children/{childId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /teamdrives/{teamDriveId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"A mapping from export format to URL\",\"type\":\"string\"},\"description\":\"Links for exporting Google Docs to specific formats.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"A map of the id of each of the user's apps to a link to open this file with that app. Only populated when the drive.apps.readonly scope is used.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"A mapping from export format to URL\",\"type\":\"string\"},\"description\":\"Links for exporting Google Docs to specific formats.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Declares a new parameter by name.\",\"type\":\"string\"},\"description\":\"Additional parameters controlling delivery channel behavior. Optional.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Declares a new parameter by name.\",\"type\":\"string\"},\"description\":\"Additional parameters controlling delivery channel behavior. Optional.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"A mapping from export format to URL\",\"type\":\"string\"},\"description\":\"Links for exporting Google Docs to specific formats.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"A map of the id of each of the user's apps to a link to open this file with that app. Only populated when the drive.apps.readonly scope is used.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"A mapping from export format to URL\",\"type\":\"string\"},\"description\":\"Links for exporting Google Docs to specific formats.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 61,
        "numOpsQuery": 28,
        "numOpsMutation": 33,
        "numQueriesCreated": 26,
        "numMutationsCreated": 21
      }
    },
    {
      "name": "Drive",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /channels/stop' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /files/trash' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /files/{fileId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /files/{fileId}/comments/{commentId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /files/{fileId}/comments/{commentId}/replies/{replyId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /files/{fileId}/export' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /files/{fileId}/permissions/{permissionId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /files/{fileId}/revisions/{revisionId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /teamdrives/{teamDriveId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"description\":\"A map of source MIME type to possible targets for all supported exports.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"description\":\"A map of source MIME type to possible targets for all supported imports.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"format\":\"int64\",\"type\":\"string\"},\"description\":\"A map of maximum import sizes by MIME type, in bytes.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"A collection of arbitrary key-value pairs which are private to the requesting app.\\nEntries with null values are cleared in update and copy requests.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"A collection of arbitrary key-value pairs which are visible to all apps.\\nEntries with null values are cleared in update and copy requests.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Declares a new parameter by name.\",\"type\":\"string\"},\"description\":\"Additional parameters controlling delivery channel behavior. Optional.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Declares a new parameter by name.\",\"type\":\"string\"},\"description\":\"Additional parameters controlling delivery channel behavior. Optional.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"A collection of arbitrary key-value pairs which are private to the requesting app.\\nEntries with null values are cleared in update and copy requests.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"A collection of arbitrary key-value pairs which are visible to all apps.\\nEntries with null values are cleared in update and copy requests.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 33,
        "numOpsQuery": 17,
        "numOpsMutation": 16,
        "numQueriesCreated": 16,
        "numMutationsCreated": 8
      }
    },
    {
      "name": "Firebase Dynamic Links",
      "report": {
        "warnings": [],
        "numOps": 3,
        "numOpsQuery": 1,
        "numOpsMutation": 2,
        "numQueriesCreated": 1,
        "numMutationsCreated": 2
      }
    },
    {
      "name": "Firebase Remote Config",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/RemoteConfigParameter\"},\"description\":\"Map of parameter keys to their optional default values and optional submap\\nof (condition name : value). Order doesn't affect semantics, and so is\\nsorted by the server. The 'key' values of the params must be unique.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/RemoteConfigParameter\"},\"description\":\"Map of parameter keys to their optional default values and optional submap\\nof (condition name : value). Order doesn't affect semantics, and so is\\nsorted by the server. The 'key' values of the params must be unique.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 2,
        "numOpsQuery": 1,
        "numOpsMutation": 1,
        "numQueriesCreated": 1,
        "numMutationsCreated": 1
      }
    },
    {
      "name": "Firebase Rules",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated\\nempty messages in your APIs. A typical example is to use it as the request\\nor the response type of an API method. For instance:\\n\\n    service Foo {\\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n    }\\n\\nThe JSON representation for `Empty` is empty JSON object `{}`.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Request context.\\n\\nThe exact format of the request context is service-dependent. See the\\nappropriate service documentation for information about the supported\\nfields and types on the request. Minimally, all services support the\\nfollowing fields and types:\\n\\nRequest field  | Type\\n---------------|-----------------\\nauth.uid       | `string`\\nauth.token     | `map<string, string>`\\nheaders        | `map<string, string>`\\nmethod         | `string`\\nparams         | `map<string, string>`\\npath           | `string`\\ntime           | `google.protobuf.Timestamp`\\n\\nIf the request value is not well-formed for the service, the request will\\nbe rejected as an invalid argument.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Optional resource value as it appears in persistent storage before the\\nrequest is fulfilled.\\n\\nThe resource type depends on the `request.path` value.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated\\nempty messages in your APIs. A typical example is to use it as the request\\nor the response type of an API method. For instance:\\n\\n    service Foo {\\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n    }\\n\\nThe JSON representation for `Empty` is empty JSON object `{}`.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Argument exactly matches value provided.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated\\nempty messages in your APIs. A typical example is to use it as the request\\nor the response type of an API method. For instance:\\n\\n    service Foo {\\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n    }\\n\\nThe JSON representation for `Empty` is empty JSON object `{}`.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The result is an actual value. The type of the value must match that\\nof the type declared by the service.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 9,
        "numOpsQuery": 4,
        "numOpsMutation": 5,
        "numQueriesCreated": 4,
        "numMutationsCreated": 5
      }
    },
    {
      "name": "Fitness",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /{userId}/dataSources/{dataSourceId}/datasets/{datasetId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /{userId}/sessions/{sessionId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 12,
        "numOpsQuery": 5,
        "numOpsMutation": 7,
        "numQueriesCreated": 5,
        "numMutationsCreated": 5
      }
    },
    {
      "name": "Fusion Tables",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /tables/{tableId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /tables/{tableId}/columns/{columnId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /tables/{tableId}/styles/{styleId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /tables/{tableId}/tasks/{taskId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /tables/{tableId}/templates/{templateId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 28,
        "numOpsQuery": 11,
        "numOpsMutation": 17,
        "numQueriesCreated": 11,
        "numMutationsCreated": 12
      }
    },
    {
      "name": "Fusion Tables",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /tables/{tableId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /tables/{tableId}/columns/{columnId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /tables/{tableId}/styles/{styleId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /tables/{tableId}/tasks/{taskId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /tables/{tableId}/templates/{templateId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 30,
        "numOpsQuery": 11,
        "numOpsMutation": 19,
        "numQueriesCreated": 11,
        "numMutationsCreated": 14
      }
    },
    {
      "name": "Google Play Game Services",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /applications/played' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /pushtokens' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /pushtokens/remove' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /quests/{questId}/milestones/{milestoneId}/claim' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /rooms/{roomId}/dismiss' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /turnbasedmatches/{matchId}/cancel' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /turnbasedmatches/{matchId}/dismiss' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 53,
        "numOpsQuery": 24,
        "numOpsMutation": 29,
        "numQueriesCreated": 24,
        "numMutationsCreated": 22
      }
    },
    {
      "name": "Google Play Game Services Publishing",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /achievements/{achievementId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /leaderboards/{leaderboardId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 11,
        "numOpsQuery": 4,
        "numOpsMutation": 7,
        "numQueriesCreated": 4,
        "numMutationsCreated": 5
      }
    },
    {
      "name": "Google Play Game Services Management",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /achievements/resetAllForAllPlayers' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /achievements/resetMultipleForAllPlayers' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /achievements/{achievementId}/resetForAllPlayers' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /applications/{applicationId}/players/hidden/{playerId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /applications/{applicationId}/players/hidden/{playerId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /events/reset' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /events/resetAllForAllPlayers' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /events/resetMultipleForAllPlayers' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /events/{eventId}/reset' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /events/{eventId}/resetForAllPlayers' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /leaderboards/{leaderboardId}/scores/resetForAllPlayers' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /quests/reset' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /quests/resetAllForAllPlayers' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /quests/resetMultipleForAllPlayers' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /quests/{questId}/reset' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /quests/{questId}/resetForAllPlayers' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /rooms/reset' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /rooms/resetForAllPlayers' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /scores/resetAllForAllPlayers' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /scores/resetMultipleForAllPlayers' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /turnbasedmatches/reset' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /turnbasedmatches/resetForAllPlayers' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 27,
        "numOpsQuery": 1,
        "numOpsMutation": 26,
        "numQueriesCreated": 1,
        "numMutationsCreated": 4
      }
    },
    {
      "name": "Genomics",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated\\nempty messages in your APIs. A typical example is to use it as the request\\nor the response type of an API method. For instance:\\n\\n    service Foo {\\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n    }\\n\\nThe JSON representation for `Empty` is empty JSON object `{}`.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated\\nempty messages in your APIs. A typical example is to use it as the request\\nor the response type of an API method. For instance:\\n\\n    service Foo {\\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n    }\\n\\nThe JSON representation for `Empty` is empty JSON object `{}`.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated\\nempty messages in your APIs. A typical example is to use it as the request\\nor the response type of an API method. For instance:\\n\\n    service Foo {\\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n    }\\n\\nThe JSON representation for `Empty` is empty JSON object `{}`.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated\\nempty messages in your APIs. A typical example is to use it as the request\\nor the response type of an API method. For instance:\\n\\n    service Foo {\\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n    }\\n\\nThe JSON representation for `Empty` is empty JSON object `{}`.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated\\nempty messages in your APIs. A typical example is to use it as the request\\nor the response type of an API method. For instance:\\n\\n    service Foo {\\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n    }\\n\\nThe JSON representation for `Empty` is empty JSON object `{}`.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated\\nempty messages in your APIs. A typical example is to use it as the request\\nor the response type of an API method. For instance:\\n\\n    service Foo {\\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n    }\\n\\nThe JSON representation for `Empty` is empty JSON object `{}`.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated\\nempty messages in your APIs. A typical example is to use it as the request\\nor the response type of an API method. For instance:\\n\\n    service Foo {\\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n    }\\n\\nThe JSON representation for `Empty` is empty JSON object `{}`.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated\\nempty messages in your APIs. A typical example is to use it as the request\\nor the response type of an API method. For instance:\\n\\n    service Foo {\\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n    }\\n\\nThe JSON representation for `Empty` is empty JSON object `{}`.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated\\nempty messages in your APIs. A typical example is to use it as the request\\nor the response type of an API method. For instance:\\n\\n    service Foo {\\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n    }\\n\\nThe JSON representation for `Empty` is empty JSON object `{}`.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The request message for Operations.CancelOperation.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Request message for `GetIamPolicy` method.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"items\":{},\"type\":\"array\"},\"description\":\"A map of additional read alignment information. This must be of the form\\nmap<string, string[]> (string key mapping to a list of string values).\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"items\":{},\"type\":\"array\"},\"description\":\"A map of additional read alignment information. This must be of the form\\nmap<string, string[]> (string key mapping to a list of string values).\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"items\":{},\"type\":\"array\"},\"description\":\"A map of additional call set information. This must be of the form\\nmap<string, string[]> (string key mapping to a list of string values).\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"items\":{},\"type\":\"array\"},\"description\":\"A map of additional read group set information.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"items\":{},\"type\":\"array\"},\"description\":\"A map of additional read group information. This must be of the form\\nmap<string, string[]> (string key mapping to a list of string values).\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"items\":{},\"type\":\"array\"},\"description\":\"A map of additional variant information. This must be of the form\\nmap<string, string[]> (string key mapping to a list of string values).\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"items\":{},\"type\":\"array\"},\"description\":\"A map of additional variant call information. This must be of the form\\nmap<string, string[]> (string key mapping to a list of string values).\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"items\":{},\"type\":\"array\"},\"description\":\"Remaining structured metadata key-value pairs. This must be of the form\\nmap<string, string[]> (string key mapping to a list of string values).\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"description\":\"An OperationMetadata object. This will always be returned with the Operation.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"description\":\"If importing ReadGroupSets, an ImportReadGroupSetsResponse is returned. If importing Variants, an ImportVariantsResponse is returned. For pipelines and exports, an Empty response is returned.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"items\":{},\"type\":\"array\"},\"description\":\"A map of additional read alignment information. This must be of the form\\nmap<string, string[]> (string key mapping to a list of string values).\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"items\":{},\"type\":\"array\"},\"description\":\"A map of additional read alignment information. This must be of the form\\nmap<string, string[]> (string key mapping to a list of string values).\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"items\":{},\"type\":\"array\"},\"description\":\"A map of additional call set information. This must be of the form\\nmap<string, string[]> (string key mapping to a list of string values).\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"items\":{},\"type\":\"array\"},\"description\":\"A map of additional read alignment information. This must be of the form\\nmap<string, string[]> (string key mapping to a list of string values).\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"items\":{},\"type\":\"array\"},\"description\":\"A map of additional variant information. This must be of the form\\nmap<string, string[]> (string key mapping to a list of string values).\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"items\":{},\"type\":\"array\"},\"description\":\"A map of additional variant call information. This must be of the form\\nmap<string, string[]> (string key mapping to a list of string values).\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"enum\":[\"INFO_MERGE_OPERATION_UNSPECIFIED\",\"IGNORE_NEW\",\"MOVE_TO_CALLS\"],\"type\":\"string\"},\"description\":\"A mapping between info field keys and the InfoMergeOperations to\\nbe performed on them. This is plumbed down to the MergeVariantRequests\\ngenerated by the resulting import job.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"enum\":[\"INFO_MERGE_OPERATION_UNSPECIFIED\",\"IGNORE_NEW\",\"MOVE_TO_CALLS\"],\"type\":\"string\"},\"description\":\"A mapping between info field keys and the InfoMergeOperations to\\nbe performed on them.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"items\":{},\"type\":\"array\"},\"description\":\"Remaining structured metadata key-value pairs. This must be of the form\\nmap<string, string[]> (string key mapping to a list of string values).\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 48,
        "numOpsQuery": 13,
        "numOpsMutation": 35,
        "numQueriesCreated": 13,
        "numMutationsCreated": 35
      }
    },
    {
      "name": "Genomics",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated\\nempty messages in your APIs. A typical example is to use it as the request\\nor the response type of an API method. For instance:\\n\\n    service Foo {\\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n    }\\n\\nThe JSON representation for `Empty` is empty JSON object `{}`.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated\\nempty messages in your APIs. A typical example is to use it as the request\\nor the response type of an API method. For instance:\\n\\n    service Foo {\\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n    }\\n\\nThe JSON representation for `Empty` is empty JSON object `{}`.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated\\nempty messages in your APIs. A typical example is to use it as the request\\nor the response type of an API method. For instance:\\n\\n    service Foo {\\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n    }\\n\\nThe JSON representation for `Empty` is empty JSON object `{}`.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The request message for Operations.CancelOperation.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/RepeatedString\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/RepeatedString\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"description\":\"An OperationMetadata object. This will always be returned with the Operation.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"description\":\"If importing ReadGroupSets, an ImportReadGroupSetsResponse is returned. If importing Variants, an ImportVariantsResponse is returned. For pipelines and exports, an Empty response is returned.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Pipeline input arguments; keys are defined in the pipeline documentation.\\nAll input parameters that do not have default values  must be specified.\\nIf parameters with defaults are specified here, the defaults will be\\noverridden.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Labels to apply to this pipeline run. Labels will also be applied to\\ncompute resources (VM, disks) created by this pipeline run. When listing\\noperations, operations can filtered by labels.\\nLabel keys may not be empty; label values may be empty. Non-empty labels\\nmust be 1-63 characters long, and comply with [RFC1035]\\n(https://www.ietf.org/rfc/rfc1035.txt).\\nSpecifically, the name must be 1-63 characters long and match the regular\\nexpression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first\\ncharacter must be a lowercase letter, and all following characters must be\\na dash, lowercase letter, or digit, except the last character, which cannot\\nbe a dash.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Pipeline output arguments; keys are defined in the pipeline\\ndocumentation.  All output parameters of without default values\\nmust be specified.  If parameters with defaults are specified\\nhere, the defaults will be overridden.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 9,
        "numOpsQuery": 4,
        "numOpsMutation": 5,
        "numQueriesCreated": 4,
        "numMutationsCreated": 5
      }
    },
    {
      "name": "Gmail",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /{userId}/drafts/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /{userId}/labels/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /{userId}/messages/batchDelete' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /{userId}/messages/batchModify' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /{userId}/messages/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /{userId}/settings/filters/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /{userId}/settings/forwardingAddresses/{forwardingEmail}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /{userId}/settings/sendAs/{sendAsEmail}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /{userId}/settings/sendAs/{sendAsEmail}/smimeInfo/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /{userId}/settings/sendAs/{sendAsEmail}/smimeInfo/{id}/setDefault' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /{userId}/settings/sendAs/{sendAsEmail}/verify' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /{userId}/stop' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /{userId}/threads/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 60,
        "numOpsQuery": 23,
        "numOpsMutation": 37,
        "numQueriesCreated": 23,
        "numMutationsCreated": 24
      }
    },
    {
      "name": "Groups Migration",
      "report": {
        "warnings": [],
        "numOps": 1,
        "numOpsQuery": 0,
        "numOpsMutation": 1,
        "numQueriesCreated": 0,
        "numMutationsCreated": 1
      }
    },
    {
      "name": "Groups Settings",
      "report": {
        "warnings": [],
        "numOps": 2,
        "numOpsQuery": 1,
        "numOpsMutation": 1,
        "numQueriesCreated": 1,
        "numMutationsCreated": 1
      }
    },
    {
      "name": "Google Identity and Access Management (IAM)",
      "report": {
        "warnings": [],
        "numOps": 18,
        "numOpsQuery": 5,
        "numOpsMutation": 13,
        "numQueriesCreated": 5,
        "numMutationsCreated": 13
      }
    },
    {
      "name": "Google Identity Toolkit",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Respone of getting public keys.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"The customized query parameter.\",\"type\":\"string\"},\"description\":\"The query parameter that client can customize by themselves in auth url. The following parameters are reserved for server so that they cannot be customized by clients: client_id, response_type, scope, redirect_uri, state, oauth_token.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 20,
        "numOpsQuery": 3,
        "numOpsMutation": 17,
        "numQueriesCreated": 3,
        "numMutationsCreated": 17
      }
    },
    {
      "name": "Knowledge Graph Search",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The local context applicable for the response. See more details at\\nhttp://www.w3.org/TR/json-ld/#context-definitions.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The schema type of top-level JSON-LD object, e.g. ItemList.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 1,
        "numOpsQuery": 1,
        "numOpsMutation": 0,
        "numQueriesCreated": 1,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Google Cloud Natural Language",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Metadata associated with the entity.\\n\\nCurrently, Wikipedia URLs and Knowledge Graph MIDs are provided, if\\navailable. The associated keys are \\\"wikipedia_url\\\" and \\\"mid\\\", respectively.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 6,
        "numOpsQuery": 0,
        "numOpsMutation": 6,
        "numQueriesCreated": 0,
        "numMutationsCreated": 6
      }
    },
    {
      "name": "Google Cloud Natural Language",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Metadata associated with the entity.\\n\\nCurrently, Wikipedia URLs and Knowledge Graph MIDs are provided, if\\navailable. The associated keys are \\\"wikipedia_url\\\" and \\\"mid\\\", respectively.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 6,
        "numOpsQuery": 0,
        "numOpsMutation": 6,
        "numQueriesCreated": 0,
        "numMutationsCreated": 6
      }
    },
    {
      "name": "Enterprise License Manager",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /{productId}/sku/{skuId}/user/{userId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 6,
        "numOpsQuery": 3,
        "numOpsMutation": 3,
        "numQueriesCreated": 3,
        "numMutationsCreated": 2
      }
    },
    {
      "name": "Stackdriver Logging",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Result returned from WriteLogEntries. empty\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:\\nservice Foo {\\n  rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n}\\nThe JSON representation for Empty is empty JSON object {}.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:\\nservice Foo {\\n  rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n}\\nThe JSON representation for Empty is empty JSON object {}.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:\\nservice Foo {\\n  rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n}\\nThe JSON representation for Empty is empty JSON object {}.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:\\nservice Foo {\\n  rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n}\\nThe JSON representation for Empty is empty JSON object {}.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Optional. A map from a label key string to an extractor expression which is used to extract data from a log entry field and assign as the label value. Each label key specified in the LabelDescriptor must have an associated extractor expression in this map. The syntax of the extractor expression is the same as for the value_extractor field.The extracted value is converted to the type defined in the label descriptor. If the either the extraction or the type conversion fails, the label will have a default value. The default value for a string label is an empty string, for an integer label its 0, and for a boolean label its false.Note that there are upper bounds on the maximum number of labels and the number of active time series that are allowed in a project.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object.\"},\"description\":\"The log entry payload, represented as a structure that is expressed as a JSON object.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Optional. A set of user-defined (key, value) data that provides additional information about the log entry.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"description\":\"The log entry payload, represented as a protocol buffer. Some Google Cloud Platform services use this field for their log entry payloads.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Required. Values for all of the labels listed in the associated monitored resource descriptor. For example, Compute Engine VM instances use the labels \\\"project_id\\\", \\\"instance_id\\\", and \\\"zone\\\".\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Optional. Default labels that are added to the labels field of all log entries in entries. If a log entry already has a label with the same key as a label in this parameter, then the log entry's label is not changed. See LogEntry.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object.\"},\"description\":\"The log entry payload, represented as a structure that is expressed as a JSON object.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Optional. A set of user-defined (key, value) data that provides additional information about the log entry.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"description\":\"The log entry payload, represented as a protocol buffer. Some Google Cloud Platform services use this field for their log entry payloads.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Required. Values for all of the labels listed in the associated monitored resource descriptor. For example, Compute Engine VM instances use the labels \\\"project_id\\\", \\\"instance_id\\\", and \\\"zone\\\".\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Optional. A map from a label key string to an extractor expression which is used to extract data from a log entry field and assign as the label value. Each label key specified in the LabelDescriptor must have an associated extractor expression in this map. The syntax of the extractor expression is the same as for the value_extractor field.The extracted value is converted to the type defined in the label descriptor. If the either the extraction or the type conversion fails, the label will have a default value. The default value for a string label is an empty string, for an integer label its 0, and for a boolean label its false.Note that there are upper bounds on the maximum number of labels and the number of active time series that are allowed in a project.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 19,
        "numOpsQuery": 8,
        "numOpsMutation": 11,
        "numQueriesCreated": 8,
        "numMutationsCreated": 11
      }
    },
    {
      "name": "Stackdriver Logging",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Result returned from WriteLogEntries. empty\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:\\nservice Foo {\\n  rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n}\\nThe JSON representation for Empty is empty JSON object {}.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:\\nservice Foo {\\n  rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n}\\nThe JSON representation for Empty is empty JSON object {}.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:\\nservice Foo {\\n  rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n}\\nThe JSON representation for Empty is empty JSON object {}.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Optional. A map from a label key string to an extractor expression which is used to extract data from a log entry field and assign as the label value. Each label key specified in the LabelDescriptor must have an associated extractor expression in this map. The syntax of the extractor expression is the same as for the value_extractor field.The extracted value is converted to the type defined in the label descriptor. If the either the extraction or the type conversion fails, the label will have a default value. The default value for a string label is an empty string, for an integer label its 0, and for a boolean label its false.Note that there are upper bounds on the maximum number of labels and the number of active time series that are allowed in a project.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object.\"},\"description\":\"The log entry payload, represented as a structure that is expressed as a JSON object.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Optional. A set of user-defined (key, value) data that provides additional information about the log entry.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"description\":\"The log entry payload, represented as a protocol buffer. Some Google Cloud Platform services use this field for their log entry payloads.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Required. Values for all of the labels listed in the associated monitored resource descriptor. For example, Compute Engine VM instances use the labels \\\"project_id\\\", \\\"instance_id\\\", and \\\"zone\\\".\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Optional. Default labels that are added to the labels field of all log entries in entries. If a log entry already has a label with the same key as a label in this parameter, then the log entry's label is not changed. See LogEntry.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object.\"},\"description\":\"The log entry payload, represented as a structure that is expressed as a JSON object.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Optional. A set of user-defined (key, value) data that provides additional information about the log entry.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"description\":\"The log entry payload, represented as a protocol buffer. Some Google Cloud Platform services use this field for their log entry payloads.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Required. Values for all of the labels listed in the associated monitored resource descriptor. For example, Compute Engine VM instances use the labels \\\"project_id\\\", \\\"instance_id\\\", and \\\"zone\\\".\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Optional. A map from a label key string to an extractor expression which is used to extract data from a log entry field and assign as the label value. Each label key specified in the LabelDescriptor must have an associated extractor expression in this map. The syntax of the extractor expression is the same as for the value_extractor field.The extracted value is converted to the type defined in the label descriptor. If the either the extraction or the type conversion fails, the label will have a default value. The default value for a string label is an empty string, for an integer label its 0, and for a boolean label its false.Note that there are upper bounds on the maximum number of labels and the number of active time series that are allowed in a project.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 15,
        "numOpsQuery": 6,
        "numOpsMutation": 9,
        "numQueriesCreated": 6,
        "numMutationsCreated": 9
      }
    },
    {
      "name": "Manufacturer Center",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated\\nempty messages in your APIs. A typical example is to use it as the request\\nor the response type of an API method. For instance:\\n\\n    service Foo {\\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n    }\\n\\nThe JSON representation for `Empty` is empty JSON object `{}`.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 4,
        "numOpsQuery": 2,
        "numOpsMutation": 2,
        "numQueriesCreated": 2,
        "numMutationsCreated": 2
      }
    },
    {
      "name": "Google Mirror",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /contacts/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /subscriptions/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /timeline/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /timeline/{itemId}/attachments/{attachmentId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 22,
        "numOpsQuery": 10,
        "numOpsMutation": 12,
        "numQueriesCreated": 10,
        "numMutationsCreated": 8
      }
    },
    {
      "name": "Google Cloud Machine Learning Engine",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated\\nempty messages in your APIs. A typical example is to use it as the request\\nor the response type of an API method. For instance:\\n\\n    service Foo {\\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n    }\\n\\nThe JSON representation for `Empty` is empty JSON object `{}`.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Request message for the CancelJob method.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Request message for the SetDefaultVersion request.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Optional. One or more labels that you can add, to organize your jobs.\\nEach label is a key-value pair, where both the key and the value are\\narbitrary strings that you supply.\\nFor more information, see the documentation on\\n<a href=\\\"/ml-engine/docs/how-tos/resource-labels\\\">using labels</a>.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The hyperparameters given to this trial.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"description\":\"Service-specific metadata associated with the operation.  It typically\\ncontains progress information and common metadata such as create time.\\nSome services might not provide such metadata.  Any method that returns a\\nlong-running operation should document the metadata type, if any.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"description\":\"The normal response of the operation in case of success.  If the original\\nmethod returns no data on success, such as `Delete`, the response is\\n`google.protobuf.Empty`.  If the original method is standard\\n`Get`/`Create`/`Update`, the response should be the resource.  For other\\nmethods, the response should have the type `XxxResponse`, where `Xxx`\\nis the original method name.  For example, if the original method name\\nis `TakeSnapshot()`, the inferred response type is\\n`TakeSnapshotResponse`.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Optional. One or more labels that you can add, to organize your models.\\nEach label is a key-value pair, where both the key and the value are\\narbitrary strings that you supply.\\nFor more information, see the documentation on\\n<a href=\\\"/ml-engine/docs/how-tos/resource-labels\\\">using labels</a>.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Optional. One or more labels that you can add, to organize your model\\nversions. Each label is a key-value pair, where both the key and the value\\nare arbitrary strings that you supply.\\nFor more information, see the documentation on\\n<a href=\\\"/ml-engine/docs/how-tos/resource-labels\\\">using labels</a>.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Optional. One or more labels that you can add, to organize your jobs.\\nEach label is a key-value pair, where both the key and the value are\\narbitrary strings that you supply.\\nFor more information, see the documentation on\\n<a href=\\\"/ml-engine/docs/how-tos/resource-labels\\\">using labels</a>.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The hyperparameters given to this trial.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Optional. One or more labels that you can add, to organize your models.\\nEach label is a key-value pair, where both the key and the value are\\narbitrary strings that you supply.\\nFor more information, see the documentation on\\n<a href=\\\"/ml-engine/docs/how-tos/resource-labels\\\">using labels</a>.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Optional. One or more labels that you can add, to organize your model\\nversions. Each label is a key-value pair, where both the key and the value\\nare arbitrary strings that you supply.\\nFor more information, see the documentation on\\n<a href=\\\"/ml-engine/docs/how-tos/resource-labels\\\">using labels</a>.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 17,
        "numOpsQuery": 8,
        "numOpsMutation": 9,
        "numQueriesCreated": 8,
        "numMutationsCreated": 9
      }
    },
    {
      "name": "Google Cloud Machine Learning Engine",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated\\nempty messages in your APIs. A typical example is to use it as the request\\nor the response type of an API method. For instance:\\n\\n    service Foo {\\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n    }\\n\\nThe JSON representation for `Empty` is empty JSON object `{}`.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated\\nempty messages in your APIs. A typical example is to use it as the request\\nor the response type of an API method. For instance:\\n\\n    service Foo {\\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n    }\\n\\nThe JSON representation for `Empty` is empty JSON object `{}`.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Request message for the CancelJob method.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Request message for the SetDefaultVersion request.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The hyperparameters given to this trial.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"description\":\"Service-specific metadata associated with the operation.  It typically\\ncontains progress information and common metadata such as create time.\\nSome services might not provide such metadata.  Any method that returns a\\nlong-running operation should document the metadata type, if any.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"description\":\"The normal response of the operation in case of success.  If the original\\nmethod returns no data on success, such as `Delete`, the response is\\n`google.protobuf.Empty`.  If the original method is standard\\n`Get`/`Create`/`Update`, the response should be the resource.  For other\\nmethods, the response should have the type `XxxResponse`, where `Xxx`\\nis the original method name.  For example, if the original method name\\nis `TakeSnapshot()`, the inferred response type is\\n`TakeSnapshotResponse`.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The hyperparameters given to this trial.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 16,
        "numOpsQuery": 7,
        "numOpsMutation": 9,
        "numQueriesCreated": 7,
        "numMutationsCreated": 9
      }
    },
    {
      "name": "Stackdriver Monitoring",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:\\nservice Foo {\\n  rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n}\\nThe JSON representation for Empty is empty JSON object {}.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:\\nservice Foo {\\n  rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n}\\nThe JSON representation for Empty is empty JSON object {}.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Required. Values for all of the labels listed in the associated monitored resource descriptor. For example, Compute Engine VM instances use the labels \\\"project_id\\\", \\\"instance_id\\\", and \\\"zone\\\".\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object.\"},\"description\":\"Output only. Values for predefined system metadata labels. System labels are a kind of metadata extracted by Google Stackdriver. Stackdriver determines what system labels are useful and how to obtain their values. Some examples: \\\"machine_image\\\", \\\"vpc\\\", \\\"subnet_id\\\", \\\"security_group\\\", \\\"name\\\", etc. System label values can be only strings, Boolean values, or a list of strings. For example:\\n{ \\\"name\\\": \\\"my-test-instance\\\",\\n  \\\"security_group\\\": [\\\"a\\\", \\\"b\\\", \\\"c\\\"],\\n  \\\"spot_instance\\\": false }\\n\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Output only. A map of user-defined metadata labels.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The set of label values that uniquely identify this metric. All labels listed in the MetricDescriptor must be assigned values.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The list of headers to send as part of the uptime check request. If two headers have the same key and different values, they should be entered as a single header, with the value being a comma-separated list of all the desired values as described at https://www.w3.org/Protocols/rfc2616/rfc2616.txt (page 31). Entering two separate headers with the same key in a Create call will cause the first to be overwritten by the second.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/TypedValue\"},\"description\":\"The measurement metadata. Example: \\\"process_id\\\" -> 12345\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Required. Values for all of the labels listed in the associated monitored resource descriptor. For example, Compute Engine VM instances use the labels \\\"project_id\\\", \\\"instance_id\\\", and \\\"zone\\\".\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object.\"},\"description\":\"Output only. Values for predefined system metadata labels. System labels are a kind of metadata extracted by Google Stackdriver. Stackdriver determines what system labels are useful and how to obtain their values. Some examples: \\\"machine_image\\\", \\\"vpc\\\", \\\"subnet_id\\\", \\\"security_group\\\", \\\"name\\\", etc. System label values can be only strings, Boolean values, or a list of strings. For example:\\n{ \\\"name\\\": \\\"my-test-instance\\\",\\n  \\\"security_group\\\": [\\\"a\\\", \\\"b\\\", \\\"c\\\"],\\n  \\\"spot_instance\\\": false }\\n\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Output only. A map of user-defined metadata labels.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The set of label values that uniquely identify this metric. All labels listed in the MetricDescriptor must be assigned values.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The list of headers to send as part of the uptime check request. If two headers have the same key and different values, they should be entered as a single header, with the value being a comma-separated list of all the desired values as described at https://www.w3.org/Protocols/rfc2616/rfc2616.txt (page 31). Entering two separate headers with the same key in a Create call will cause the first to be overwritten by the second.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 15,
        "numOpsQuery": 8,
        "numOpsMutation": 7,
        "numQueriesCreated": 8,
        "numMutationsCreated": 7
      }
    },
    {
      "name": "Google OAuth2",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 8,
        "numOpsQuery": 7,
        "numOpsMutation": 1,
        "numQueriesCreated": 7,
        "numMutationsCreated": 1
      }
    },
    {
      "name": "Google OAuth2",
      "report": {
        "warnings": [],
        "numOps": 4,
        "numOpsQuery": 3,
        "numOpsMutation": 1,
        "numQueriesCreated": 3,
        "numMutationsCreated": 1
      }
    },
    {
      "name": "Google Cloud OS Login",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated\\nempty messages in your APIs. A typical example is to use it as the request\\nor the response type of an API method. For instance:\\n\\n    service Foo {\\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n    }\\n\\nThe JSON representation for `Empty` is empty JSON object `{}`.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/SshPublicKey\"},\"description\":\"A map from SSH public key fingerprint to the associated key object.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 4,
        "numOpsQuery": 2,
        "numOpsMutation": 2,
        "numQueriesCreated": 2,
        "numMutationsCreated": 2
      }
    },
    {
      "name": "Google Cloud OS Login",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated\\nempty messages in your APIs. A typical example is to use it as the request\\nor the response type of an API method. For instance:\\n\\n    service Foo {\\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n    }\\n\\nThe JSON representation for `Empty` is empty JSON object `{}`.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/SshPublicKey\"},\"description\":\"A map from SSH public key fingerprint to the associated key object.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 4,
        "numOpsQuery": 2,
        "numOpsMutation": 2,
        "numQueriesCreated": 2,
        "numMutationsCreated": 2
      }
    },
    {
      "name": "Google Cloud OS Login",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated\\nempty messages in your APIs. A typical example is to use it as the request\\nor the response type of an API method. For instance:\\n\\n    service Foo {\\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n    }\\n\\nThe JSON representation for `Empty` is empty JSON object `{}`.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/SshPublicKey\"},\"description\":\"A map from SSH public key fingerprint to the associated key object.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 4,
        "numOpsQuery": 2,
        "numOpsMutation": 2,
        "numQueriesCreated": 2,
        "numMutationsCreated": 2
      }
    },
    {
      "name": "PageSpeed Insights",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"The enum-like identifier for this rule. For instance \\\"EnableKeepAlive\\\" or \\\"AvoidCssImport\\\". Not localized.\",\"properties\":{\"localizedRuleName\":{\"description\":\"Localized name of the rule, intended for presentation to a user.\",\"type\":\"string\"},\"ruleImpact\":{\"description\":\"The impact (unbounded floating point value) that implementing the suggestions for this rule would have on making the page faster. Impact is comparable between rules to determine which rule's suggestions would have a higher or lower impact on making a page faster. For instance, if enabling compression would save 1MB, while optimizing images would save 500kB, the enable compression rule would have 2x the impact of the image optimization rule, all other things being equal.\",\"format\":\"double\",\"type\":\"number\"},\"urlBlocks\":{\"description\":\"List of blocks of URLs. Each block may contain a heading and a list of URLs. Each URL may optionally include additional details.\",\"items\":{\"properties\":{\"header\":{\"description\":\"Heading to be displayed with the list of URLs.\",\"properties\":{\"args\":{\"description\":\"List of arguments for the format string.\",\"items\":{\"properties\":{\"type\":{\"description\":\"Type of argument. One of URL, STRING_LITERAL, INT_LITERAL, BYTES, or DURATION.\",\"type\":\"string\"},\"value\":{\"description\":\"Argument value, as a localized string.\",\"type\":\"string\"}},\"type\":\"object\"},\"type\":\"array\"},\"format\":{\"description\":\"A localized format string with $N placeholders, where N is the 1-indexed argument number, e.g. 'Minifying the following $1 resources would save a total of $2 bytes'.\",\"type\":\"string\"}},\"type\":\"object\"},\"urls\":{\"description\":\"List of entries that provide information about URLs in the url block. Optional.\",\"items\":{\"properties\":{\"details\":{\"description\":\"List of entries that provide additional details about a single URL. Optional.\",\"items\":{\"properties\":{\"args\":{\"description\":\"List of arguments for the format string.\",\"items\":{\"properties\":{\"type\":{\"description\":\"Type of argument. One of URL, STRING_LITERAL, INT_LITERAL, BYTES, or DURATION.\",\"type\":\"string\"},\"value\":{\"description\":\"Argument value, as a localized string.\",\"type\":\"string\"}},\"type\":\"object\"},\"type\":\"array\"},\"format\":{\"description\":\"A localized format string with $N placeholders, where N is the 1-indexed argument number, e.g. 'Unnecessary metadata for this resource adds an additional $1 bytes to its download size'.\",\"type\":\"string\"}},\"type\":\"object\"},\"type\":\"array\"},\"result\":{\"description\":\"A format string that gives information about the URL, and a list of arguments for that format string.\",\"properties\":{\"args\":{\"description\":\"List of arguments for the format string.\",\"items\":{\"properties\":{\"type\":{\"description\":\"Type of argument. One of URL, STRING_LITERAL, INT_LITERAL, BYTES, or DURATION.\",\"type\":\"string\"},\"value\":{\"description\":\"Argument value, as a localized string.\",\"type\":\"string\"}},\"type\":\"object\"},\"type\":\"array\"},\"format\":{\"description\":\"A localized format string with $N placeholders, where N is the 1-indexed argument number, e.g. 'Minifying the resource at URL $1 can save $2 bytes'.\",\"type\":\"string\"}},\"type\":\"object\"}},\"type\":\"object\"},\"type\":\"array\"}},\"type\":\"object\"},\"type\":\"array\"}},\"type\":\"object\"},\"description\":\"Dictionary of formatted rule results, with one entry for each PageSpeed rule instantiated and run by the server.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 1,
        "numOpsQuery": 1,
        "numOpsMutation": 0,
        "numQueriesCreated": 1,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "PageSpeed Insights",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"The name of this rule group: one of \\\"SPEED\\\" or \\\"USABILITY\\\".\",\"properties\":{\"score\":{\"description\":\"The score (0-100) for this rule group, which indicates how much better a page could be in that category (e.g. how much faster, or how much more usable). A high score indicates little room for improvement, while a lower score indicates more room for improvement.\",\"format\":\"int32\",\"type\":\"integer\"}},\"type\":\"object\"},\"description\":\"A map with one entry for each rule group in these results.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"The enum-like identifier for this rule. For instance \\\"EnableKeepAlive\\\" or \\\"AvoidCssImport\\\". Not localized.\",\"properties\":{\"groups\":{\"description\":\"List of rule groups that this rule belongs to. Each entry in the list is one of \\\"SPEED\\\" or \\\"USABILITY\\\".\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"localizedRuleName\":{\"description\":\"Localized name of the rule, intended for presentation to a user.\",\"type\":\"string\"},\"ruleImpact\":{\"description\":\"The impact (unbounded floating point value) that implementing the suggestions for this rule would have on making the page faster. Impact is comparable between rules to determine which rule's suggestions would have a higher or lower impact on making a page faster. For instance, if enabling compression would save 1MB, while optimizing images would save 500kB, the enable compression rule would have 2x the impact of the image optimization rule, all other things being equal.\",\"format\":\"double\",\"type\":\"number\"},\"summary\":{\"$ref\":\"#/components/schemas/PagespeedApiFormatStringV2\"},\"urlBlocks\":{\"description\":\"List of blocks of URLs. Each block may contain a heading and a list of URLs. Each URL may optionally include additional details.\",\"items\":{\"properties\":{\"header\":{\"$ref\":\"#/components/schemas/PagespeedApiFormatStringV2\"},\"urls\":{\"description\":\"List of entries that provide information about URLs in the url block. Optional.\",\"items\":{\"properties\":{\"details\":{\"description\":\"List of entries that provide additional details about a single URL. Optional.\",\"items\":{\"$ref\":\"#/components/schemas/PagespeedApiFormatStringV2\"},\"type\":\"array\"},\"result\":{\"$ref\":\"#/components/schemas/PagespeedApiFormatStringV2\"}},\"type\":\"object\"},\"type\":\"array\"}},\"type\":\"object\"},\"type\":\"array\"}},\"type\":\"object\"},\"description\":\"Dictionary of formatted rule results, with one entry for each PageSpeed rule instantiated and run by the server.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 1,
        "numOpsQuery": 1,
        "numOpsMutation": 0,
        "numQueriesCreated": 1,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Google Partners",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated\\nempty messages in your APIs. A typical example is to use it as the request\\nor the response type of an API method. For instance:\\n\\n    service Foo {\\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n    }\\n\\nThe JSON representation for `Empty` is empty JSON object `{}`.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Map of client info, such as URL, browser navigator, browser platform, etc.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 15,
        "numOpsQuery": 10,
        "numOpsMutation": 5,
        "numQueriesCreated": 10,
        "numMutationsCreated": 5
      }
    },
    {
      "name": "Google People",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated\\nempty messages in your APIs. A typical example is to use it as the request\\nor the response type of an API method. For instance:\\n\\n    service Foo {\\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n    }\\n\\nThe JSON representation for `Empty` is empty JSON object `{}`.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated\\nempty messages in your APIs. A typical example is to use it as the request\\nor the response type of an API method. For instance:\\n\\n    service Foo {\\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n    }\\n\\nThe JSON representation for `Empty` is empty JSON object `{}`.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 11,
        "numOpsQuery": 5,
        "numOpsMutation": 6,
        "numQueriesCreated": 5,
        "numMutationsCreated": 6
      }
    },
    {
      "name": "Google Play Custom App Publishing",
      "report": {
        "warnings": [],
        "numOps": 1,
        "numOpsQuery": 0,
        "numOpsMutation": 1,
        "numQueriesCreated": 0,
        "numMutationsCreated": 1
      }
    },
    {
      "name": "Google Play Movies Partner",
      "report": {
        "warnings": [],
        "numOps": 6,
        "numOpsQuery": 6,
        "numOpsMutation": 0,
        "numQueriesCreated": 6,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Google+",
      "report": {
        "warnings": [],
        "numOps": 9,
        "numOpsQuery": 9,
        "numOpsMutation": 0,
        "numQueriesCreated": 9,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Google+ Domains",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /circles/{circleId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /circles/{circleId}/people' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 19,
        "numOpsQuery": 11,
        "numOpsMutation": 8,
        "numQueriesCreated": 11,
        "numMutationsCreated": 6
      }
    },
    {
      "name": "Poly",
      "report": {
        "warnings": [],
        "numOps": 4,
        "numOpsQuery": 4,
        "numOpsMutation": 0,
        "numQueriesCreated": 4,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Prediction",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /training/{data}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 6,
        "numOpsQuery": 1,
        "numOpsMutation": 5,
        "numQueriesCreated": 1,
        "numMutationsCreated": 4
      }
    },
    {
      "name": "Prediction",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /training/{data}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"format\":\"double\",\"type\":\"number\"},\"description\":\"Class label (string).\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"additionalProperties\":{\"description\":\"The pair {predicted_label, count}.\",\"format\":\"double\",\"type\":\"number\"},\"description\":\"The true class label.\",\"type\":\"object\"},\"description\":\"An output confusion matrix. This shows an estimate for how this model will do in predictions. This is first indexed by the true class label. For each true class label, this provides a pair {predicted_label, count}, where count is the estimated number of times the model will predict the predicted label given the true label. Will not output if more then 100 classes [Categorical models only].\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"The true class associated with how many instances it had\",\"format\":\"double\",\"type\":\"number\"},\"description\":\"A list of the confusion matrix row totals\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"format\":\"double\",\"type\":\"number\"},\"description\":\"Class label (string).\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"additionalProperties\":{\"description\":\"The pair {predicted_label, count}.\",\"format\":\"double\",\"type\":\"number\"},\"description\":\"The true class label.\",\"type\":\"object\"},\"description\":\"An output confusion matrix. This shows an estimate for how this model will do in predictions. This is first indexed by the true class label. For each true class label, this provides a pair {predicted_label, count}, where count is the estimated number of times the model will predict the predicted label given the true label. Will not output if more then 100 classes [Categorical models only].\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"The true class associated with how many instances it had\",\"format\":\"double\",\"type\":\"number\"},\"description\":\"A list of the confusion matrix row totals\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 6,
        "numOpsQuery": 1,
        "numOpsMutation": 5,
        "numQueriesCreated": 1,
        "numMutationsCreated": 4
      }
    },
    {
      "name": "Prediction",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /trainedmodels/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"format\":\"double\",\"type\":\"number\"},\"description\":\"Class label (string).\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"additionalProperties\":{\"format\":\"double\",\"type\":\"number\"},\"type\":\"object\"},\"description\":\"An output confusion matrix. This shows an estimate for how this model will do in predictions. This is first indexed by the true class label. For each true class label, this provides a pair {predicted_label, count}, where count is the estimated number of times the model will predict the predicted label given the true label. Will not output if more then 100 classes [Categorical models only].\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"format\":\"double\",\"type\":\"number\"},\"description\":\"A list of the confusion matrix row totals\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"format\":\"double\",\"type\":\"number\"},\"description\":\"Class label (string).\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"additionalProperties\":{\"format\":\"double\",\"type\":\"number\"},\"type\":\"object\"},\"description\":\"An output confusion matrix. This shows an estimate for how this model will do in predictions. This is first indexed by the true class label. For each true class label, this provides a pair {predicted_label, count}, where count is the estimated number of times the model will predict the predicted label given the true label. Will not output if more then 100 classes [Categorical models only].\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"format\":\"double\",\"type\":\"number\"},\"description\":\"A list of the confusion matrix row totals\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 6,
        "numOpsQuery": 1,
        "numOpsMutation": 5,
        "numQueriesCreated": 1,
        "numMutationsCreated": 4
      }
    },
    {
      "name": "Prediction",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /trainedmodels/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"format\":\"double\",\"type\":\"number\"},\"description\":\"Class label (string).\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Error level followed by a detailed error message.\",\"type\":\"string\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"additionalProperties\":{\"format\":\"double\",\"type\":\"number\"},\"type\":\"object\"},\"description\":\"An output confusion matrix. This shows an estimate for how this model will do in predictions. This is first indexed by the true class label. For each true class label, this provides a pair {predicted_label, count}, where count is the estimated number of times the model will predict the predicted label given the true label. Will not output if more then 100 classes [Categorical models only].\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"format\":\"double\",\"type\":\"number\"},\"description\":\"A list of the confusion matrix row totals\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"format\":\"double\",\"type\":\"number\"},\"description\":\"Class label (string).\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 8,
        "numOpsQuery": 3,
        "numOpsMutation": 5,
        "numQueriesCreated": 3,
        "numMutationsCreated": 4
      }
    },
    {
      "name": "Prediction",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /{project}/trainedmodels/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Error level followed by a detailed error message.\",\"type\":\"string\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"additionalProperties\":{\"description\":\"Average number of times an instance with correct class label modelDescription.confusionMatrix.(key) was wrongfully classified as this label.\",\"type\":\"string\"},\"description\":\"Confusion matrix information for the true class label.\",\"type\":\"object\"},\"description\":\"An output confusion matrix. This shows an estimate for how this model will do in predictions. This is first indexed by the true class label. For each true class label, this provides a pair {predicted_label, count}, where count is the estimated number of times the model will predict the predicted label given the true label. Will not output if more then 100 classes (Categorical models only).\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"A list of the confusion matrix row totals.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"format\":\"double\",\"type\":\"number\"},\"description\":\"Class label (string).\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 8,
        "numOpsQuery": 3,
        "numOpsMutation": 5,
        "numQueriesCreated": 3,
        "numMutationsCreated": 4
      }
    },
    {
      "name": "Google Proximity Beacon",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated\\nempty messages in your APIs. A typical example is to use it as the request\\nor the response type of an API method. For instance:\\n\\n    service Foo {\\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n    }\\n\\nThe JSON representation for `Empty` is empty JSON object `{}`.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated\\nempty messages in your APIs. A typical example is to use it as the request\\nor the response type of an API method. For instance:\\n\\n    service Foo {\\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n    }\\n\\nThe JSON representation for `Empty` is empty JSON object `{}`.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated\\nempty messages in your APIs. A typical example is to use it as the request\\nor the response type of an API method. For instance:\\n\\n    service Foo {\\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n    }\\n\\nThe JSON representation for `Empty` is empty JSON object `{}`.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated\\nempty messages in your APIs. A typical example is to use it as the request\\nor the response type of an API method. For instance:\\n\\n    service Foo {\\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n    }\\n\\nThe JSON representation for `Empty` is empty JSON object `{}`.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated\\nempty messages in your APIs. A typical example is to use it as the request\\nor the response type of an API method. For instance:\\n\\n    service Foo {\\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n    }\\n\\nThe JSON representation for `Empty` is empty JSON object `{}`.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Properties of the beacon device, for example battery type or firmware\\nversion.\\nOptional.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Properties of the beacon device, for example battery type or firmware\\nversion.\\nOptional.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 17,
        "numOpsQuery": 6,
        "numOpsMutation": 11,
        "numQueriesCreated": 6,
        "numMutationsCreated": 11
      }
    },
    {
      "name": "Google Cloud Pub/Sub",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated\\nempty messages in your APIs. A typical example is to use it as the request\\nor the response type of an API method. For instance:\\n\\n    service Foo {\\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n    }\\n\\nThe JSON representation for `Empty` is empty JSON object `{}`.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated\\nempty messages in your APIs. A typical example is to use it as the request\\nor the response type of an API method. For instance:\\n\\n    service Foo {\\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n    }\\n\\nThe JSON representation for `Empty` is empty JSON object `{}`.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated\\nempty messages in your APIs. A typical example is to use it as the request\\nor the response type of an API method. For instance:\\n\\n    service Foo {\\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n    }\\n\\nThe JSON representation for `Empty` is empty JSON object `{}`.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated\\nempty messages in your APIs. A typical example is to use it as the request\\nor the response type of an API method. For instance:\\n\\n    service Foo {\\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n    }\\n\\nThe JSON representation for `Empty` is empty JSON object `{}`.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated\\nempty messages in your APIs. A typical example is to use it as the request\\nor the response type of an API method. For instance:\\n\\n    service Foo {\\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n    }\\n\\nThe JSON representation for `Empty` is empty JSON object `{}`.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated\\nempty messages in your APIs. A typical example is to use it as the request\\nor the response type of an API method. For instance:\\n\\n    service Foo {\\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n    }\\n\\nThe JSON representation for `Empty` is empty JSON object `{}`.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Endpoint configuration attributes.\\n\\nEvery endpoint has a set of API supported attributes that can be used to\\ncontrol different aspects of the message delivery.\\n\\nThe currently supported attribute is `x-goog-version`, which you can\\nuse to change the format of the pushed message. This attribute\\nindicates the version of the data expected by the endpoint. This\\ncontrols the shape of the pushed message (i.e., its fields and metadata).\\nThe endpoint version is based on the version of the Pub/Sub API.\\n\\nIf not present during the `CreateSubscription` call, it will default to\\nthe version of the API used to make such call. If not present during a\\n`ModifyPushConfig` call, its value will not be changed. `GetSubscription`\\ncalls will always return a valid version, even if the subscription was\\ncreated without this attribute.\\n\\nThe possible values for this attribute are:\\n\\n* `v1beta1`: uses the push format defined in the v1beta1 Pub/Sub API.\\n* `v1` or `v1beta2`: uses the push format defined in the v1 Pub/Sub API.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Endpoint configuration attributes.\\n\\nEvery endpoint has a set of API supported attributes that can be used to\\ncontrol different aspects of the message delivery.\\n\\nThe currently supported attribute is `x-goog-version`, which you can\\nuse to change the format of the pushed message. This attribute\\nindicates the version of the data expected by the endpoint. This\\ncontrols the shape of the pushed message (i.e., its fields and metadata).\\nThe endpoint version is based on the version of the Pub/Sub API.\\n\\nIf not present during the `CreateSubscription` call, it will default to\\nthe version of the API used to make such call. If not present during a\\n`ModifyPushConfig` call, its value will not be changed. `GetSubscription`\\ncalls will always return a valid version, even if the subscription was\\ncreated without this attribute.\\n\\nThe possible values for this attribute are:\\n\\n* `v1beta1`: uses the push format defined in the v1beta1 Pub/Sub API.\\n* `v1` or `v1beta2`: uses the push format defined in the v1 Pub/Sub API.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Optional attributes for this message.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Optional attributes for this message.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 20,
        "numOpsQuery": 8,
        "numOpsMutation": 12,
        "numQueriesCreated": 8,
        "numMutationsCreated": 12
      }
    },
    {
      "name": "Google Cloud Pub/Sub",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"An empty message that you can re-use to avoid defining duplicated empty\\nmessages in your project. A typical example is to use it as argument or the\\nreturn value of a service API. For instance:\\n\\n  service Foo {\\n    rpc Bar (proto2.Empty) returns (proto2.Empty) { };\\n  };\\n\\nBEGIN GOOGLE-INTERNAL\\nThe difference between this one and net/rpc/empty-message.proto is that\\n1) The generated message here is in proto2 C++ API.\\n2) The proto2.Empty has minimum dependencies\\n   (no message_set or net/rpc dependencies)\\nEND GOOGLE-INTERNAL\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"An empty message that you can re-use to avoid defining duplicated empty\\nmessages in your project. A typical example is to use it as argument or the\\nreturn value of a service API. For instance:\\n\\n  service Foo {\\n    rpc Bar (proto2.Empty) returns (proto2.Empty) { };\\n  };\\n\\nBEGIN GOOGLE-INTERNAL\\nThe difference between this one and net/rpc/empty-message.proto is that\\n1) The generated message here is in proto2 C++ API.\\n2) The proto2.Empty has minimum dependencies\\n   (no message_set or net/rpc dependencies)\\nEND GOOGLE-INTERNAL\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"An empty message that you can re-use to avoid defining duplicated empty\\nmessages in your project. A typical example is to use it as argument or the\\nreturn value of a service API. For instance:\\n\\n  service Foo {\\n    rpc Bar (proto2.Empty) returns (proto2.Empty) { };\\n  };\\n\\nBEGIN GOOGLE-INTERNAL\\nThe difference between this one and net/rpc/empty-message.proto is that\\n1) The generated message here is in proto2 C++ API.\\n2) The proto2.Empty has minimum dependencies\\n   (no message_set or net/rpc dependencies)\\nEND GOOGLE-INTERNAL\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"An empty message that you can re-use to avoid defining duplicated empty\\nmessages in your project. A typical example is to use it as argument or the\\nreturn value of a service API. For instance:\\n\\n  service Foo {\\n    rpc Bar (proto2.Empty) returns (proto2.Empty) { };\\n  };\\n\\nBEGIN GOOGLE-INTERNAL\\nThe difference between this one and net/rpc/empty-message.proto is that\\n1) The generated message here is in proto2 C++ API.\\n2) The proto2.Empty has minimum dependencies\\n   (no message_set or net/rpc dependencies)\\nEND GOOGLE-INTERNAL\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"An empty message that you can re-use to avoid defining duplicated empty\\nmessages in your project. A typical example is to use it as argument or the\\nreturn value of a service API. For instance:\\n\\n  service Foo {\\n    rpc Bar (proto2.Empty) returns (proto2.Empty) { };\\n  };\\n\\nBEGIN GOOGLE-INTERNAL\\nThe difference between this one and net/rpc/empty-message.proto is that\\n1) The generated message here is in proto2 C++ API.\\n2) The proto2.Empty has minimum dependencies\\n   (no message_set or net/rpc dependencies)\\nEND GOOGLE-INTERNAL\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"An empty message that you can re-use to avoid defining duplicated empty\\nmessages in your project. A typical example is to use it as argument or the\\nreturn value of a service API. For instance:\\n\\n  service Foo {\\n    rpc Bar (proto2.Empty) returns (proto2.Empty) { };\\n  };\\n\\nBEGIN GOOGLE-INTERNAL\\nThe difference between this one and net/rpc/empty-message.proto is that\\n1) The generated message here is in proto2 C++ API.\\n2) The proto2.Empty has minimum dependencies\\n   (no message_set or net/rpc dependencies)\\nEND GOOGLE-INTERNAL\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 15,
        "numOpsQuery": 4,
        "numOpsMutation": 11,
        "numQueriesCreated": 4,
        "numMutationsCreated": 11
      }
    },
    {
      "name": "Google Cloud Pub/Sub",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated\\nempty messages in your APIs. A typical example is to use it as the request\\nor the response type of an API method. For instance:\\n\\n    service Foo {\\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n    }\\n\\nThe JSON representation for `Empty` is empty JSON object `{}`.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated\\nempty messages in your APIs. A typical example is to use it as the request\\nor the response type of an API method. For instance:\\n\\n    service Foo {\\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n    }\\n\\nThe JSON representation for `Empty` is empty JSON object `{}`.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated\\nempty messages in your APIs. A typical example is to use it as the request\\nor the response type of an API method. For instance:\\n\\n    service Foo {\\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n    }\\n\\nThe JSON representation for `Empty` is empty JSON object `{}`.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated\\nempty messages in your APIs. A typical example is to use it as the request\\nor the response type of an API method. For instance:\\n\\n    service Foo {\\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n    }\\n\\nThe JSON representation for `Empty` is empty JSON object `{}`.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated\\nempty messages in your APIs. A typical example is to use it as the request\\nor the response type of an API method. For instance:\\n\\n    service Foo {\\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n    }\\n\\nThe JSON representation for `Empty` is empty JSON object `{}`.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Endpoint configuration attributes.\\n\\nEvery endpoint has a set of API supported attributes that can be used to\\ncontrol different aspects of the message delivery.\\n\\nThe currently supported attribute is `x-goog-version`, which you can\\nuse to change the format of the push message. This attribute\\nindicates the version of the data expected by the endpoint. This\\ncontrols the shape of the envelope (i.e. its fields and metadata).\\nThe endpoint version is based on the version of the Pub/Sub\\nAPI.\\n\\nIf not present during the `CreateSubscription` call, it will default to\\nthe version of the API used to make such call. If not present during a\\n`ModifyPushConfig` call, its value will not be changed. `GetSubscription`\\ncalls will always return a valid version, even if the subscription was\\ncreated without this attribute.\\n\\nThe possible values for this attribute are:\\n\\n* `v1beta1`: uses the push format defined in the v1beta1 Pub/Sub API.\\n* `v1` or `v1beta2`: uses the push format defined in the v1 Pub/Sub API.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Endpoint configuration attributes.\\n\\nEvery endpoint has a set of API supported attributes that can be used to\\ncontrol different aspects of the message delivery.\\n\\nThe currently supported attribute is `x-goog-version`, which you can\\nuse to change the format of the push message. This attribute\\nindicates the version of the data expected by the endpoint. This\\ncontrols the shape of the envelope (i.e. its fields and metadata).\\nThe endpoint version is based on the version of the Pub/Sub\\nAPI.\\n\\nIf not present during the `CreateSubscription` call, it will default to\\nthe version of the API used to make such call. If not present during a\\n`ModifyPushConfig` call, its value will not be changed. `GetSubscription`\\ncalls will always return a valid version, even if the subscription was\\ncreated without this attribute.\\n\\nThe possible values for this attribute are:\\n\\n* `v1beta1`: uses the push format defined in the v1beta1 Pub/Sub API.\\n* `v1` or `v1beta2`: uses the push format defined in the v1 Pub/Sub API.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Optional attributes for this message.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Optional attributes for this message.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 16,
        "numOpsQuery": 6,
        "numOpsMutation": 10,
        "numQueriesCreated": 6,
        "numMutationsCreated": 10
      }
    },
    {
      "name": "QPX Express",
      "report": {
        "warnings": [],
        "numOps": 1,
        "numOpsQuery": 0,
        "numOpsMutation": 1,
        "numQueriesCreated": 0,
        "numMutationsCreated": 1
      }
    },
    {
      "name": "Replica Pool",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /{projectName}/zones/{zone}/pools/{poolName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /{projectName}/zones/{zone}/pools/{poolName}/updateTemplate' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 10,
        "numOpsQuery": 4,
        "numOpsMutation": 6,
        "numQueriesCreated": 4,
        "numMutationsCreated": 4
      }
    },
    {
      "name": "Google Compute Engine Instance Group Manager",
      "report": {
        "warnings": [],
        "numOps": 12,
        "numOpsQuery": 4,
        "numOpsMutation": 8,
        "numQueriesCreated": 4,
        "numMutationsCreated": 8
      }
    },
    {
      "name": "Google Compute Engine Instance Group Updater",
      "report": {
        "warnings": [],
        "numOps": 10,
        "numOpsQuery": 5,
        "numOpsMutation": 5,
        "numQueriesCreated": 5,
        "numMutationsCreated": 5
      }
    },
    {
      "name": "Enterprise Apps Reseller",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /customers/{customerId}/subscriptions/{subscriptionId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 16,
        "numOpsQuery": 4,
        "numOpsMutation": 12,
        "numQueriesCreated": 4,
        "numMutationsCreated": 11
      }
    },
    {
      "name": "Resource Views",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /{projectName}/regions/{region}/resourceViews/{resourceViewName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /{projectName}/regions/{region}/resourceViews/{resourceViewName}/addResources' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /{projectName}/regions/{region}/resourceViews/{resourceViewName}/removeResources' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /{projectName}/zones/{zone}/resourceViews/{resourceViewName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /{projectName}/zones/{zone}/resourceViews/{resourceViewName}/addResources' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /{projectName}/zones/{zone}/resourceViews/{resourceViewName}/removeResources' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 14,
        "numOpsQuery": 4,
        "numOpsMutation": 10,
        "numQueriesCreated": 4,
        "numMutationsCreated": 4
      }
    },
    {
      "name": "Google Compute Engine Instance Groups",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"The name of the service end point.\",\"items\":{\"format\":\"int32\",\"type\":\"integer\"},\"type\":\"array\"},\"description\":\"The list of service end points on the resource.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 11,
        "numOpsQuery": 5,
        "numOpsMutation": 6,
        "numQueriesCreated": 5,
        "numMutationsCreated": 6
      }
    },
    {
      "name": "Google Cloud Runtime Configuration",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated\\nempty messages in your APIs. A typical example is to use it as the request\\nor the response type of an API method. For instance:\\n\\n    service Foo {\\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n    }\\n\\nThe JSON representation for `Empty` is empty JSON object `{}`.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated\\nempty messages in your APIs. A typical example is to use it as the request\\nor the response type of an API method. For instance:\\n\\n    service Foo {\\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n    }\\n\\nThe JSON representation for `Empty` is empty JSON object `{}`.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The request message for Operations.CancelOperation.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"description\":\"Service-specific metadata associated with the operation.  It typically\\ncontains progress information and common metadata such as create time.\\nSome services might not provide such metadata.  Any method that returns a\\nlong-running operation should document the metadata type, if any.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"description\":\"The normal response of the operation in case of success.  If the original\\nmethod returns no data on success, such as `Delete`, the response is\\n`google.protobuf.Empty`.  If the original method is standard\\n`Get`/`Create`/`Update`, the response should be the resource.  For other\\nmethods, the response should have the type `XxxResponse`, where `Xxx`\\nis the original method name.  For example, if the original method name\\nis `TakeSnapshot()`, the inferred response type is\\n`TakeSnapshotResponse`.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 3,
        "numOpsQuery": 1,
        "numOpsMutation": 2,
        "numQueriesCreated": 1,
        "numMutationsCreated": 2
      }
    },
    {
      "name": "Google Cloud Runtime Configuration",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated\\nempty messages in your APIs. A typical example is to use it as the request\\nor the response type of an API method. For instance:\\n\\n    service Foo {\\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n    }\\n\\nThe JSON representation for `Empty` is empty JSON object `{}`.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"description\":\"Service-specific metadata associated with the operation.  It typically\\ncontains progress information and common metadata such as create time.\\nSome services might not provide such metadata.  Any method that returns a\\nlong-running operation should document the metadata type, if any.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"description\":\"The normal response of the operation in case of success.  If the original\\nmethod returns no data on success, such as `Delete`, the response is\\n`google.protobuf.Empty`.  If the original method is standard\\n`Get`/`Create`/`Update`, the response should be the resource.  For other\\nmethods, the response should have the type `XxxResponse`, where `Xxx`\\nis the original method name.  For example, if the original method name\\nis `TakeSnapshot()`, the inferred response type is\\n`TakeSnapshotResponse`.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 13,
        "numOpsQuery": 5,
        "numOpsMutation": 8,
        "numQueriesCreated": 5,
        "numMutationsCreated": 8
      }
    },
    {
      "name": "Google Safe Browsing",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated\\nempty messages in your APIs. A typical example is to use it as the request\\nor the response type of an API method. For instance:\\n\\n    service Foo {\\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n    }\\n\\nThe JSON representation for `Empty` is empty JSON object `{}`.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 7,
        "numOpsQuery": 3,
        "numOpsMutation": 4,
        "numQueriesCreated": 3,
        "numMutationsCreated": 4
      }
    },
    {
      "name": "Google Apps Script",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"description\":\"If the script function returns successfully, this field contains an ExecutionResponse object with the function's return value.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 1,
        "numOpsQuery": 0,
        "numOpsMutation": 1,
        "numQueriesCreated": 0,
        "numMutationsCreated": 1
      }
    },
    {
      "name": "Google Search Console URL Testing Tools",
      "report": {
        "warnings": [],
        "numOps": 1,
        "numOpsQuery": 0,
        "numOpsMutation": 1,
        "numQueriesCreated": 0,
        "numMutationsCreated": 1
      }
    },
    {
      "name": "Service Consumer Management",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated\\nempty messages in your APIs. A typical example is to use it as the request\\nor the response type of an API method. For instance:\\n\\n    service Foo {\\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n    }\\n\\nThe JSON representation for `Empty` is empty JSON object `{}`.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The request message for Operations.CancelOperation.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"description\":\"Service-specific metadata associated with the operation.  It typically\\ncontains progress information and common metadata such as create time.\\nSome services might not provide such metadata.  Any method that returns a\\nlong-running operation should document the metadata type, if any.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"description\":\"The normal response of the operation in case of success.  If the original\\nmethod returns no data on success, such as `Delete`, the response is\\n`google.protobuf.Empty`.  If the original method is standard\\n`Get`/`Create`/`Update`, the response should be the resource.  For other\\nmethods, the response should have the type `XxxResponse`, where `Xxx`\\nis the original method name.  For example, if the original method name\\nis `TakeSnapshot()`, the inferred response type is\\n`TakeSnapshotResponse`.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Labels that will be applied to this project.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 8,
        "numOpsQuery": 3,
        "numOpsMutation": 5,
        "numQueriesCreated": 3,
        "numMutationsCreated": 5
      }
    },
    {
      "name": "Google Service Control",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Labels describing the operation.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The labels describing the metric value.\\nSee comments on google.api.servicecontrol.v1.Operation.labels for\\nthe overriding relationship.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The labels describing the metric value.\\nSee comments on google.api.servicecontrol.v1.Operation.labels for\\nthe overriding relationship.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Labels describing the operation. Only the following labels are allowed:\\n\\n- Labels describing monitored resources as defined in\\n  the service configuration.\\n- Default labels of metric values. When specified, labels defined in the\\n  metric value override these default.\\n- The following labels defined by Google Cloud Platform:\\n    - `cloud.googleapis.com/location` describing the location where the\\n       operation happened,\\n    - `servicecontrol.googleapis.com/user_agent` describing the user agent\\n       of the API request,\\n    - `servicecontrol.googleapis.com/service_agent` describing the service\\n       used to handle the API request (e.g. ESP),\\n    - `servicecontrol.googleapis.com/platform` describing the platform\\n       where the API is served (e.g. GAE, GCE, GKE).\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"User defined labels for the resource that this operation is associated\\nwith. Only a combination of 1000 user labels per consumer project are\\nallowed.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"A set of user-defined (key, value) data that provides additional\\ninformation about the log entry.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"description\":\"The log entry payload, represented as a protocol buffer that is\\nexpressed as a JSON object. The only accepted type currently is\\nAuditLog.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object.\"},\"description\":\"The log entry payload, represented as a structure that\\nis expressed as a JSON object.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"format\":\"int32\",\"type\":\"integer\"},\"description\":\"Map of quota group name to the actual number of tokens consumed. If the\\nquota check was not successful, then this will not be populated due to no\\nquota consumption.\\n\\nWe are not merging this field with 'quota_metrics' field because of the\\ncomplexity of scaling in Chemist client code base. For simplicity, we will\\nkeep this field for Castor (that scales quota usage) and 'quota_metrics'\\nfor SuperQuota (that doesn't scale quota usage).\\n\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 6,
        "numOpsQuery": 0,
        "numOpsMutation": 6,
        "numQueriesCreated": 0,
        "numMutationsCreated": 6
      }
    },
    {
      "name": "Google Service Management",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Request message for `GetIamPolicy` method.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"description\":\"Service-specific metadata associated with the operation.  It typically\\ncontains progress information and common metadata such as create time.\\nSome services might not provide such metadata.  Any method that returns a\\nlong-running operation should document the metadata type, if any.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"description\":\"The normal response of the operation in case of success.  If the original\\nmethod returns no data on success, such as `Delete`, the response is\\n`google.protobuf.Empty`.  If the original method is standard\\n`Get`/`Create`/`Update`, the response should be the resource.  For other\\nmethods, the response should have the type `XxxResponse`, where `Xxx`\\nis the original method name.  For example, if the original method name\\nis `TakeSnapshot()`, the inferred response type is\\n`TakeSnapshotResponse`.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"description\":\"The option's value packed in an Any message. If the value is a primitive,\\nthe corresponding wrapper type defined in google/protobuf/wrappers.proto\\nshould be used. If the value is an enum, it should be stored as an int32\\nvalue using the google.protobuf.Int32Value type.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"format\":\"int64\",\"type\":\"string\"},\"description\":\"Tiered limit values. You must specify this as a key:value pair, with an\\ninteger value that is the maximum number of requests allowed for the\\nspecified unit. Currently only STANDARD is supported.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"format\":\"int64\",\"type\":\"string\"},\"description\":\"Metrics to update when the selected methods are called, and the associated\\ncost applied to each metric.\\n\\nThe key of the map is the metric name, and the values are the amount\\nincreased for the metric against which the quota limits are defined.\\nThe value must not be negative.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Strategy used to delete a service. This strategy is a placeholder only\\nused by the system generated rollout to delete a service.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"format\":\"double\",\"type\":\"number\"},\"description\":\"Maps service configuration IDs to their corresponding traffic percentage.\\nKey is the service configuration ID, Value is the traffic percentage\\nwhich must be greater than 0.0 and the sum must equal to 100.0.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"description\":\"The option's value packed in an Any message. If the value is a primitive,\\nthe corresponding wrapper type defined in google/protobuf/wrappers.proto\\nshould be used. If the value is an enum, it should be stored as an int32\\nvalue using the google.protobuf.Int32Value type.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"format\":\"int64\",\"type\":\"string\"},\"description\":\"Tiered limit values. You must specify this as a key:value pair, with an\\ninteger value that is the maximum number of requests allowed for the\\nspecified unit. Currently only STANDARD is supported.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"format\":\"int64\",\"type\":\"string\"},\"description\":\"Metrics to update when the selected methods are called, and the associated\\ncost applied to each metric.\\n\\nThe key of the map is the metric name, and the values are the amount\\nincreased for the metric against which the quota limits are defined.\\nThe value must not be negative.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Strategy used to delete a service. This strategy is a placeholder only\\nused by the system generated rollout to delete a service.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"format\":\"double\",\"type\":\"number\"},\"description\":\"Maps service configuration IDs to their corresponding traffic percentage.\\nKey is the service configuration ID, Value is the traffic percentage\\nwhich must be greater than 0.0 and the sum must equal to 100.0.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"description\":\"Service configuration for which we want to generate the report.\\nFor this version of API, the supported types are\\ngoogle.api.servicemanagement.v1.ConfigRef,\\ngoogle.api.servicemanagement.v1.ConfigSource,\\nand google.api.Service\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"description\":\"Service configuration against which the comparison will be done.\\nFor this version of API, the supported types are\\ngoogle.api.servicemanagement.v1.ConfigRef,\\ngoogle.api.servicemanagement.v1.ConfigSource,\\nand google.api.Service\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 21,
        "numOpsQuery": 9,
        "numOpsMutation": 12,
        "numQueriesCreated": 9,
        "numMutationsCreated": 12
      }
    },
    {
      "name": "Google Service User",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Request message for DisableService method.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Request message for EnableService method.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"description\":\"The option's value packed in an Any message. If the value is a primitive,\\nthe corresponding wrapper type defined in google/protobuf/wrappers.proto\\nshould be used. If the value is an enum, it should be stored as an int32\\nvalue using the google.protobuf.Int32Value type.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"format\":\"int64\",\"type\":\"string\"},\"description\":\"Tiered limit values. You must specify this as a key:value pair, with an\\ninteger value that is the maximum number of requests allowed for the\\nspecified unit. Currently only STANDARD is supported.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"format\":\"int64\",\"type\":\"string\"},\"description\":\"Metrics to update when the selected methods are called, and the associated\\ncost applied to each metric.\\n\\nThe key of the map is the metric name, and the values are the amount\\nincreased for the metric against which the quota limits are defined.\\nThe value must not be negative.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"description\":\"Service-specific metadata associated with the operation.  It typically\\ncontains progress information and common metadata such as create time.\\nSome services might not provide such metadata.  Any method that returns a\\nlong-running operation should document the metadata type, if any.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"description\":\"The normal response of the operation in case of success.  If the original\\nmethod returns no data on success, such as `Delete`, the response is\\n`google.protobuf.Empty`.  If the original method is standard\\n`Get`/`Create`/`Update`, the response should be the resource.  For other\\nmethods, the response should have the type `XxxResponse`, where `Xxx`\\nis the original method name.  For example, if the original method name\\nis `TakeSnapshot()`, the inferred response type is\\n`TakeSnapshotResponse`.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 4,
        "numOpsQuery": 2,
        "numOpsMutation": 2,
        "numQueriesCreated": 2,
        "numMutationsCreated": 2
      }
    },
    {
      "name": "Google Sheets",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The request for clearing a range of values in a spreadsheet.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/FilterCriteria\"},\"description\":\"The criteria for showing/hiding values per column.\\nThe map's key is the column index, and the value is the criteria for\\nthat column.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/PivotFilterCriteria\"},\"description\":\"An optional mapping of filters per source column offset.\\n\\nThe filters will be applied before aggregating data into the pivot table.\\nThe map's key is the column offset of the source range that you want to\\nfilter, and the value is the criteria for that column.\\n\\nFor example, if the source was `C10:E15`, a key of `0` will have the filter\\nfor column `C`, whereas the key `1` is for column `D`.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/FilterCriteria\"},\"description\":\"The criteria for showing/hiding values per column.\\nThe map's key is the column index, and the value is the criteria for\\nthat column.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/FilterCriteria\"},\"description\":\"The criteria for showing/hiding values per column.\\nThe map's key is the column index, and the value is the criteria for\\nthat column.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/PivotFilterCriteria\"},\"description\":\"An optional mapping of filters per source column offset.\\n\\nThe filters will be applied before aggregating data into the pivot table.\\nThe map's key is the column offset of the source range that you want to\\nfilter, and the value is the criteria for that column.\\n\\nFor example, if the source was `C10:E15`, a key of `0` will have the filter\\nfor column `C`, whereas the key `1` is for column `D`.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/FilterCriteria\"},\"description\":\"The criteria for showing/hiding values per column.\\nThe map's key is the column index, and the value is the criteria for\\nthat column.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 17,
        "numOpsQuery": 4,
        "numOpsMutation": 13,
        "numQueriesCreated": 4,
        "numMutationsCreated": 13
      }
    },
    {
      "name": "Google Site Verification",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /webResource/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 6,
        "numOpsQuery": 2,
        "numOpsMutation": 4,
        "numQueriesCreated": 2,
        "numMutationsCreated": 3
      }
    },
    {
      "name": "Google Slides",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/List\"},\"description\":\"The bulleted lists contained in this text, keyed by list ID.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/List\"},\"description\":\"The bulleted lists contained in this text, keyed by list ID.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The object being duplicated may contain other objects, for example when\\nduplicating a slide or a group page element. This map defines how the IDs\\nof duplicated objects are generated: the keys are the IDs of the original\\nobjects and its values are the IDs that will be assigned to the\\ncorresponding duplicate object. The ID of the source object's duplicate\\nmay be specified in this map as well, using the same value of the\\n`object_id` field as a key and the newly desired ID as the value.\\n\\nAll keys must correspond to existing IDs in the presentation. All values\\nmust be unique in the presentation and must start with an alphanumeric\\ncharacter or an underscore (matches regex `[a-zA-Z0-9_]`); remaining\\ncharacters may include those as well as a hyphen or colon (matches regex\\n`[a-zA-Z0-9_-:]`). The length of the new ID must not be less than 5 or\\ngreater than 50.\\n\\nIf any IDs of source objects are omitted from the map, a new random ID will\\nbe assigned. If the map is empty or unset, all duplicate objects will\\nreceive a new random ID.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 5,
        "numOpsQuery": 3,
        "numOpsMutation": 2,
        "numQueriesCreated": 3,
        "numMutationsCreated": 2
      }
    },
    {
      "name": "Cloud Source Repositories",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated\\nempty messages in your APIs. A typical example is to use it as the request\\nor the response type of an API method. For instance:\\n\\n    service Foo {\\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n    }\\n\\nThe JSON representation for `Empty` is empty JSON object `{}`.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 7,
        "numOpsQuery": 3,
        "numOpsMutation": 4,
        "numQueriesCreated": 3,
        "numMutationsCreated": 4
      }
    },
    {
      "name": "Cloud Spanner",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated\\nempty messages in your APIs. A typical example is to use it as the request\\nor the response type of an API method. For instance:\\n\\n    service Foo {\\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n    }\\n\\nThe JSON representation for `Empty` is empty JSON object `{}`.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated\\nempty messages in your APIs. A typical example is to use it as the request\\nor the response type of an API method. For instance:\\n\\n    service Foo {\\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n    }\\n\\nThe JSON representation for `Empty` is empty JSON object `{}`.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated\\nempty messages in your APIs. A typical example is to use it as the request\\nor the response type of an API method. For instance:\\n\\n    service Foo {\\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n    }\\n\\nThe JSON representation for `Empty` is empty JSON object `{}`.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Request message for `GetIamPolicy` method.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated\\nempty messages in your APIs. A typical example is to use it as the request\\nor the response type of an API method. For instance:\\n\\n    service Foo {\\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n    }\\n\\nThe JSON representation for `Empty` is empty JSON object `{}`.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The labels for the session.\\n\\n * Label keys must be between 1 and 63 characters long and must conform to\\n   the following regular expression: `[a-z]([-a-z0-9]*[a-z0-9])?`.\\n * Label values must be between 0 and 63 characters long and must conform\\n   to the regular expression `([a-z]([-a-z0-9]*[a-z0-9])?)?`.\\n * No more than 64 labels can be associated with a given session.\\n\\nSee https://goo.gl/xmQnxf for more information on and examples of labels.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"description\":\"Service-specific metadata associated with the operation.  It typically\\ncontains progress information and common metadata such as create time.\\nSome services might not provide such metadata.  Any method that returns a\\nlong-running operation should document the metadata type, if any.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"description\":\"The normal response of the operation in case of success.  If the original\\nmethod returns no data on success, such as `Delete`, the response is\\n`google.protobuf.Empty`.  If the original method is standard\\n`Get`/`Create`/`Update`, the response should be the resource.  For other\\nmethods, the response should have the type `XxxResponse`, where `Xxx`\\nis the original method name.  For example, if the original method name\\nis `TakeSnapshot()`, the inferred response type is\\n`TakeSnapshotResponse`.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Cloud Labels are a flexible and lightweight mechanism for organizing cloud\\nresources into groups that reflect a customer's organizational needs and\\ndeployment strategies. Cloud Labels can be used to filter collections of\\nresources. They can be used to control how resource metrics are aggregated.\\nAnd they can be used as arguments to policy management rules (e.g. route,\\nfirewall, load balancing, etc.).\\n\\n * Label keys must be between 1 and 63 characters long and must conform to\\n   the following regular expression: `[a-z]([-a-z0-9]*[a-z0-9])?`.\\n * Label values must be between 0 and 63 characters long and must conform\\n   to the regular expression `([a-z]([-a-z0-9]*[a-z0-9])?)?`.\\n * No more than 64 labels can be associated with a given resource.\\n\\nSee https://goo.gl/xmQnxf for more information on and examples of labels.\\n\\nIf you plan to use labels in your own code, please note that additional\\ncharacters may be allowed in the future. And so you are advised to use an\\ninternal label representation, such as JSON, which doesn't rely upon\\nspecific characters being disallowed.  For example, representing labels\\nas the string:  name + \\\"_\\\" + value  would prove problematic if we were to\\nallow \\\"_\\\" in a future release.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The labels for the session.\\n\\n * Label keys must be between 1 and 63 characters long and must conform to\\n   the following regular expression: `[a-z]([-a-z0-9]*[a-z0-9])?`.\\n * Label values must be between 0 and 63 characters long and must conform\\n   to the regular expression `([a-z]([-a-z0-9]*[a-z0-9])?)?`.\\n * No more than 64 labels can be associated with a given session.\\n\\nSee https://goo.gl/xmQnxf for more information on and examples of labels.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Cloud Labels are a flexible and lightweight mechanism for organizing cloud\\nresources into groups that reflect a customer's organizational needs and\\ndeployment strategies. Cloud Labels can be used to filter collections of\\nresources. They can be used to control how resource metrics are aggregated.\\nAnd they can be used as arguments to policy management rules (e.g. route,\\nfirewall, load balancing, etc.).\\n\\n * Label keys must be between 1 and 63 characters long and must conform to\\n   the following regular expression: `[a-z]([-a-z0-9]*[a-z0-9])?`.\\n * Label values must be between 0 and 63 characters long and must conform\\n   to the regular expression `([a-z]([-a-z0-9]*[a-z0-9])?)?`.\\n * No more than 64 labels can be associated with a given resource.\\n\\nSee https://goo.gl/xmQnxf for more information on and examples of labels.\\n\\nIf you plan to use labels in your own code, please note that additional\\ncharacters may be allowed in the future. And so you are advised to use an\\ninternal label representation, such as JSON, which doesn't rely upon\\nspecific characters being disallowed.  For example, representing labels\\nas the string:  name + \\\"_\\\" + value  would prove problematic if we were to\\nallow \\\"_\\\" in a future release.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Message type to initiate a read-write transaction. Currently this\\ntransaction type has no options.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/Type\"},\"description\":\"It is not always possible for Cloud Spanner to infer the right SQL type\\nfrom a JSON value.  For example, values of type `BYTES` and values\\nof type `STRING` both appear in params as JSON strings.\\n\\nIn these cases, `param_types` can be used to specify the exact\\nSQL type for some or all of the SQL query parameters. See the\\ndefinition of Type for more information\\nabout SQL types.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object.\"},\"description\":\"The SQL query string can contain parameter placeholders. A parameter\\nplaceholder consists of `'@'` followed by the parameter\\nname. Parameter names consist of any combination of letters,\\nnumbers, and underscores.\\n\\nParameters can appear anywhere that a literal value is expected.  The same\\nparameter name can be used more than once, for example:\\n  `\\\"WHERE id > @msg_id AND id < @msg_id + 100\\\"`\\n\\nIt is an error to execute an SQL query with unbound parameters.\\n\\nParameter values are specified using `params`, which is a JSON\\nobject whose keys are parameter names, and whose values are the\\ncorresponding parameter values.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object.\"},\"description\":\"Aggregated statistics from the execution of the query. Only present when\\nthe query is profiled. For example, a query could return the statistics as\\nfollows:\\n\\n    {\\n      \\\"rows_returned\\\": \\\"3\\\",\\n      \\\"elapsed_time\\\": \\\"1.22 secs\\\",\\n      \\\"cpu_time\\\": \\\"1.19 secs\\\"\\n    }\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object.\"},\"description\":\"The execution statistics associated with the node, contained in a group of\\nkey-value pairs. Only present if the plan was returned as a result of a\\nprofile query. For example, number of executions, number of rows/time per\\nexecution etc.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object.\"},\"description\":\"Attributes relevant to the node contained in a group of key-value pairs.\\nFor example, a Parameter Reference node could have the following\\ninformation in its metadata:\\n\\n    {\\n      \\\"parameter_reference\\\": \\\"param1\\\",\\n      \\\"parameter_type\\\": \\\"array\\\"\\n    }\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"format\":\"int32\",\"type\":\"integer\"},\"description\":\"A mapping of (subquery variable name) -> (subquery node id) for cases\\nwhere the `description` string of this node references a `SCALAR`\\nsubquery contained in the expression subtree rooted at this node. The\\nreferenced `SCALAR` subquery may not necessarily be a direct child of\\nthis node.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 22,
        "numOpsQuery": 6,
        "numOpsMutation": 16,
        "numQueriesCreated": 6,
        "numMutationsCreated": 16
      }
    },
    {
      "name": "Google Spectrum Database",
      "report": {
        "warnings": [],
        "numOps": 6,
        "numOpsQuery": 0,
        "numOpsMutation": 6,
        "numQueriesCreated": 0,
        "numMutationsCreated": 6
      }
    },
    {
      "name": "Google Cloud Speech",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated\\nempty messages in your APIs. A typical example is to use it as the request\\nor the response type of an API method. For instance:\\n\\n    service Foo {\\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n    }\\n\\nThe JSON representation for `Empty` is empty JSON object `{}`.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated\\nempty messages in your APIs. A typical example is to use it as the request\\nor the response type of an API method. For instance:\\n\\n    service Foo {\\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n    }\\n\\nThe JSON representation for `Empty` is empty JSON object `{}`.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The request message for Operations.CancelOperation.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"description\":\"Service-specific metadata associated with the operation.  It typically\\ncontains progress information and common metadata such as create time.\\nSome services might not provide such metadata.  Any method that returns a\\nlong-running operation should document the metadata type, if any.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"description\":\"The normal response of the operation in case of success.  If the original\\nmethod returns no data on success, such as `Delete`, the response is\\n`google.protobuf.Empty`.  If the original method is standard\\n`Get`/`Create`/`Update`, the response should be the resource.  For other\\nmethods, the response should have the type `XxxResponse`, where `Xxx`\\nis the original method name.  For example, if the original method name\\nis `TakeSnapshot()`, the inferred response type is\\n`TakeSnapshotResponse`.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 6,
        "numOpsQuery": 2,
        "numOpsMutation": 4,
        "numQueriesCreated": 2,
        "numMutationsCreated": 4
      }
    },
    {
      "name": "Google Cloud Speech",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated\\nempty messages in your APIs. A typical example is to use it as the request\\nor the response type of an API method. For instance:\\n\\n    service Foo {\\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n    }\\n\\nThe JSON representation for `Empty` is empty JSON object `{}`.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated\\nempty messages in your APIs. A typical example is to use it as the request\\nor the response type of an API method. For instance:\\n\\n    service Foo {\\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n    }\\n\\nThe JSON representation for `Empty` is empty JSON object `{}`.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"description\":\"Service-specific metadata associated with the operation.  It typically\\ncontains progress information and common metadata such as create time.\\nSome services might not provide such metadata.  Any method that returns a\\nlong-running operation should document the metadata type, if any.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"description\":\"The normal response of the operation in case of success.  If the original\\nmethod returns no data on success, such as `Delete`, the response is\\n`google.protobuf.Empty`.  If the original method is standard\\n`Get`/`Create`/`Update`, the response should be the resource.  For other\\nmethods, the response should have the type `XxxResponse`, where `Xxx`\\nis the original method name.  For example, if the original method name\\nis `TakeSnapshot()`, the inferred response type is\\n`TakeSnapshotResponse`.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 6,
        "numOpsQuery": 2,
        "numOpsMutation": 4,
        "numQueriesCreated": 2,
        "numMutationsCreated": 4
      }
    },
    {
      "name": "Cloud SQL Administration",
      "report": {
        "warnings": [],
        "numOps": 23,
        "numOpsQuery": 10,
        "numOpsMutation": 13,
        "numQueriesCreated": 10,
        "numMutationsCreated": 13
      }
    },
    {
      "name": "Cloud SQL Administration",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"An individual label entry, composed of a key and a value.\",\"type\":\"string\"},\"description\":\"User-provided labels, represented as a dictionary where each label is a single key value pair.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"An individual label entry, composed of a key and a value.\",\"type\":\"string\"},\"description\":\"User-provided labels, represented as a dictionary where each label is a single key value pair.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 39,
        "numOpsQuery": 13,
        "numOpsMutation": 26,
        "numQueriesCreated": 13,
        "numMutationsCreated": 26
      }
    },
    {
      "name": "Cloud Storage",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /b/{bucket}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /b/{bucket}/acl/{entity}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /b/{bucket}/defaultObjectAcl/{entity}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /b/{bucket}/notificationConfigs/{notification}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /b/{bucket}/o/{object}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /b/{bucket}/o/{object}/acl/{entity}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /channels/stop' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"An individual label entry.\",\"type\":\"string\"},\"description\":\"User-provided labels, in key/value pairs.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"An optional list of additional attributes to attach to each Cloud PubSub message published for this notification subscription.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"An individual metadata entry.\",\"type\":\"string\"},\"description\":\"User-provided metadata, in key/value pairs.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"An individual label entry.\",\"type\":\"string\"},\"description\":\"User-provided labels, in key/value pairs.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"An optional list of additional attributes to attach to each Cloud PubSub message published for this notification subscription.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Declares a new parameter by name.\",\"type\":\"string\"},\"description\":\"Additional parameters controlling delivery channel behavior. Optional.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Declares a new parameter by name.\",\"type\":\"string\"},\"description\":\"Additional parameters controlling delivery channel behavior. Optional.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"An individual metadata entry.\",\"type\":\"string\"},\"description\":\"User-provided metadata, in key/value pairs.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 42,
        "numOpsQuery": 17,
        "numOpsMutation": 25,
        "numQueriesCreated": 17,
        "numMutationsCreated": 18
      }
    },
    {
      "name": "Cloud Storage",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /b/{bucket}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /b/{bucket}/acl/{entity}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /b/{bucket}/o/{object}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /b/{bucket}/o/{object}/acl/{entity}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"An individual metadata entry.\",\"type\":\"string\"},\"description\":\"User-provided metadata, in key/value pairs.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"An individual metadata entry.\",\"type\":\"string\"},\"description\":\"User-provided metadata, in key/value pairs.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 20,
        "numOpsQuery": 8,
        "numOpsMutation": 12,
        "numQueriesCreated": 8,
        "numMutationsCreated": 8
      }
    },
    {
      "name": "Cloud Storage",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /b/{bucket}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /b/{bucket}/acl/{entity}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /b/{bucket}/defaultObjectAcl/{entity}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /b/{bucket}/o/{object}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /b/{bucket}/o/{object}/acl/{entity}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /channels/stop' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"An individual metadata entry.\",\"type\":\"string\"},\"description\":\"User-provided metadata, in key/value pairs.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Declares a new parameter by name.\",\"type\":\"string\"},\"description\":\"Additional parameters controlling delivery channel behavior. Optional.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Declares a new parameter by name.\",\"type\":\"string\"},\"description\":\"Additional parameters controlling delivery channel behavior. Optional.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"An individual metadata entry.\",\"type\":\"string\"},\"description\":\"User-provided metadata, in key/value pairs.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 29,
        "numOpsQuery": 10,
        "numOpsMutation": 19,
        "numQueriesCreated": 10,
        "numMutationsCreated": 13
      }
    },
    {
      "name": "Google Storage Transfer",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated\\nempty messages in your APIs. A typical example is to use it as the request\\nor the response type of an API method. For instance:\\n\\n    service Foo {\\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n    }\\n\\nThe JSON representation for `Empty` is empty JSON object `{}`.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated\\nempty messages in your APIs. A typical example is to use it as the request\\nor the response type of an API method. For instance:\\n\\n    service Foo {\\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n    }\\n\\nThe JSON representation for `Empty` is empty JSON object `{}`.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated\\nempty messages in your APIs. A typical example is to use it as the request\\nor the response type of an API method. For instance:\\n\\n    service Foo {\\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n    }\\n\\nThe JSON representation for `Empty` is empty JSON object `{}`.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Request passed to PauseTransferOperation.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated\\nempty messages in your APIs. A typical example is to use it as the request\\nor the response type of an API method. For instance:\\n\\n    service Foo {\\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n    }\\n\\nThe JSON representation for `Empty` is empty JSON object `{}`.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Request passed to ResumeTransferOperation.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"description\":\"Represents the transfer operation object.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"description\":\"The normal response of the operation in case of success.  If the original\\nmethod returns no data on success, such as `Delete`, the response is\\n`google.protobuf.Empty`.  If the original method is standard\\n`Get`/`Create`/`Update`, the response should be the resource.  For other\\nmethods, the response should have the type `XxxResponse`, where `Xxx`\\nis the original method name.  For example, if the original method name\\nis `TakeSnapshot()`, the inferred response type is\\n`TakeSnapshotResponse`.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 9,
        "numOpsQuery": 4,
        "numOpsMutation": 5,
        "numQueriesCreated": 4,
        "numMutationsCreated": 5
      }
    },
    {
      "name": "Street View Publish",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated\\nempty messages in your APIs. A typical example is to use it as the request\\nor the response type of an API method. For instance:\\n\\n    service Foo {\\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n    }\\n\\nThe JSON representation for `Empty` is empty JSON object `{}`.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated\\nempty messages in your APIs. A typical example is to use it as the request\\nor the response type of an API method. For instance:\\n\\n    service Foo {\\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n    }\\n\\nThe JSON representation for `Empty` is empty JSON object `{}`.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 9,
        "numOpsQuery": 3,
        "numOpsMutation": 6,
        "numQueriesCreated": 3,
        "numMutationsCreated": 6
      }
    },
    {
      "name": "Surveys",
      "report": {
        "warnings": [],
        "numOps": 11,
        "numOpsQuery": 5,
        "numOpsMutation": 6,
        "numQueriesCreated": 5,
        "numMutationsCreated": 6
      }
    },
    {
      "name": "Tag Manager",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /accounts/{accountId}/containers/{containerId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /accounts/{accountId}/containers/{containerId}/environments/{environmentId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /accounts/{accountId}/containers/{containerId}/folders/{folderId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /accounts/{accountId}/containers/{containerId}/move_folders/{folderId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /accounts/{accountId}/containers/{containerId}/tags/{tagId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /accounts/{accountId}/containers/{containerId}/triggers/{triggerId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /accounts/{accountId}/containers/{containerId}/variables/{variableId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /accounts/{accountId}/containers/{containerId}/versions/{containerVersionId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /accounts/{accountId}/permissions/{permissionId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 49,
        "numOpsQuery": 19,
        "numOpsMutation": 30,
        "numQueriesCreated": 19,
        "numMutationsCreated": 21
      }
    },
    {
      "name": "TaskQueue",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /{project}/taskqueues/{taskqueue}/tasks/{task}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 5,
        "numOpsQuery": 3,
        "numOpsMutation": 2,
        "numQueriesCreated": 3,
        "numMutationsCreated": 1
      }
    },
    {
      "name": "TaskQueue",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /{project}/taskqueues/{taskqueue}/tasks/{task}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 7,
        "numOpsQuery": 3,
        "numOpsMutation": 4,
        "numQueriesCreated": 3,
        "numMutationsCreated": 3
      }
    },
    {
      "name": "Tasks",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /lists/{tasklist}/clear' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /lists/{tasklist}/tasks/{task}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /users/@me/lists/{tasklist}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 12,
        "numOpsQuery": 4,
        "numOpsMutation": 8,
        "numQueriesCreated": 4,
        "numMutationsCreated": 5
      }
    },
    {
      "name": "Google Cloud Testing",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Specifies an intent that starts the main launcher activity.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Enables automatic Google account login.\\nIf set, the service will automatically generate a Google test account and add\\nit to the device, before executing the test. Note that test accounts might be\\nreused.\\nMany applications show their full set of functionalities when an account is\\npresent on the device. Logging into the device with these generated accounts\\nallows testing more functionalities.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Specifies an intent that starts the main launcher activity.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Enables automatic Google account login.\\nIf set, the service will automatically generate a Google test account and add\\nit to the device, before executing the test. Note that test accounts might be\\nreused.\\nMany applications show their full set of functionalities when an account is\\npresent on the device. Logging into the device with these generated accounts\\nallows testing more functionalities.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 4,
        "numOpsQuery": 2,
        "numOpsMutation": 2,
        "numQueriesCreated": 2,
        "numMutationsCreated": 2
      }
    },
    {
      "name": "Cloud Tool Results",
      "report": {
        "warnings": [],
        "numOps": 22,
        "numOpsQuery": 14,
        "numOpsMutation": 8,
        "numQueriesCreated": 14,
        "numMutationsCreated": 8
      }
    },
    {
      "name": "Cloud Tool Results firstparty",
      "report": {
        "warnings": [],
        "numOps": 22,
        "numOpsQuery": 14,
        "numOpsMutation": 8,
        "numQueriesCreated": 14,
        "numMutationsCreated": 8
      }
    },
    {
      "name": "Cloud TPU",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated\\nempty messages in your APIs. A typical example is to use it as the request\\nor the response type of an API method. For instance:\\n\\n    service Foo {\\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n    }\\n\\nThe JSON representation for `Empty` is empty JSON object `{}`.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Request for ResetNode.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Cross-service attributes for the location. For example\\n\\n    {\\\"cloud.googleapis.com/region\\\": \\\"us-east1\\\"}\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"description\":\"Service-specific metadata. For example the available capacity at the given\\nlocation.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"description\":\"Service-specific metadata associated with the operation.  It typically\\ncontains progress information and common metadata such as create time.\\nSome services might not provide such metadata.  Any method that returns a\\nlong-running operation should document the metadata type, if any.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"description\":\"The normal response of the operation in case of success.  If the original\\nmethod returns no data on success, such as `Delete`, the response is\\n`google.protobuf.Empty`.  If the original method is standard\\n`Get`/`Create`/`Update`, the response should be the resource.  For other\\nmethods, the response should have the type `XxxResponse`, where `Xxx`\\nis the original method name.  For example, if the original method name\\nis `TakeSnapshot()`, the inferred response type is\\n`TakeSnapshotResponse`.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 9,
        "numOpsQuery": 4,
        "numOpsMutation": 5,
        "numQueriesCreated": 4,
        "numMutationsCreated": 5
      }
    },
    {
      "name": "Stackdriver Trace",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated\\nempty messages in your APIs. A typical example is to use it as the request\\nor the response type of an API method. For instance:\\n\\n    service Foo {\\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n    }\\n\\nThe JSON representation for `Empty` is empty JSON object `{}`.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/AttributeValue\"},\"description\":\"The set of attributes. Each attribute's key can be up to 128 bytes\\nlong. The value can be a string up to 256 bytes, an integer, or the\\nBoolean values `true` and `false`. For example:\\n\\n    \\\"/instance_id\\\": \\\"my-instance\\\"\\n    \\\"/http/user_agent\\\": \\\"\\\"\\n    \\\"/http/request_bytes\\\": 300\\n    \\\"abc.com/myattribute\\\": true\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/AttributeValue\"},\"description\":\"The set of attributes. Each attribute's key can be up to 128 bytes\\nlong. The value can be a string up to 256 bytes, an integer, or the\\nBoolean values `true` and `false`. For example:\\n\\n    \\\"/instance_id\\\": \\\"my-instance\\\"\\n    \\\"/http/user_agent\\\": \\\"\\\"\\n    \\\"/http/request_bytes\\\": 300\\n    \\\"abc.com/myattribute\\\": true\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 4,
        "numOpsQuery": 2,
        "numOpsMutation": 2,
        "numQueriesCreated": 2,
        "numMutationsCreated": 2
      }
    },
    {
      "name": "Google Cloud Translation",
      "report": {
        "warnings": [],
        "numOps": 5,
        "numOpsQuery": 3,
        "numOpsMutation": 2,
        "numQueriesCreated": 3,
        "numMutationsCreated": 2
      }
    },
    {
      "name": "URL Shortener",
      "report": {
        "warnings": [],
        "numOps": 3,
        "numOpsQuery": 2,
        "numOpsMutation": 1,
        "numQueriesCreated": 2,
        "numMutationsCreated": 1
      }
    },
    {
      "name": "Google Vault",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated\\nempty messages in your APIs. A typical example is to use it as the request\\nor the response type of an API method. For instance:\\n\\n    service Foo {\\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n    }\\n\\nThe JSON representation for `Empty` is empty JSON object `{}`.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated\\nempty messages in your APIs. A typical example is to use it as the request\\nor the response type of an API method. For instance:\\n\\n    service Foo {\\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n    }\\n\\nThe JSON representation for `Empty` is empty JSON object `{}`.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Close a matter by ID.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated\\nempty messages in your APIs. A typical example is to use it as the request\\nor the response type of an API method. For instance:\\n\\n    service Foo {\\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n    }\\n\\nThe JSON representation for `Empty` is empty JSON object `{}`.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Reopen a matter by ID.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Undelete a matter by ID.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 18,
        "numOpsQuery": 5,
        "numOpsMutation": 13,
        "numQueriesCreated": 5,
        "numMutationsCreated": 13
      }
    },
    {
      "name": "Cloud Video Intelligence",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"description\":\"Service-specific metadata associated with the operation.  It typically\\ncontains progress information and common metadata such as create time.\\nSome services might not provide such metadata.  Any method that returns a\\nlong-running operation should document the metadata type, if any.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"description\":\"The normal response of the operation in case of success.  If the original\\nmethod returns no data on success, such as `Delete`, the response is\\n`google.protobuf.Empty`.  If the original method is standard\\n`Get`/`Create`/`Update`, the response should be the resource.  For other\\nmethods, the response should have the type `XxxResponse`, where `Xxx`\\nis the original method name.  For example, if the original method name\\nis `TakeSnapshot()`, the inferred response type is\\n`TakeSnapshotResponse`.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 1,
        "numOpsQuery": 0,
        "numOpsMutation": 1,
        "numQueriesCreated": 0,
        "numMutationsCreated": 1
      }
    },
    {
      "name": "Google Cloud Vision",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 1,
        "numOpsQuery": 0,
        "numOpsMutation": 1,
        "numQueriesCreated": 0,
        "numMutationsCreated": 1
      }
    },
    {
      "name": "Google Cloud Vision",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Properties of the object. Contains field @type with type URL.\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 1,
        "numOpsQuery": 0,
        "numOpsMutation": 1,
        "numQueriesCreated": 0,
        "numMutationsCreated": 1
      }
    },
    {
      "name": "Google Fonts Developer",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"The font file URL (value) for an specific variant (key).\",\"type\":\"string\"},\"description\":\"The font files (with all supported scripts) for each one of the available variants, as a key : value map.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 1,
        "numOpsQuery": 1,
        "numOpsMutation": 0,
        "numQueriesCreated": 1,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Search Console",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /sites/{siteUrl}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /sites/{siteUrl}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /sites/{siteUrl}/sitemaps/{feedpath}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /sites/{siteUrl}/sitemaps/{feedpath}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /sites/{siteUrl}/urlCrawlErrorsSamples/{url}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 13,
        "numOpsQuery": 7,
        "numOpsMutation": 6,
        "numQueriesCreated": 7,
        "numMutationsCreated": 1
      }
    },
    {
      "name": "YouTube Analytics",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /groupItems' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /groups' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 8,
        "numOpsQuery": 3,
        "numOpsMutation": 5,
        "numQueriesCreated": 3,
        "numMutationsCreated": 3
      }
    },
    {
      "name": "YouTube Analytics",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /groupItems' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /groups' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 8,
        "numOpsQuery": 3,
        "numOpsMutation": 5,
        "numQueriesCreated": 3,
        "numMutationsCreated": 3
      }
    },
    {
      "name": "YouTube Reporting",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A generic empty message that you can re-use to avoid defining duplicated\\nempty messages in your APIs. A typical example is to use it as the request\\nor the response type of an API method. For instance:\\n\\n    service Foo {\\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\\n    }\\n\\nThe JSON representation for `Empty` is empty JSON object `{}`.\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 8,
        "numOpsQuery": 6,
        "numOpsMutation": 2,
        "numQueriesCreated": 6,
        "numMutationsCreated": 2
      }
    },
    {
      "name": "BC Data Catalogue",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /action/organization_activity_list' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /action/organization_activity_list_html' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /action/organization_autocomplete' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /action/organization_follower_count' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /action/organization_follower_list' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /action/organization_list' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /action/organization_list_for_user' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /action/organization_revision_list' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /action/organization_show' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /action/package_activity_list' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /action/package_activity_list_html' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /action/package_autocomplete' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /action/package_list' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /action/package_relationships_list' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /action/package_revision_list' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /action/package_search' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /action/package_show' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /action/related_list' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /action/resource_search' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /action/resource_show' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /action/status_show' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /action/tag_list' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 22,
        "numOpsQuery": 22,
        "numOpsMutation": 0,
        "numQueriesCreated": 0,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "BC Geographical Names Web Service -",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /featureCategories' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /featureClasses' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /featureTypes' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /features/{featureId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /nameAuthorities' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /names/changes' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /names/decisions/recent' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /names/decisions/year' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /names/inside' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /names/near' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /names/notOfficial/search' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /names/official/search' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /names/search' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /names/{nameId}.{outputFormat}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 14,
        "numOpsQuery": 14,
        "numOpsMutation": 0,
        "numQueriesCreated": 0,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Geocoder",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /addresses.{outputFormat}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /intersections/near.{outputFormat}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /intersections/nearest.{outputFormat}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /intersections/within.{outputFormat}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /intersections/{intersectionID}.{outputFormat}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /occupants/addresses.{outputFormat}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /occupants/near.{outputFormat}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /occupants/nearest.{outputFormat}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /occupants/within.{outputFormat}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /occupants/{occupantID}.{outputFormat}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /sites/near.{outputFormat}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /sites/nearest.{outputFormat}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /sites/within.{outputFormat}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /sites/{siteID}.{outputFormat}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /sites/{siteID}/subsites.{outputFormat}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 15,
        "numOpsQuery": 15,
        "numOpsMutation": 0,
        "numQueriesCreated": 0,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "GeoMark Web Service",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /geomarks/copy' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /geomarks/new' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /geomarks/{geomarkId}.{fileFormatExtension}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /geomarks/{geomarkId}/boundingBox.{fileFormatExtension}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /geomarks/{geomarkId}/feature.{fileFormatExtension}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /geomarks/{geomarkId}/parts.{fileFormatExtension}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /geomarks/{geomarkId}/point.{fileFormatExtension}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 7,
        "numOpsQuery": 5,
        "numOpsMutation": 2,
        "numQueriesCreated": 0,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "WorkBC Job Posting",
      "report": {
        "warnings": [],
        "numOps": 5,
        "numOpsQuery": 4,
        "numOpsMutation": 1,
        "numQueriesCreated": 4,
        "numMutationsCreated": 1
      }
    },
    {
      "name": "DriveBC's Open511",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /areas' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /events' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /jurisdiction' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /jurisdictiongeography' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 4,
        "numOpsQuery": 4,
        "numOpsMutation": 0,
        "numQueriesCreated": 0,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "BC Route Planner",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /directions.{outputFormat}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /distance.{outputFormat}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /distance/betweenPairs.{outputFormat}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /route.{outputFormat}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 4,
        "numOpsQuery": 4,
        "numOpsMutation": 0,
        "numQueriesCreated": 0,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Route Optimization",
      "report": {
        "warnings": [],
        "numOps": 2,
        "numOpsQuery": 1,
        "numOpsMutation": 1,
        "numQueriesCreated": 1,
        "numMutationsCreated": 1
      }
    },
    {
      "name": "Metadata",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /h5/metadata/campaign-missions' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /h5/metadata/commendations' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /h5/metadata/csr-designations' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /h5/metadata/enemies' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /h5/metadata/flexible-stats' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /h5/metadata/game-base-variants' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /h5/metadata/game-variants/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /h5/metadata/impulses' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /h5/metadata/map-variants/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /h5/metadata/maps' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /h5/metadata/medals' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /h5/metadata/playlists' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /h5/metadata/requisition-packs/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /h5/metadata/requisitions/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /h5/metadata/seasons' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /h5/metadata/skulls' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /h5/metadata/spartan-ranks' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /h5/metadata/team-colors' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /h5/metadata/vehicles' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /h5/metadata/weapons' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /hw2/campaign-levels' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /hw2/campaign-logs' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /hw2/card-keywords' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /hw2/cards' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /hw2/csr-designations' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /hw2/difficulties' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /hw2/game-object-categories' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /hw2/game-objects' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /hw2/leader-powers' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /hw2/leaders' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /hw2/maps' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /hw2/packs' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /hw2/playlists' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /hw2/seasons' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /hw2/spartan-ranks' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /hw2/techs' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 36,
        "numOpsQuery": 36,
        "numOpsMutation": 0,
        "numQueriesCreated": 0,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Profile",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /h5/profiles/{player}/appearance' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /h5/profiles/{player}/emblem' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /h5/profiles/{player}/spartan' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 3,
        "numOpsQuery": 3,
        "numOpsMutation": 0,
        "numQueriesCreated": 0,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Stats",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /h5/arena/matches/{matchId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /h5/campaign/matches/{matchId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /h5/companies/{companyId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /h5/companies/{companyId}/commendations' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /h5/custom/matches/{matchId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /h5/customlocal/matches/{matchId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /h5/matches/{matchId}/events' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /h5/player-leaderboards/csr/{seasonId}/{playlistId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /h5/players/{player}/commendations' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /h5/players/{player}/matches' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /h5/servicerecords/arena' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /h5/servicerecords/campaign' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /h5/servicerecords/custom' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /h5/servicerecords/customlocal' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /h5/servicerecords/warzone' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /h5/warzone/matches/{matchId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /h5pc/custom/matches/{matchId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /h5pc/players/{player}/matches' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /h5pc/servicerecords/custom' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /hw2/matches/{matchId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /hw2/matches/{matchId}/events' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /hw2/player-leaderboards/csr/{seasonId}/{playlistId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /hw2/players/{player}/campaign-progress' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /hw2/players/{player}/matches' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /hw2/players/{player}/stats' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /hw2/players/{player}/stats/seasons/{seasonId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /hw2/playlist/{playlistId}/rating' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /hw2/xp' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 28,
        "numOpsQuery": 28,
        "numOpsMutation": 0,
        "numQueriesCreated": 0,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "UGC",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /h5/players/{player}/gamevariants' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /h5/players/{player}/gamevariants/{variant}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /h5/players/{player}/mapvariants' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /h5/players/{player}/mapvariants/{variant}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 4,
        "numOpsQuery": 4,
        "numOpsMutation": 0,
        "numQueriesCreated": 0,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "HHS Media Services",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /resources/media/{id}/embed.json' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /resources/media/{id}/preview.jpg' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /resources/media/{id}/thumbnail.jpg' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 32,
        "numOpsQuery": 32,
        "numOpsMutation": 0,
        "numQueriesCreated": 29,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Icons8",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 7,
        "numOpsQuery": 5,
        "numOpsMutation": 2,
        "numQueriesCreated": 5,
        "numMutationsCreated": 2
      }
    },
    {
      "name": "Active Documentation for /v1",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /iatu/balance' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /iatu/charges/reports/all' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /iatu/charges/reports/all.csv' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /iatu/number-validator' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /iatu/products/promotions' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /iatu/products/reports/all' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /iatu/products/reports/all.csv' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /iatu/products/reports/local-value' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /iatu/topups' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '201'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /iatu/topups' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /iatu/topups/reports' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /iatu/topups/reports/all' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /iatu/topups/reports/all.csv' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /iatu/topups/reports/totals' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /iatu/topups/reverse' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /status' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 15,
        "numOpsQuery": 12,
        "numOpsMutation": 3,
        "numQueriesCreated": 0,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Mailsquad",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /contacts/lists/{listid}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /contacts/lists/{listid}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /contacts/{contactid}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /contacts/{contactid}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /subscription/{listid}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Dictionnary of field key to value\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 8,
        "numOpsQuery": 2,
        "numOpsMutation": 6,
        "numQueriesCreated": 2,
        "numMutationsCreated": 1
      }
    },
    {
      "name": "Infermedica",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ids of child observations grouped by their relation with this observation\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"object\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"object\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 9,
        "numOpsQuery": 8,
        "numOpsMutation": 1,
        "numQueriesCreated": 8,
        "numMutationsCreated": 1
      }
    },
    {
      "name": "Instagram",
      "report": {
        "warnings": [],
        "numOps": 27,
        "numOpsQuery": 22,
        "numOpsMutation": 5,
        "numQueriesCreated": 22,
        "numMutationsCreated": 5
      }
    },
    {
      "name": "Instawell",
      "report": {
        "warnings": [],
        "numOps": 8,
        "numOpsQuery": 5,
        "numOpsMutation": 3,
        "numQueriesCreated": 5,
        "numMutationsCreated": 3
      }
    },
    {
      "name": "API iSendPro",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /campagne' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /getlistenoire' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 11,
        "numOpsQuery": 2,
        "numOpsMutation": 9,
        "numQueriesCreated": 1,
        "numMutationsCreated": 8
      }
    },
    {
      "name": "Entertainment Express",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Analytics/City/' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Analytics/City/' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Analytics/Country/' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Analytics/Country/' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Analytics/EngagementActions/' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Analytics/EngagementActions/' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Analytics/EngagementTimes/' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Analytics/EngagementTimes/' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Analytics/GBUsage/' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Analytics/GBUsage/' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Analytics/MostActive/' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Analytics/MostActive/' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Analytics/PlatformHardware/' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Analytics/PlatformHardware/' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Analytics/PlatformOS/' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Analytics/PlatformOS/' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Analytics/RecentVisitors/' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Analytics/RecentVisitors/' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Analytics/Summary/' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Analytics/Summary/' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Analytics/TitleReport/' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Analytics/TitleReport/' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Analytics/VideoLog/' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Analytics/VideoLog/' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Analytics/Viewers/' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Analytics/Viewers/' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Analytics/Views/' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Analytics/Views/' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Analytics/WebBrowsers/' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Analytics/WebBrowsers/' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Changes/Episodes/History/' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Changes/Episodes/History/' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Changes/Episodes/HistoryWithEntity/' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Changes/Episodes/HistoryWithEntity/' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Changes/Movies/History/' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Changes/Movies/History/' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Changes/Movies/HistoryWithEntity/' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Changes/Movies/HistoryWithEntity/' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Changes/People/History/' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Changes/People/History/' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Changes/People/HistoryWithEntity/' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Changes/People/HistoryWithEntity/' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Changes/Seasons/History/' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Changes/Seasons/History/' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Changes/Seasons/HistoryWithEntity/' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Changes/Seasons/HistoryWithEntity/' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Changes/Shows/History/' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Changes/Shows/History/' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Changes/Shows/HistoryWithEntity/' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Changes/Shows/HistoryWithEntity/' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Charts/Movies/Boxoffice' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Charts/Movies/Boxoffice' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Charts/Movies/MostAnticipated' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Charts/Movies/MostAnticipated' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Charts/Movies/Popular' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Charts/Movies/Popular' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Charts/People/Popular' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Charts/People/Popular' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Charts/Shows/Popular' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Charts/Shows/Popular' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Common/Companies/' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Common/Companies/' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Common/Countries/' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Common/Countries/' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Common/ImageTypes/' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Common/ImageTypes/' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Common/Languages/' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Common/Languages/' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Common/Tags/' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Common/Tags/' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Common/VideoTypes/' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Common/VideoTypes/' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /ExternalIds/GracenoteMovie' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /ExternalIds/GracenoteMovie' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /ExternalIds/GracenoteShow' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /ExternalIds/GracenoteShow' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /ExternalIds/ImdbMovie' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /ExternalIds/ImdbMovie' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /ExternalIds/ImdbShow' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /ExternalIds/ImdbShow' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /ExternalIds/RoviMovie' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /ExternalIds/RoviMovie' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /ExternalIds/RoviShow' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /ExternalIds/RoviShow' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /ExternalIds/TmdbMovie' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /ExternalIds/TmdbMovie' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /ExternalIds/TmdbShow' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /ExternalIds/TmdbShow' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /ExternalIds/Webedia' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /ExternalIds/Webedia' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Find/Movie/' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Find/Movie/' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Find/Show/' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Find/Show/' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /GoWatchIt/Episodes/{Id}/Availabilities' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /GoWatchIt/Episodes/{Id}/Availabilities' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /GoWatchIt/Movies/{Id}/Availabilities' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /GoWatchIt/Movies/{Id}/Availabilities' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /GoWatchIt/Seasons/{Id}/Availabilities' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /GoWatchIt/Seasons/{Id}/Availabilities' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /GoWatchIt/Shows/{Id}/Availabilities' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /GoWatchIt/Shows/{Id}/Availabilities' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /Images/Batch' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /Images/Batch' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /Images/ScreenCaptures/Batch' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /Images/ScreenCaptures/Batch' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Images/ScreenCaptures/Redirect' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Images/ScreenCaptures/Redirect' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Images/{FilePath}/Redirect' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Images/{FilePath}/Redirect' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Metacritic/Movie/{Id}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Metacritic/Movie/{Id}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Metacritic/TV/{Id}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Metacritic/TV/{Id}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /MovieTickets/Cultures' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /MovieTickets/Cultures' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /MovieTickets/Movies/ComingSoon' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /MovieTickets/Movies/ComingSoon' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /MovieTickets/Movies/NowPlaying' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /MovieTickets/Movies/NowPlaying' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /MovieTickets/Performances' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /MovieTickets/Performances' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /MovieTickets/Theaters' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /MovieTickets/Theaters' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Movies/All' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Movies/All' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Movies/AlternateIdTypes' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Movies/AlternateIdTypes' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Movies/ComingSoon/' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Movies/ComingSoon/' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Movies/InTheaters/' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Movies/InTheaters/' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Movies/Match/' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Movies/Match/' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Movies/MovieCertifications' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Movies/MovieCertifications' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Movies/MovieGenres' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Movies/MovieGenres' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Movies/ReleaseTypes' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Movies/ReleaseTypes' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Movies/SearchAndDiscover' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Movies/SearchAndDiscover' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Movies/{Id}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Movies/{Id}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /People/All' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /People/All' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /People/RankedSearch/' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /People/RankedSearch/' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /People/{Id}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /People/{Id}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /People/{Id}/Filmography' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /People/{Id}/Filmography' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /SDKs/{Client}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /SDKs/{Client}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Shows/All' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Shows/All' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Shows/AlternateIdTypes' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Shows/AlternateIdTypes' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Shows/Match/' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Shows/Match/' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Shows/ReleaseTypes' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Shows/ReleaseTypes' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Shows/SearchAndDiscover' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Shows/SearchAndDiscover' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Shows/Season/' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Shows/Season/' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Shows/Seasons/Episode/' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Shows/Seasons/Episode/' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Shows/Seasons/Episodes/{Id}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Shows/Seasons/Episodes/{Id}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Shows/Seasons/{Id}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Shows/Seasons/{Id}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Shows/ShowCertifications' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Shows/ShowCertifications' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Shows/ShowGenres' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Shows/ShowGenres' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Shows/{Id}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Shows/{Id}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Shows/{Id}/Seasons/{SeasonNumber}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Shows/{Id}/Seasons/{SeasonNumber}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Shows/{Id}/Seasons/{SeasonNumber}/Episodes/{EpisodeNumber}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Shows/{Id}/Seasons/{SeasonNumber}/Episodes/{EpisodeNumber}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Tests/TestDateTime/' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Tests/TestDateTime/' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /TheatricalMovies/' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /TheatricalMovies/' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /TvMedia/genres/movies' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /TvMedia/genres/movies' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /TvMedia/genres/shows' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /TvMedia/genres/shows' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /TvMedia/genres/sports' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /TvMedia/genres/sports' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /TvMedia/leagues' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /TvMedia/leagues' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /TvMedia/leagues/{LeagueID}/listings' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /TvMedia/leagues/{LeagueID}/listings' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /TvMedia/leagues/{LeagueID}/teams' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /TvMedia/leagues/{LeagueID}/teams' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /TvMedia/lineups' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /TvMedia/lineups' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /TvMedia/lineups/browse' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /TvMedia/lineups/browse' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /TvMedia/lineups/browse/{CountryID}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /TvMedia/lineups/browse/{CountryID}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /TvMedia/lineups/browse/{CountryID}/{RegionID}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /TvMedia/lineups/browse/{CountryID}/{RegionID}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /TvMedia/lineups/browse/{CountryID}/{RegionID}/{AreaID}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /TvMedia/lineups/browse/{CountryID}/{RegionID}/{AreaID}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /TvMedia/lineups/geo' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /TvMedia/lineups/geo' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /TvMedia/lineups/{LineupID}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /TvMedia/lineups/{LineupID}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /TvMedia/lineups/{LineupID}/listings' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /TvMedia/lineups/{LineupID}/listings' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /TvMedia/lineups/{LineupID}/listings/grid' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /TvMedia/lineups/{LineupID}/listings/grid' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /TvMedia/lineups/{LineupID}/listings/highlights' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /TvMedia/lineups/{LineupID}/listings/highlights' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /TvMedia/reference/lineups' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /TvMedia/reference/lineups' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /TvMedia/stations/{StationID}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /TvMedia/stations/{StationID}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /TvMedia/stations/{StationID}/listings' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /TvMedia/stations/{StationID}/listings' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /TvMedia/teams/{TeamID}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /TvMedia/teams/{TeamID}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /TvMedia/teams/{TeamID}/listings' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /TvMedia/teams/{TeamID}/listings' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Videos/GetVideo/{Id}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /Videos/GetVideo/{Id}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /XroadMedia/recommendations' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /XroadMedia/recommendations' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Object\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Object\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Object\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Object\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Object\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Object\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Object\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Object\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Object\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Object\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Object\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Object\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Object\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Object\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Object\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Object\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Object\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Object\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Object\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Object\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Object\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Object\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Object\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Object\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Object\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Object\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Object\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Object\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Object\",\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 116,
        "numOpsQuery": 114,
        "numOpsMutation": 2,
        "numQueriesCreated": 228,
        "numMutationsCreated": 4
      }
    },
    {
      "name": "Jirafe Events",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /{siteId}/batch' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /{siteId}/cart' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /{siteId}/category' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /{siteId}/customer' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /{siteId}/order' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /{siteId}/product' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 6,
        "numOpsQuery": 0,
        "numOpsMutation": 6,
        "numQueriesCreated": 0,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Jumpseller API",
      "report": {
        "warnings": [],
        "numOps": 95,
        "numOpsQuery": 53,
        "numOpsMutation": 42,
        "numQueriesCreated": 53,
        "numMutationsCreated": 42
      }
    },
    {
      "name": "koomalooma Partner",
      "report": {
        "warnings": [],
        "numOps": 2,
        "numOpsQuery": 0,
        "numOpsMutation": 2,
        "numQueriesCreated": 0,
        "numMutationsCreated": 2
      }
    },
    {
      "name": "LaunchDarkly",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /environments/{projectKey}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /environments/{projectKey}/{environmentKey}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /flags/{projectKey}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /flags/{projectKey}/{featureFlagKey}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /projects' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /projects/{projectKey}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /users/{projectKey}/{environmentKey}/{userKey}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /users/{projectKey}/{environmentKey}/{userKey}/flags/{featureFlagKey}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /webhooks' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /webhooks/{resourceId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/FeatureFlagConfig\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"example\":{\"custom\":{\"company\":\"example.com\"},\"key\":\"a00bea\",\"name\":\"Bob Loblaw\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"example\":{\"alternate.page\":{\"_links\":{\"self\":{\"href\":\"/api/v2/users/lacuna/production/Abbie_Braun/flags/alternate.page\",\"type\":\"application/json\"}},\"_value\":\"false,\"},\"sort.order\":{\"_links\":{\"_value\":true,\"self\":{\"href\":\"/api/v2/users/lacuna/production/Abbie_Braun/flags/sort.order\",\"type\":\"application/json\"}}}},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 27,
        "numOpsQuery": 17,
        "numOpsMutation": 10,
        "numQueriesCreated": 17,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "link.fish",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /Urls/browser-screenshot' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 6,
        "numOpsQuery": 6,
        "numOpsMutation": 0,
        "numQueriesCreated": 5,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "LotaData",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Shape defined per GeoJSON spec\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Shape defined per GeoJSON spec\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 4,
        "numOpsQuery": 4,
        "numOpsMutation": 0,
        "numQueriesCreated": 4,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Lyft",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /rides/{id}/cancel' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /rides/{id}/rating' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /sandbox/primetime' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /sandbox/ridetypes/{ride_type}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 16,
        "numOpsQuery": 8,
        "numOpsMutation": 8,
        "numQueriesCreated": 8,
        "numMutationsCreated": 4
      }
    },
    {
      "name": "Magento Enterprise",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /V1/carts/mine' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\Bundle\\\\Api\\\\Data\\\\OptionTypeInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\Bundle\\\\Api\\\\Data\\\\LinkInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\Bundle\\\\Api\\\\Data\\\\OptionInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\CheckoutAgreements\\\\Api\\\\Data\\\\AgreementInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\Quote\\\\Api\\\\Data\\\\CurrencyInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\Customer\\\\Api\\\\Data\\\\AddressInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\Customer\\\\Api\\\\Data\\\\RegionInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\Quote\\\\Api\\\\Data\\\\ShippingAssignmentInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\Quote\\\\Api\\\\Data\\\\CartItemInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\Bundle\\\\Api\\\\Data\\\\BundleOptionInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\ConfigurableProduct\\\\Api\\\\Data\\\\ConfigurableItemOptionValueInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\GiftCard\\\\Api\\\\Data\\\\GiftCardOptionInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\Quote\\\\Api\\\\Data\\\\ShippingInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\Checkout\\\\Api\\\\Data\\\\PaymentDetailsInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\Quote\\\\Api\\\\Data\\\\TotalsItemInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\Quote\\\\Api\\\\Data\\\\ShippingMethodInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\GiftCardAccount\\\\Api\\\\Data\\\\GiftCardAccountInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\Catalog\\\\Api\\\\Data\\\\EavAttributeInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\Catalog\\\\Api\\\\Data\\\\CategoryInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\Catalog\\\\Api\\\\Data\\\\CategoryProductLinkInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\ConfigurableProduct\\\\Api\\\\Data\\\\OptionInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\ConfigurableProduct\\\\Api\\\\Data\\\\OptionValueInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\Downloadable\\\\Api\\\\Data\\\\LinkInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\Downloadable\\\\Api\\\\Data\\\\File\\\\ContentInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\Downloadable\\\\Api\\\\Data\\\\SampleInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\GiftCard\\\\Api\\\\Data\\\\GiftcardAmountInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\CatalogInventory\\\\Api\\\\Data\\\\StockItemInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\Catalog\\\\Api\\\\Data\\\\ProductCustomOptionInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\Catalog\\\\Api\\\\Data\\\\ProductTierPriceInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\SalesRule\\\\Api\\\\Data\\\\CouponInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\Sales\\\\Api\\\\Data\\\\CreditmemoInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\Sales\\\\Api\\\\Data\\\\CreditmemoCommentInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\Sales\\\\Api\\\\Data\\\\CreditmemoItemInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\Customer\\\\Api\\\\Data\\\\GroupInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\Directory\\\\Api\\\\Data\\\\CountryInformationInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\Directory\\\\Api\\\\Data\\\\RegionInformationInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\Directory\\\\Api\\\\Data\\\\CurrencyInformationInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\Directory\\\\Api\\\\Data\\\\ExchangeRateInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\Eav\\\\Api\\\\Data\\\\AttributeSetInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\GiftWrapping\\\\Api\\\\Data\\\\WrappingInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\Sales\\\\Api\\\\Data\\\\InvoiceCommentInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\Sales\\\\Api\\\\Data\\\\InvoiceItemInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\Sales\\\\Api\\\\Data\\\\OrderAddressInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\Tax\\\\Api\\\\Data\\\\AppliedTaxRateInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\Tax\\\\Api\\\\Data\\\\OrderTaxDetailsItemInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\Sales\\\\Api\\\\Data\\\\ShippingAssignmentInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\Sales\\\\Api\\\\Data\\\\ShippingInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\Sales\\\\Api\\\\Data\\\\TotalInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\Sales\\\\Api\\\\Data\\\\OrderStatusHistoryInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\Catalog\\\\Api\\\\Data\\\\ProductAttributeTypeInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\Catalog\\\\Api\\\\Data\\\\ProductLinkTypeInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\Catalog\\\\Api\\\\Data\\\\ProductLinkAttributeInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\Catalog\\\\Api\\\\Data\\\\ProductCustomOptionTypeInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\Catalog\\\\Api\\\\Data\\\\ProductTypeInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\Rma\\\\Api\\\\Data\\\\RmaInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\Rma\\\\Api\\\\Data\\\\CommentInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\Rma\\\\Api\\\\Data\\\\ItemInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\Rma\\\\Api\\\\Data\\\\TrackInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\SalesRule\\\\Api\\\\Data\\\\ConditionInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\SalesRule\\\\Api\\\\Data\\\\RuleLabelInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\Sales\\\\Api\\\\Data\\\\ShipmentInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\Sales\\\\Api\\\\Data\\\\ShipmentCommentInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\Sales\\\\Api\\\\Data\\\\ShipmentItemInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\Sales\\\\Api\\\\Data\\\\ShipmentPackageInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\Sales\\\\Api\\\\Data\\\\ShipmentTrackInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\CatalogInventory\\\\Api\\\\Data\\\\StockStatusInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\Store\\\\Api\\\\Data\\\\StoreConfigInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\Store\\\\Api\\\\Data\\\\GroupInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\Store\\\\Api\\\\Data\\\\StoreInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\Store\\\\Api\\\\Data\\\\WebsiteInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\Tax\\\\Api\\\\Data\\\\TaxClassInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\Tax\\\\Api\\\\Data\\\\TaxRateInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\Tax\\\\Api\\\\Data\\\\TaxRateTitleInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\Tax\\\\Api\\\\Data\\\\TaxRuleInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\Sales\\\\Api\\\\Data\\\\TransactionInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\Bundle\\\\Api\\\\Data\\\\OptionInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\Bundle\\\\Api\\\\Data\\\\LinkInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\GiftCardAccount\\\\Api\\\\Data\\\\GiftCardAccountInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\Quote\\\\Api\\\\Data\\\\CartItemInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\Bundle\\\\Api\\\\Data\\\\BundleOptionInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\ConfigurableProduct\\\\Api\\\\Data\\\\ConfigurableItemOptionValueInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\GiftCard\\\\Api\\\\Data\\\\GiftCardOptionInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\Checkout\\\\Api\\\\Data\\\\ShippingInformationInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\Checkout\\\\Api\\\\Data\\\\TotalsInformationInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\Catalog\\\\Api\\\\Data\\\\CategoryInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\Catalog\\\\Api\\\\Data\\\\CategoryProductLinkInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\ConfigurableProduct\\\\Api\\\\Data\\\\OptionInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\ConfigurableProduct\\\\Api\\\\Data\\\\OptionValueInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\Downloadable\\\\Api\\\\Data\\\\LinkInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\Downloadable\\\\Api\\\\Data\\\\File\\\\ContentInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\Downloadable\\\\Api\\\\Data\\\\SampleInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\GiftCard\\\\Api\\\\Data\\\\GiftcardAmountInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\CatalogInventory\\\\Api\\\\Data\\\\StockItemInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\Catalog\\\\Api\\\\Data\\\\ProductCustomOptionInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\Catalog\\\\Api\\\\Data\\\\ProductTierPriceInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\SalesRule\\\\Api\\\\Data\\\\CouponInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\SalesRule\\\\Api\\\\Data\\\\CouponGenerationSpecInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\Sales\\\\Api\\\\Data\\\\CreditmemoInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\Sales\\\\Api\\\\Data\\\\CreditmemoCommentInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\Sales\\\\Api\\\\Data\\\\CreditmemoItemInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\Customer\\\\Api\\\\Data\\\\GroupInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\Customer\\\\Api\\\\Data\\\\AddressInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\Customer\\\\Api\\\\Data\\\\RegionInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\Eav\\\\Api\\\\Data\\\\AttributeSetInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\GiftWrapping\\\\Api\\\\Data\\\\WrappingInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\Sales\\\\Api\\\\Data\\\\CreditmemoCommentCreationInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\Sales\\\\Api\\\\Data\\\\CreditmemoItemCreationInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\Sales\\\\Api\\\\Data\\\\InvoiceCommentInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\Sales\\\\Api\\\\Data\\\\InvoiceItemInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\Sales\\\\Api\\\\Data\\\\InvoiceCreationArgumentsInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\Sales\\\\Api\\\\Data\\\\InvoiceCommentCreationInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\Sales\\\\Api\\\\Data\\\\InvoiceItemCreationInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\Sales\\\\Api\\\\Data\\\\ShipmentCreationArgumentsInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\Sales\\\\Api\\\\Data\\\\ShipmentCommentCreationInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\Sales\\\\Api\\\\Data\\\\ShipmentItemCreationInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\Sales\\\\Api\\\\Data\\\\ShipmentPackageCreationInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\Sales\\\\Api\\\\Data\\\\ShipmentTrackCreationInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\Sales\\\\Api\\\\Data\\\\OrderAddressInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\Tax\\\\Api\\\\Data\\\\AppliedTaxRateInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\Tax\\\\Api\\\\Data\\\\OrderTaxDetailsItemInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\Sales\\\\Api\\\\Data\\\\ShippingAssignmentInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\Sales\\\\Api\\\\Data\\\\ShippingInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\Sales\\\\Api\\\\Data\\\\TotalInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\Sales\\\\Api\\\\Data\\\\OrderStatusHistoryInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\Catalog\\\\Api\\\\Data\\\\EavAttributeInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\Rma\\\\Api\\\\Data\\\\RmaInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\Rma\\\\Api\\\\Data\\\\CommentInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\Rma\\\\Api\\\\Data\\\\ItemInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\Rma\\\\Api\\\\Data\\\\TrackInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\SalesRule\\\\Api\\\\Data\\\\ConditionInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\SalesRule\\\\Api\\\\Data\\\\RuleLabelInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\Sales\\\\Api\\\\Data\\\\ShipmentInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\Sales\\\\Api\\\\Data\\\\ShipmentCommentInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\Sales\\\\Api\\\\Data\\\\ShipmentItemInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\Sales\\\\Api\\\\Data\\\\ShipmentPackageInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\Sales\\\\Api\\\\Data\\\\ShipmentTrackInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\Tax\\\\Api\\\\Data\\\\TaxClassInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\Tax\\\\Api\\\\Data\\\\TaxRateInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\Tax\\\\Api\\\\Data\\\\TaxRateTitleInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ExtensionInterface class for @see \\\\Magento\\\\Tax\\\\Api\\\\Data\\\\TaxRuleInterface\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 355,
        "numOpsQuery": 154,
        "numOpsMutation": 201,
        "numQueriesCreated": 154,
        "numMutationsCreated": 200
      }
    },
    {
      "name": "Tradeworks",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /strategies/strategyId/{strategyId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /strategies/templates' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /tradingAccounts' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /tradingAccounts/password/{username}/{brokerserver}/{mt4username}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /users' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /users/email/{email}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /users/password/{username}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /users/username/{username}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 8,
        "numOpsQuery": 4,
        "numOpsMutation": 4,
        "numQueriesCreated": 0,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Mandrill",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /users/ping.json' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaTypeScalar",
            "message": "Request / response schema has no (valid) type: Unknown JSON scalar type 'null'",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaTypeScalar",
            "message": "Request / response schema has no (valid) type: Unknown JSON scalar type 'null'",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaTypeScalar",
            "message": "Request / response schema has no (valid) type: Unknown JSON scalar type 'null'",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaTypeScalar",
            "message": "Request / response schema has no (valid) type: Unknown JSON scalar type 'null'",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaTypeScalar",
            "message": "Request / response schema has no (valid) type: Unknown JSON scalar type 'null'",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaTypeScalar",
            "message": "Request / response schema has no (valid) type: Unknown JSON scalar type 'null'",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaTypeScalar",
            "message": "Request / response schema has no (valid) type: Unknown JSON scalar type 'null'",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaTypeScalar",
            "message": "Request / response schema has no (valid) type: Unknown JSON scalar type 'null'",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaTypeScalar",
            "message": "Request / response schema has no (valid) type: Unknown JSON scalar type 'null'",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaTypeScalar",
            "message": "Request / response schema has no (valid) type: Unknown JSON scalar type 'null'",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaTypeScalar",
            "message": "Request / response schema has no (valid) type: Unknown JSON scalar type 'null'",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaTypeScalar",
            "message": "Request / response schema has no (valid) type: Unknown JSON scalar type 'null'",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaTypeScalar",
            "message": "Request / response schema has no (valid) type: Unknown JSON scalar type 'null'",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaTypeScalar",
            "message": "Request / response schema has no (valid) type: Unknown JSON scalar type 'null'",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaTypeScalar",
            "message": "Request / response schema has no (valid) type: Unknown JSON scalar type 'null'",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 90,
        "numOpsQuery": 0,
        "numOpsMutation": 90,
        "numQueriesCreated": 0,
        "numMutationsCreated": 89
      }
    },
    {
      "name": "Geo DB",
      "report": {
        "warnings": [],
        "numOps": 16,
        "numOpsQuery": 16,
        "numOpsMutation": 0,
        "numQueriesCreated": 16,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Rat Genome Database",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"object\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"format\":\"int32\",\"type\":\"integer\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 56,
        "numOpsQuery": 56,
        "numOpsMutation": 0,
        "numQueriesCreated": 56,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Medium.com",
      "report": {
        "warnings": [],
        "numOps": 5,
        "numOpsQuery": 3,
        "numOpsMutation": 2,
        "numQueriesCreated": 3,
        "numMutationsCreated": 2
      }
    },
    {
      "name": "Moon by Ai Weiwei & Olafur Eliasson",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /api/hashtags' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /api/marks' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 2,
        "numOpsQuery": 2,
        "numOpsMutation": 0,
        "numQueriesCreated": 0,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "MotaWord",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /projects/{id}/package/{language}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /projects/{id}/package/{language}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"items\":{\"$ref\":\"#/components/schemas/Formats\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"items\":{\"$ref\":\"#/components/schemas/ProjectList\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"items\":{\"$ref\":\"#/components/schemas/Project\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"items\":{\"$ref\":\"#/components/schemas/Project\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Custom data provided while creating a new project.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 47,
        "numOpsQuery": 24,
        "numOpsMutation": 23,
        "numQueriesCreated": 24,
        "numMutationsCreated": 23
      }
    },
    {
      "name": "Native Ads Publisher",
      "report": {
        "warnings": [],
        "numOps": 4,
        "numOpsQuery": 3,
        "numOpsMutation": 1,
        "numQueriesCreated": 3,
        "numMutationsCreated": 1
      }
    },
    {
      "name": "Advicent.FactFinderService",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /api/Accounts/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /api/CriticalIllnessInsurancePolicies/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /api/DefinedBenefitPensions' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /api/DefinedBenefitPensions' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /api/DefinedBenefitPensions/{id}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /api/DefinedBenefitPensions/{id}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /api/Demographics/{demographicId}/Dependents/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /api/DisabilityInsurancePolicies/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /api/EducationGoals/{educationGoalId}/Expenses/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /api/EducationGoals/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /api/Expenses/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /api/FactFinders' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /api/FactFinders' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /api/FactFinders/{id}/Snapshot' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /api/FactFinders/{id}/Snapshot' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /api/Incomes/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /api/Liabilities/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /api/LifeInsurancePolicies/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /api/LifestyleAssets/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /api/LongTermCareInsurancePolicies/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /api/MajorPurchaseGoals/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /api/RealEstateAssets/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /api/RetirementGoals/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /api/RetirementGoals/{retirementGoalId}/Expenses/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 129,
        "numOpsQuery": 70,
        "numOpsMutation": 59,
        "numQueriesCreated": 70,
        "numMutationsCreated": 43
      }
    },
    {
      "name": "Published Plan Service",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /api/Eula/Accept' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /api/Password/HasUserSetPassword' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /api/Password/PasswordRequirements' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /api/Password/Reset' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /api/Password/Set' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /api/auth/LoginConfiguration' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /api/auth/Logout' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 51,
        "numOpsQuery": 41,
        "numOpsMutation": 10,
        "numQueriesCreated": 39,
        "numMutationsCreated": 5
      }
    },
    {
      "name": "NBA Stats",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /allstarballotpredictor' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /boxscore' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /boxscoreadvanced' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /boxscoreadvancedv2' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /boxscorefourfactors' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /boxscorefourfactorsv2' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /boxscoremisc' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /boxscoremiscv2' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /boxscoreplayertrackv2' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /boxscorescoring' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /boxscorescoringv2' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /boxscoresummaryv2' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /boxscoretraditionalv2' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /boxscoreusage' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /boxscoreusagev2' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /commonTeamYears' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /commonallplayers' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /commonplayerinfo' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /commonplayoffseries' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /commonteamroster' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /draftcombinedrillresults' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /draftcombinenonstationaryshooting' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /draftcombineplayeranthro' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /draftcombinespotshooting' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /draftcombinestats' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /drafthistory' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /franchisehistory' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /homepageleaders' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /homepagev2' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /leaderstiles' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /leaguedashlineups' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /leaguedashplayerbiostats' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /leaguedashplayerclutch' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /leaguedashplayerptshot' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /leaguedashplayershotlocations' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /leaguedashplayerstats' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /leaguedashptdefend' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /leaguedashptteamdefend' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /leaguedashteamclutch' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /leaguedashteamptshot' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /leaguedashteamshotlocations' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /leaguedashteamstats' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /leagueleaders' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /playbyplay' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /playbyplayv2' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /playercareerstats' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /playercompare' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /playerdashboardbyclutch' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /playerdashboardbygamesplits' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /playerdashboardbygeneralsplits' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /playerdashboardbylastngames' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /playerdashboardbyopponent' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /playerdashboardbyshootingsplits' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /playerdashboardbyteamperformance' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /playerdashboardbyyearoveryear' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /playerdashptpass' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /playerdashptreb' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /playerdashptreboundlogs' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /playerdashptshotdefend' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /playerdashptshotlog' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /playerdashptshots' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /playergamelog' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /playerprofile' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /playerprofilev2' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /playersvsplayers' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /playervsplayer' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /playoffpicture' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /scoreboard' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /scoreboardV2' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /shotchartdetail' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /shotchartlineupdetail' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /teamdashboardbyclutch' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /teamdashboardbygamesplits' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /teamdashboardbygeneralsplits' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /teamdashboardbylastngames' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /teamdashboardbyopponent' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /teamdashboardbyshootingsplits' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /teamdashboardbyteamperformance' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /teamdashboardbyyearoveryear' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /teamdashlineups' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /teamdashptpass' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /teamdashptreb' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /teamdashptshots' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /teamgamelog' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /teaminfocommon' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /teamplayerdashboard' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /teamplayeronoffdetails' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /teamplayeronoffsummary' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /teamvsplayer' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /teamyearbyyearstats' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /videoStatus' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 91,
        "numOpsQuery": 91,
        "numOpsMutation": 0,
        "numQueriesCreated": 0,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "NeoWs - (Near Earth Object Web Service)",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Hypermedia links to collection\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 5,
        "numOpsQuery": 5,
        "numOpsMutation": 0,
        "numQueriesCreated": 5,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Netatmo",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"items\":{\"$ref\":\"#/components/schemas/NAObject\"},\"type\":\"array\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/NAThermProgram\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"items\":{\"$ref\":\"#/components/schemas/NAThermProgram\"},\"type\":\"array\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"items\":{\"$ref\":\"#/components/schemas/NAObject\"},\"type\":\"array\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"format\":\"int32\",\"type\":\"integer\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 20,
        "numOpsQuery": 16,
        "numOpsMutation": 4,
        "numQueriesCreated": 16,
        "numMutationsCreated": 4
      }
    },
    {
      "name": "NeutrinoAPI",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The components which make up the address such as road, city, state etc. May also include additional metadata about the address\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"description\":\"The components which make up the address such as road, city, state etc. May also include additional metadata about the address\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"object\"},\"description\":\"A key:value map of the URL query paramaters\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 26,
        "numOpsQuery": 0,
        "numOpsMutation": 26,
        "numQueriesCreated": 0,
        "numMutationsCreated": 52
      }
    },
    {
      "name": "nFusion Solutions Market Data API v1",
      "report": {
        "warnings": [],
        "numOps": 14,
        "numOpsQuery": 14,
        "numOpsMutation": 0,
        "numQueriesCreated": 14,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "High Performance Building Database",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /project.{output_format}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /project/{project_id}.{output_format}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 2,
        "numOpsQuery": 2,
        "numOpsMutation": 0,
        "numQueriesCreated": 0,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Transportation Laws and Incentives",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The parameters that were passed to the API\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The parameters that were passed to the API\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The parameters that were passed to the API\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The parameters that were passed to the API\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 4,
        "numOpsQuery": 4,
        "numOpsMutation": 0,
        "numQueriesCreated": 4,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "NSIDC Web Service Documentation Index",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /Facets' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /OpenSearch' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /OpenSearchDescription' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /suggest' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 4,
        "numOpsQuery": 4,
        "numOpsMutation": 0,
        "numQueriesCreated": 0,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Archive",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 1,
        "numOpsQuery": 1,
        "numOpsMutation": 0,
        "numQueriesCreated": 1,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Article Search",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 1,
        "numOpsQuery": 1,
        "numOpsMutation": 0,
        "numQueriesCreated": 1,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Books",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaTypeScalar",
            "message": "Request / response schema has no (valid) type: Unknown JSON scalar type 'null'",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 6,
        "numOpsQuery": 6,
        "numOpsMutation": 0,
        "numQueriesCreated": 6,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Community",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaTypeScalar",
            "message": "Request / response schema has no (valid) type: Unknown JSON scalar type 'null'",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaTypeScalar",
            "message": "Request / response schema has no (valid) type: Unknown JSON scalar type 'null'",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaTypeScalar",
            "message": "Request / response schema has no (valid) type: Unknown JSON scalar type 'null'",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaTypeScalar",
            "message": "Request / response schema has no (valid) type: Unknown JSON scalar type 'null'",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaTypeScalar",
            "message": "Request / response schema has no (valid) type: Unknown JSON scalar type 'null'",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaTypeScalar",
            "message": "Request / response schema has no (valid) type: Unknown JSON scalar type 'null'",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaTypeScalar",
            "message": "Request / response schema has no (valid) type: Unknown JSON scalar type 'null'",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaTypeScalar",
            "message": "Request / response schema has no (valid) type: Unknown JSON scalar type 'null'",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaTypeScalar",
            "message": "Request / response schema has no (valid) type: Unknown JSON scalar type 'null'",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaTypeScalar",
            "message": "Request / response schema has no (valid) type: Unknown JSON scalar type 'null'",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaTypeScalar",
            "message": "Request / response schema has no (valid) type: Unknown JSON scalar type 'null'",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaTypeScalar",
            "message": "Request / response schema has no (valid) type: Unknown JSON scalar type 'null'",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaTypeScalar",
            "message": "Request / response schema has no (valid) type: Unknown JSON scalar type 'null'",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaTypeScalar",
            "message": "Request / response schema has no (valid) type: Unknown JSON scalar type 'null'",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaTypeScalar",
            "message": "Request / response schema has no (valid) type: Unknown JSON scalar type 'null'",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaTypeScalar",
            "message": "Request / response schema has no (valid) type: Unknown JSON scalar type 'null'",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 4,
        "numOpsQuery": 4,
        "numOpsMutation": 0,
        "numQueriesCreated": 4,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Most Popular",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"oneOf\":[{\"type\":\"array\",\"items\":{}},{\"type\":\"string\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"oneOf\":[{\"type\":\"array\",\"items\":{}},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"oneOf\":[{\"type\":\"array\",\"items\":{}},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"oneOf\":[{\"type\":\"array\",\"items\":{}},{\"type\":\"string\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"oneOf\":[{\"type\":\"array\",\"items\":{}},{\"type\":\"string\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"oneOf\":[{\"type\":\"array\",\"items\":{}},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"oneOf\":[{\"type\":\"array\",\"items\":{}},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 3,
        "numOpsQuery": 3,
        "numOpsMutation": 0,
        "numQueriesCreated": 3,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Movie Reviews",
      "report": {
        "warnings": [],
        "numOps": 3,
        "numOpsQuery": 3,
        "numOpsMutation": 0,
        "numQueriesCreated": 3,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Semantic",
      "report": {
        "warnings": [],
        "numOps": 2,
        "numOpsQuery": 2,
        "numOpsMutation": 0,
        "numQueriesCreated": 2,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "TimesTags",
      "report": {
        "warnings": [],
        "numOps": 1,
        "numOpsQuery": 1,
        "numOpsMutation": 0,
        "numQueriesCreated": 1,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Times Newswire",
      "report": {
        "warnings": [],
        "numOps": 3,
        "numOpsQuery": 3,
        "numOpsMutation": 0,
        "numQueriesCreated": 3,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Top Stories",
      "report": {
        "warnings": [],
        "numOps": 1,
        "numOpsQuery": 1,
        "numOpsMutation": 0,
        "numQueriesCreated": 1,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Mobility",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /transit/{from}/{to}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /transit/{from}/{to}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          }
        ],
        "numOps": 2,
        "numOpsQuery": 2,
        "numOpsMutation": 0,
        "numQueriesCreated": 2,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Socio-demo",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /age/{location}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /age/{location}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /gender/{location}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /gender/{location}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          }
        ],
        "numOps": 3,
        "numOpsQuery": 3,
        "numOpsMutation": 0,
        "numQueriesCreated": 3,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "ODWeather",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1.0/compareStation/{stationName}/' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1.0/getAemetStation/{stationName}/{period}/' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1.0/getForecastPoints/{yatchclubid}/language/{language}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1.0/getForecastTimeSeries/{latitude}/{longitude}/' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1.0/getForecastTimeSeriesWrf/{latitude}/{longitude}/' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1.0/getSocibWeatherStation/{stationName}/{period}/' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1.0/getWeatherDisplay/{stationName}/' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1.0/getWebCams/' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 8,
        "numOpsQuery": 8,
        "numOpsMutation": 0,
        "numQueriesCreated": 0,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "OMDb",
      "report": {
        "warnings": [],
        "numOps": 1,
        "numOpsQuery": 1,
        "numOpsMutation": 0,
        "numQueriesCreated": 1,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Swagger2OpenAPI Converter",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /badge' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 6,
        "numOpsQuery": 4,
        "numOpsMutation": 2,
        "numQueriesCreated": 3,
        "numMutationsCreated": 2
      }
    },
    {
      "name": "Open Data",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /atms' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'HEAD /atms' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /branches' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'HEAD /branches' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /business-current-accounts' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'HEAD /business-current-accounts' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /commercial-credit-cards' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'HEAD /commercial-credit-cards' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /personal-current-accounts' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'HEAD /personal-current-accounts' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /unsecured-sme-loans' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'HEAD /unsecured-sme-loans' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 12,
        "numOpsQuery": 6,
        "numOpsMutation": 6,
        "numQueriesCreated": 0,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "OpenCage Geocoder",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 1,
        "numOpsQuery": 1,
        "numOpsMutation": 0,
        "numQueriesCreated": 1,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "OpenFinTech.io",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /banks' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /banks/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /countries' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /countries/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /currencies' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /currencies/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /exchangers' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /exchangers/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /merchant-industries' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /merchant-industries/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /organizations' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /organizations/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /payment-methods' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /payment-methods/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /payment-providers' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /payment-providers/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 16,
        "numOpsQuery": 16,
        "numOpsMutation": 0,
        "numQueriesCreated": 0,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "OrgHunter",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /v1/categories' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /v1/charitybasic' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /v1/charityfinancial' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /v1/charitygeolocation' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /v1/charitypremium' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /v1/charitysearch' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 6,
        "numOpsQuery": 0,
        "numOpsMutation": 6,
        "numQueriesCreated": 0,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "OSF APIv2 Documentation",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /actions/' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /comments/{comment_id}/' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /comments/{comment_id}/' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /institutions/{institution_id}/registrations/' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /nodes/' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /nodes/{node_id}/' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /nodes/{node_id}/children/' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /nodes/{node_id}/comments/' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /nodes/{node_id}/contributors/' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /nodes/{node_id}/contributors/{user_id}/' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /nodes/{node_id}/draft_registrations/' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /nodes/{node_id}/draft_registrations/{draft_id}/' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /nodes/{node_id}/forks/' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /preprints/' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /registrations/{registration_id}/forks/' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /users/{user_id}/registrations/' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /wikis/{wiki_id}/content/' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"URLs to alternative representations of the citation style entity.\",\"readOnly\":true,\"title\":\"Links\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Extra information, contains `hashes` (`sha256`, `md5`) and `downloads` count.\",\"readOnly\":true,\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"MIME content-type for the file (null if unavailable).\",\"readOnly\":true,\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"description\":\"The details of the metaschema which contains the supplemental questions to accompany a registration\",\"readOnly\":true,\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A dictionary with addon_account id as key, an array of connected nodes and link to user account as value\",\"format\":\"URL\",\"readOnly\":true,\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 103,
        "numOpsQuery": 90,
        "numOpsMutation": 13,
        "numQueriesCreated": 85,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Owler",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 12,
        "numOpsQuery": 12,
        "numOpsMutation": 0,
        "numQueriesCreated": 12,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Pandorabots AIaaS",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /atalk/{app_id}/{botname}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /bot/{app_id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /bot/{app_id}/{botname}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /bot/{app_id}/{botname}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /bot/{app_id}/{botname}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /bot/{app_id}/{botname}/verify' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /bot/{app_id}/{botname}/{file-kind}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /bot/{app_id}/{botname}/{file-kind}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /bot/{app_id}/{botname}/{file-kind}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /bot/{app_id}/{botname}/{file-kind}/{filename}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /bot/{app_id}/{botname}/{file-kind}/{filename}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /bot/{app_id}/{botname}/{file-kind}/{filename}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /talk/{app_id}/{botname}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 13,
        "numOpsQuery": 5,
        "numOpsMutation": 8,
        "numQueriesCreated": 0,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "PasswordUtility.Web",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 2,
        "numOpsQuery": 0,
        "numOpsMutation": 2,
        "numQueriesCreated": 0,
        "numMutationsCreated": 2
      }
    },
    {
      "name": "PatientView",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /auth/login' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /auth/login' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /auth/logout/{token}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /auth/logout/{token}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /patientmanagement/validate' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /patientmanagement/validate' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /patientmanagement/{userId}/group/{groupId}/identifier/{identifierId}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /patientmanagement/{userId}/group/{groupId}/identifier/{identifierId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /patientmanagement/{userId}/group/{groupId}/identifier/{identifierId}/surgeries' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /patientmanagement/{userId}/group/{groupId}/identifier/{identifierId}/surgeries' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 15,
        "numOpsQuery": 10,
        "numOpsMutation": 5,
        "numQueriesCreated": 10,
        "numMutationsCreated": 1
      }
    },
    {
      "name": "Paylocity",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /v2/companies/{companyId}/employees/{employeeId}/benefitSetup' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /v2/companies/{companyId}/employees/{employeeId}/earnings' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /v2/companies/{companyId}/employees/{employeeId}/earnings/{earningCode}/{startDate}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /v2/companies/{companyId}/employees/{employeeId}/localTaxes' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /v2/companies/{companyId}/employees/{employeeId}/localTaxes/{taxCode}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /v2/companies/{companyId}/employees/{employeeId}/nonprimaryStateTax' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /v2/companies/{companyId}/employees/{employeeId}/primaryStateTax' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v2/companies/{companyId}/openapi' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /v2/credentials/secrets' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee birthdate. Common formats include *MM-DD-CCYY*, *CCYY-MM-DD*.\",\"format\":\"paylocity-date\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Company name as defined in Web Pay, applicable with GET requests only.<br  /> Max length: 50\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Indicates if employee has disability status.\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Leave blank to have Web Pay automatically assign the next available employee ID.<br  /> Max length: 10\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee ethnicity.<br  /> Max length: 10\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee first name. <br  />Max length: 40\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee gender. Common values *M* (Male), *F* (Female). <br  />Max length: 1\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee last name. <br  />Max length: 40\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee marital status. Common values *D (Divorced), M (Married), S (Single), W (Widowed)*. <br  />Max length: 10\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee middle name.<br  /> Max length: 20\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Percentage of employee's ownership in the company, entered as a whole number. <br  /> Decimal (12,2)\",\"oneOf\":[{\"type\":\"number\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee preferred display name.<br  /> Max length: 20\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Prior last name if applicable.<br  />Max length: 40\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee preferred salutation. <br  />Max length: 10\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee social security number. Leave it blank if valid social security number not available. <br  />Max length: 11\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee name suffix. Common values are *Jr, Sr, II*.<br  />Max length: 30\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Indicates if employee is a veteran.\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Account number, entered without special characters and spaces. <br  />Max length: 17<br />\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Account type. Valid values are *C* (Checking), *S* (Saving), *P* (Pay Card). <br   />Max length: 1<br />\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Amount value to be deposited to the account.<br  />Decimal (12,2)<br />\",\"oneOf\":[{\"type\":\"number\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Amount type to indicate the context of the amount. Common values are *F* (FLAT), *F-* (Net Minus), *P* (Percent). <br  /> Max length: 5<br />\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Indicates if direct deposit should be blocked when special check types such as Bonus are processed.<br /><small>new with Web Link 16.6 release</small>\",\"oneOf\":[{\"type\":\"boolean\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Indicates if account will not pre-note.<br />\",\"oneOf\":[{\"type\":\"boolean\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Name on the bank account. Defaults to employee's name. <br  />Max length: 30<br /><small>new with Web Link 16.6 release</small>\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Date to end the pre-note of the account. Common formats include *MM-DD-CCYY*, *CCYY-MM-DD*.<br />\",\"format\":\"paylocity-date\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ABA Transit Routing Number, entered without dashes or spaces. <br  />Max length: 9<br />\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Benefit Class code. Values are configured in Web Pay Company > Setup > Benefits > Classes.<br  />Max length: 30\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Date when Benefit Class takes effect. Common formats include *MM-DD-CCYY*, *CCYY-MM-DD*.\",\"format\":\"paylocity-date\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Salary used to configure benefits.<br  />Decimal(12,2)\",\"oneOf\":[{\"type\":\"number\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Date when Benefit Salary takes effect. Common formats include *MM-DD-CCYY*, *CCYY-MM-DD*.\",\"format\":\"paylocity-date\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Applicable only for HR Enhanced clients and Benefit Classes with ACA Employment Type of Full Time.\",\"oneOf\":[{\"type\":\"boolean\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Only valid for HR Enhanced clients and Benefit Classes that are ACA Employment Type of Full Time.\",\"oneOf\":[{\"type\":\"boolean\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The custom field label whose value is to be added/updated. Must match to the label defined in Web Pay Custom Fields setup.  Max length: 255.\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The custom boolean field value.\",\"oneOf\":[{\"type\":\"boolean\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The custom field label whose value is to be added/updated.  Must match to the label defined in Web Pay Custom Fields setup.  Max length: 255.\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The custom date field value.  Common formats include MM-DD-CCYY, CCYY-MM-DD.\",\"format\":\"paylocity-date\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The custom field label whose value is to be added/updated.  Must match to the label defined in Web Pay Custom Fields setup.  Max length: 255.\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The custom dropdown field value.  Values are configured in Web Pay Company > Setup > List Values > Lookup Values > Custom Fields: PayrollAndHR.  Max length: 10.\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The custom field label whose value is to be added/updated.  Must match to the label defined in Web Pay Custom Fields setup.  Max length: 255.\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The custom number field value.  Decimal (18,6).\",\"oneOf\":[{\"type\":\"number\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The custom field label whose value is to be added/updated.  Must match to the label defined in Web Pay Custom Fields setup.  Max length: 255.\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The custom text field value.  Max length: 255.\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee department/position change reason. Must match Company setup. <br  />Max length: 15\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee clock badge number. Defaults to employeeId. <br  />Max length: 10\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employer defined location, like *branch, division, department*, etc. Must match Company setup. <br  />Max length: 10\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employer defined location, like *branch, division, department*, etc. Must match Company setup. <br  />Max length: 10\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employer defined location, like *branch, division, department*, etc. Must match Company setup. <br  />Max length: 10\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The date the position takes effect. Common formats include *MM-DD-CCYY*, *CCYY-MM-DD*.\",\"format\":\"paylocity-date\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee current employment type. Common values *RFT (Regular Full Time), RPT (Regular Part Time), SNL (Seasonal), TFT (Temporary Full Time), TPT (Temporary Part Time)*. <br  />Max length: 10\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Values are configured in Company > Setup > HR > EEO Classes.<br  /> Max length: 10\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Indicates if employee is exempt from minimum wage.\",\"oneOf\":[{\"type\":\"boolean\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Indicates if employee is exempt from overtime.\",\"oneOf\":[{\"type\":\"boolean\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Indicates if employee is a supervisor or reviewer.\",\"oneOf\":[{\"type\":\"boolean\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Indicates if union dues are collected.\",\"oneOf\":[{\"type\":\"boolean\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Indicates if initiations fees are collected.\",\"oneOf\":[{\"type\":\"boolean\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee current job title. <br  />Max length: 50\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee pay group. Must match Company setup. <br  /> Max length: 20\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee position code. Must match Company setup.<br  />Max length: 20\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Company number of reviewer.<br />Max length: 9\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee id of the reviewer.<br />Max length: 10\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee work shift.<br  />Max length: 255\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Supervisor's company number. Defaults to employee company number.<br  />Max length: 9\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"EmployeeId of the supervisor. <br  />Max length: 10\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Indicates if employee receives tips.\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee union affiliation effective date. Common formats include *MM-DD-CCYY*, *CCYY-MM-DD*.\",\"format\":\"paylocity-date\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee union code. Must match Company setup. <br  />Max length: 10\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee union position. Must match Company setup. <br  />Max length: 30\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee worker compensation code. Must match Company setup.<br  /> Max length: 10\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Tax amount. <br  />Decimal (12,2)\",\"oneOf\":[{\"type\":\"number\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Federal tax exemptions value. <br  />Decimal (12,2)\",\"oneOf\":[{\"type\":\"number\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee federal filing status. Common values are *S* (Single), *M* (Married).<br  />Max length: 50\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Tax percentage. <br  />Decimal (12,2)\",\"oneOf\":[{\"type\":\"number\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Tax calculation code. Common values are *F* (Flat), *P* (Percentage), *FDFP* (Flat Dollar Amount plus Fixed Percentage). <br  />Max length: 10\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"1st address line.<br  /> Max length: 40\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"2nd address line. <br  /> Max length: 40\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"City.<br  /> Max length: 40\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Country.<br  /> Max length: 30\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"County.<br  /> Max length: 30\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Email. <br  />Max length: 50\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Mobile phone number.<br  /> Max length: 12\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Phone number.<br  /> Max length: 12\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Postal code.<br  /> Max length: 10\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"State or province.<br  /> Max length: 2\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Local tax exemptions value.<br  />Decimal (12,2)\",\"oneOf\":[{\"type\":\"number\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Local tax exemptions 2 value.<br  />Decimal (12,2)\",\"oneOf\":[{\"type\":\"number\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee local tax filing status. Must match specific local tax setup. <br  /> Max length: 50\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Resident PSD (political subdivision code) applicable in PA. Must match Company setup.<br  /> Max length: 9\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Local tax code.<br  />Max length: 50\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Work location PSD. Must match Company setup. <br  /> Max length: 9\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Account number, entered without special characters and spaces. <br  />Max length: 17\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Account type. Valid values are *C* (Checking), *S* (Saving), *P* (Pay Card). <br   />Max length: 1\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Indicates if direct deposit should be blocked when special check types such as Bonus are processed.<br /><small>new with Web Link 16.6 release</small>\",\"oneOf\":[{\"type\":\"boolean\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Indicates if account will not pre-note.\",\"oneOf\":[{\"type\":\"boolean\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Name on the bank account. Defaults to employee's name. <br  />Max length: 30<br /><small>new with Web Link 16.6 release</small>\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Date to end the pre-note of the account. Common formats include *MM-DD-CCYY*, *CCYY-MM-DD*.\",\"format\":\"paylocity-date\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ABA Transit Routing Number, entered without dashes or spaces. <br  />Max length: 9\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"State tax code.<br  /> Max length: 50\",\"oneOf\":[{\"type\":\"number\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"State tax exemptions value.<br  />Decimal (12,2)\",\"oneOf\":[{\"type\":\"number\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"State tax exemptions 2 value.<br  />Decimal (12,2)\",\"oneOf\":[{\"type\":\"number\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee state tax filing status. Common values are *S* (Single), *M* (Married).<br  />Max length: 50\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"State Tax percentage. <br  />Decimal (12,2)\",\"oneOf\":[{\"type\":\"number\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Non-primary state tax reciprocity code.<br  /> Max length: 50\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Supplemental check calculation code. Common values are *Blocked* (Taxes blocked on Supplemental checks), *Supp* (Use supplemental Tax Rate-Code). <br  />Max length: 10\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Tax calculation code. Common values are *F* (Flat), *P* (Percentage), *FDFP* (Flat Dollar Amount plus Fixed Percentage). <br  />Max length: 10\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"State tax code.<br  /> Max length: 50\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee annual salary.<br />Decimal (12,2)\",\"oneOf\":[{\"type\":\"number\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee base rate, used for Hourly employees. <br  />Decimal (12,2)\",\"oneOf\":[{\"type\":\"number\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The date of the first check on which the new pay rate will appear. This value is only applicable when updating an existing employee. Common formats include *MM-DD-CCYY*, *CCYY-MM-DD*.\",\"format\":\"paylocity-date\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Pay rate change reason.<br  /> Max length: 30\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee default hours consistently worked. If autoPayType is set to D, employee will be paid hourly base rate for the defaultHours. <br  />Decimal (12,2)\",\"oneOf\":[{\"type\":\"number\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The date the employee's pay rate takes effect. Common formats include *MM-DD-CCYY*, *CCYY-MM-DD*.\",\"format\":\"paylocity-date\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"If set to *True*, employee will be paid automatically using deafultHours.\",\"oneOf\":[{\"type\":\"boolean\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee current pay frequency. Common values are *A (Annual), B (Bi-Weekly), D (Daily), M (Monthly), S (Semi-Monthly), Q (Quarterly), W (Weekly)*. <br  />Max length: 5\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee pay grade. Must match Company setup. <br  /> Max length: 10\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Pay rate notes regarding employee.<br  /> Max length: 250\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee pay type (rate code). Valid values are *Hourly* or *Salary*. <br  />Max length: 10\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee base rate frequency used with payType Hourly. Common values are *Hour, Week*. Default is Hour. <br  />Max length: 10\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee gross salary per pay period used with payType Salary.<br  />Decimal (12,2)\",\"oneOf\":[{\"type\":\"number\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"State tax code.<br  /> Max length: 50\",\"oneOf\":[{\"type\":\"number\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"State tax exemptions value.<br  />Decimal (12,2)\",\"oneOf\":[{\"type\":\"number\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"State tax exemptions 2 value.<br  />Decimal (12,2)\",\"oneOf\":[{\"type\":\"number\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee state tax filing status. Common values are *S* (Single), *M* (Married).<br  />Max length: 50\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"State Tax percentage. <br  />Decimal (12,2)\",\"oneOf\":[{\"type\":\"number\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Supplemental check calculation code. Common values are *Blocked* (Taxes blocked on Supplemental checks), *Supp* (Use supplemental Tax Rate-Code). <br  />Max length: 10\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Tax calculation code. Common values are *F* (Flat), *P* (Percentage), *FDFP* (Flat Dollar Amount plus Fixed Percentage). <br  />Max length: 10\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"State tax code.<br  /> Max length: 50\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Adjusted seniority date. Common formats include *MM-DD-CCYY*, *CCYY-MM-DD*.\",\"format\":\"paylocity-date\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee status change reason. Must match Company setup.<br  /> Max length: 15\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Common formats include *MM-DD-CCYY*, *CCYY-MM-DD*.\",\"format\":\"paylocity-date\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee current work status. Common values are *A* (Active), *L* (Leave of Absence), *T* (Terminated). <br  />Max length: 20\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee hired date. Updates to hire date are not allowed and will be ignored. Common formats include *MM-DD-CCYY*, *CCYY-MM-DD*.\",\"format\":\"paylocity-date\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Indicates if employee eligible for rehire.\",\"oneOf\":[{\"type\":\"boolean\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Rehire date if employee is rehired.  Updates to re-hire date are not allowed and will be ignored. Common formats are *MM-DD-CCYY, CCYY-MM-DD*.\",\"format\":\"paylocity-date\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Notes for FITW exemption.<br  /> Max length: 250\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Reason code for FITW exemption. Common values are *SE* (Statutory employee), *CR* (clergy/Religious). <br  /> Max length: 30\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Notes for FUTA exemption.<br  /> Max length: 250\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Reason code for FUTA exemption. Common values are *501* (5019c)(3) Organization), *IC* (Independent Contractor).<br  /> Max length: 30\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Notes for Medicare exemption.<br  /> Max length: 250\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Reason code for Medicare exemption. Common values are *501* (5019c)(3) Organization), *IC* (Independent Contractor).<br  /> Max length: 30\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Notes for SITW exemption.<br  /> Max length: 250\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Reason code for SITW exemption. Common values are *SE* (Statutory employee), *CR* (clergy/Religious). <br  /> Max length: 30\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Notes for Social Security exemption.<br  /> Max length: 250\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Reason code for Social Security exemption. Common values are *SE* (Statutory employee), *CR* (clergy/Religious). <br  /> Max length: 30\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Notes for SUI exemption.<br  /> Max length: 250\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Reason code for SUI exemption. Common values are *SE* (Statutory employee), *CR* (clergy/Religious). <br  /> Max length: 30\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee SUI (State Unemployment Insurance) state. <br  />Max length: 2\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee 1099R distribution code. Common values are *7* (Normal Distribution), *F* (Charitable Gift Annuity). <br  />Max length: 1\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee tax form for reporting income. Valid values are *W2, 1099M, 1099R*. Default is W2. <br  />Max length: 15\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Badge number usually issued for time and attendance system use. <br  />Max length: 50\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Rate to be charged to third party for time worked by the employee. It is most commonly referenced in the Cost Center Charge, Cost Center Charge vs. Cost Reports, and the Customer Invoice time and attendance reports. <br  />Decimal (12,2)\",\"oneOf\":[{\"type\":\"number\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"If set to true, changes to employee data will be reflected in Web Time.\",\"oneOf\":[{\"type\":\"boolean\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"1st address line.<br  /> Max length: 40\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"2nd address line. <br  /> Max length: 40\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"City.<br  /> Max length: 40\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Country.<br  /> Max length: 30\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"County.<br  /> Max length: 30\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Email. <br  />Max length: 50\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee mail stop.<br  /> Max length: 10\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Mobile phone number.<br  /> Max length: 12\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee pager number.<br  /> Max length: 20\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Phone number.<br  /> Max length: 12\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Phone number extension.<br  /> Max length: 10\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Postal code.<br  /> Max length: 10\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"State or province.<br  /> Max length: 2\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee USCIS or Admission Number. <br  /> Must be 7-10 characters and may begin with an 'A'\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The date the I-9 Verification form was attested by Employer or Authorized representative. Common formats are *MM-DD-CCYY, CCYY-MM-DD*.\",\"format\":\"paylocity-date\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"If Foreign Passport number is provided, provide its country of issuance. Must match Paylocity setup.<br  /> Max length: 30\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Foreign Passport Number.<br  /> Max length: 50\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Form I-94 admission number.<br  /> Must be 11 numeric characters\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Common formats include *MM-DD-CCYY*, *CCYY-MM-DD*.\",\"format\":\"paylocity-date\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Notes regarding employee's i9.<br  /> Max length: 4000\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Indicates if employee I9 is verified.\",\"oneOf\":[{\"type\":\"boolean\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Indicates if employee SSN is verified.\",\"oneOf\":[{\"type\":\"boolean\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The date of employer verification of employee SSN. Common formats include *MM-DD-CCYY*, *CCYY-MM-DD*.\",\"format\":\"paylocity-date\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Notes regarding employee's SSN.<br  /> Max length: 4000\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee Visa type. Must match one of the system coded values.<br  /> Max length: 100\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee work authorization. Must match one of the system coded values.<br  /> Max length: 100\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"End date of employee work eligibility.  Common formats include *MM-DD-CCYY*, *CCYY-MM-DD*.\",\"format\":\"paylocity-date\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Third-party agency associated with earning. Must match Company setup.<br  />Max length: 10\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Value that matches CalculationCode to add to gross wages. For percentage (%), enter whole number (10 = 10%).  <br  />Decimal(12,2)\",\"oneOf\":[{\"type\":\"number\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Year to Date dollar amount not to be exceeded for an earning in the calendar year. Used only with company driven maximums. <br  />Decimal(12,2)\",\"oneOf\":[{\"type\":\"number\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Defines how earnings are calculated. Common values are *% (percentage of gross), flat (flat dollar amount)*. Defaulted to the Company setup calcCode for earning. <br  />Max length: 20\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Cost Center associated with earning. Must match Company setup.<br  /> Max length: 10\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Cost Center associated with earning. Must match Company setup.<br  /> Max length: 10\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Cost Center associated with earning. Must match Company setup.<br  /> Max length: 10\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Earning code. Must match Company setup. <br  />Max length: 10\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Date earning is active. Defaulted to run date or check date based on Company setup. Common formats are MM-DD-CCYY, CCYY-MM-DD.\",\"format\":\"paylocity-date\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Stop date of an earning. Common formats are MM-DD-CCYY, CCYY-MM-DD.\",\"format\":\"paylocity-date\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Needed if earning is applied differently from the payroll frequency (one time earning for example).<br  /> Max length: 5\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Dollar amount. The employee earning will stop when the goal amount is reached.<br  /> Decimal(12,2)\",\"oneOf\":[{\"type\":\"number\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The value is used in conjunction with the Rate field. When entering Group Term Life Insurance (GTL), it should contain the full amount of the group term life insurance policy. <br  /> Decimal(12,2)\",\"oneOf\":[{\"type\":\"number\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Used for ACA. If not entered, defaulted to Company earning setup.\",\"oneOf\":[{\"type\":\"boolean\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Job code associated with earnings. Must match Company setup.<br  /> Max length: 20\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Information to print on the check stub if agency is set up for this earning. <br  />Max length: 50\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Amount already paid to employee toward goal. <br  /> Decimal(12,2)\",\"oneOf\":[{\"type\":\"number\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Maximum amount of the earning on a single paycheck. <br  /> Decimal(12,2)\",\"oneOf\":[{\"type\":\"number\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Minimum amount of the earning on a single paycheck. <br  /> Decimal(12,2)\",\"oneOf\":[{\"type\":\"number\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Rate is used in conjunction with the hoursOrUnits field. <br  /> Decimal(12,2)\",\"oneOf\":[{\"type\":\"number\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Rate Code applies to additional pay rates entered for an employee. Must match Company setup. <br  /> Max length: 10\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Start date of an earning based on payroll calendar. Common formats are MM-DD-CCYY, CCYY-MM-DD.\",\"format\":\"paylocity-date\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee birthdate. Common formats include *MM-DD-CCYY*, *CCYY-MM-DD*.\",\"format\":\"paylocity-date\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Company name as defined in Web Pay, applicable with GET requests only.<br  /> Max length: 50\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Indicates if employee has disability status.\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Leave blank to have Web Pay automatically assign the next available employee ID.<br  /> Max length: 10\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee ethnicity.<br  /> Max length: 10\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee first name. <br  />Max length: 40\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee gender. Common values *M* (Male), *F* (Female). <br  />Max length: 1\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee last name. <br  />Max length: 40\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee marital status. Common values *D (Divorced), M (Married), S (Single), W (Widowed)*. <br  />Max length: 10\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee middle name.<br  /> Max length: 20\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Percentage of employee's ownership in the company, entered as a whole number. <br  /> Decimal (12,2)\",\"oneOf\":[{\"type\":\"number\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee preferred display name.<br  /> Max length: 20\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Prior last name if applicable.<br  />Max length: 40\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee preferred salutation. <br  />Max length: 10\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee social security number. Leave it blank if valid social security number not available. <br  />Max length: 11\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee name suffix. Common values are *Jr, Sr, II*.<br  />Max length: 30\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Indicates if employee is a veteran.\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Account number, entered without special characters and spaces. <br  />Max length: 17<br />\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Account type. Valid values are *C* (Checking), *S* (Saving), *P* (Pay Card). <br   />Max length: 1<br />\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Amount value to be deposited to the account.<br  />Decimal (12,2)<br />\",\"oneOf\":[{\"type\":\"number\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Amount type to indicate the context of the amount. Common values are *F* (FLAT), *F-* (Net Minus), *P* (Percent). <br  /> Max length: 5<br />\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Indicates if direct deposit should be blocked when special check types such as Bonus are processed.<br /><small>new with Web Link 16.6 release</small>\",\"oneOf\":[{\"type\":\"boolean\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Indicates if account will not pre-note.<br />\",\"oneOf\":[{\"type\":\"boolean\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Name on the bank account. Defaults to employee's name. <br  />Max length: 30<br /><small>new with Web Link 16.6 release</small>\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Date to end the pre-note of the account. Common formats include *MM-DD-CCYY*, *CCYY-MM-DD*.<br />\",\"format\":\"paylocity-date\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ABA Transit Routing Number, entered without dashes or spaces. <br  />Max length: 9<br />\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Benefit Class code. Values are configured in Web Pay Company > Setup > Benefits > Classes.<br  />Max length: 30\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Date when Benefit Class takes effect. Common formats include *MM-DD-CCYY*, *CCYY-MM-DD*.\",\"format\":\"paylocity-date\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Salary used to configure benefits.<br  />Decimal(12,2)\",\"oneOf\":[{\"type\":\"number\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Date when Benefit Salary takes effect. Common formats include *MM-DD-CCYY*, *CCYY-MM-DD*.\",\"format\":\"paylocity-date\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Applicable only for HR Enhanced clients and Benefit Classes with ACA Employment Type of Full Time.\",\"oneOf\":[{\"type\":\"boolean\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Only valid for HR Enhanced clients and Benefit Classes that are ACA Employment Type of Full Time.\",\"oneOf\":[{\"type\":\"boolean\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The custom field label whose value is to be added/updated. Must match to the label defined in Web Pay Custom Fields setup.  Max length: 255.\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The custom boolean field value.\",\"oneOf\":[{\"type\":\"boolean\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The custom field label whose value is to be added/updated.  Must match to the label defined in Web Pay Custom Fields setup.  Max length: 255.\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The custom date field value.  Common formats include MM-DD-CCYY, CCYY-MM-DD.\",\"format\":\"paylocity-date\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The custom field label whose value is to be added/updated.  Must match to the label defined in Web Pay Custom Fields setup.  Max length: 255.\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The custom dropdown field value.  Values are configured in Web Pay Company > Setup > List Values > Lookup Values > Custom Fields: PayrollAndHR.  Max length: 10.\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The custom field label whose value is to be added/updated.  Must match to the label defined in Web Pay Custom Fields setup.  Max length: 255.\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The custom number field value.  Decimal (18,6).\",\"oneOf\":[{\"type\":\"number\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The custom field label whose value is to be added/updated.  Must match to the label defined in Web Pay Custom Fields setup.  Max length: 255.\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The custom text field value.  Max length: 255.\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee department/position change reason. Must match Company setup. <br  />Max length: 15\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee clock badge number. Defaults to employeeId. <br  />Max length: 10\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employer defined location, like *branch, division, department*, etc. Must match Company setup. <br  />Max length: 10\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employer defined location, like *branch, division, department*, etc. Must match Company setup. <br  />Max length: 10\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employer defined location, like *branch, division, department*, etc. Must match Company setup. <br  />Max length: 10\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The date the position takes effect. Common formats include *MM-DD-CCYY*, *CCYY-MM-DD*.\",\"format\":\"paylocity-date\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee current employment type. Common values *RFT (Regular Full Time), RPT (Regular Part Time), SNL (Seasonal), TFT (Temporary Full Time), TPT (Temporary Part Time)*. <br  />Max length: 10\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Values are configured in Company > Setup > HR > EEO Classes.<br  /> Max length: 10\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Indicates if employee is exempt from minimum wage.\",\"oneOf\":[{\"type\":\"boolean\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Indicates if employee is exempt from overtime.\",\"oneOf\":[{\"type\":\"boolean\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Indicates if employee is a supervisor or reviewer.\",\"oneOf\":[{\"type\":\"boolean\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Indicates if union dues are collected.\",\"oneOf\":[{\"type\":\"boolean\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Indicates if initiations fees are collected.\",\"oneOf\":[{\"type\":\"boolean\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee current job title. <br  />Max length: 50\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee pay group. Must match Company setup. <br  /> Max length: 20\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee position code. Must match Company setup.<br  />Max length: 20\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Company number of reviewer.<br />Max length: 9\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee id of the reviewer.<br />Max length: 10\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee work shift.<br  />Max length: 255\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Supervisor's company number. Defaults to employee company number.<br  />Max length: 9\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"EmployeeId of the supervisor. <br  />Max length: 10\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Indicates if employee receives tips.\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee union affiliation effective date. Common formats include *MM-DD-CCYY*, *CCYY-MM-DD*.\",\"format\":\"paylocity-date\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee union code. Must match Company setup. <br  />Max length: 10\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee union position. Must match Company setup. <br  />Max length: 30\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee worker compensation code. Must match Company setup.<br  /> Max length: 10\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Tax amount. <br  />Decimal (12,2)\",\"oneOf\":[{\"type\":\"number\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Federal tax exemptions value. <br  />Decimal (12,2)\",\"oneOf\":[{\"type\":\"number\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee federal filing status. Common values are *S* (Single), *M* (Married).<br  />Max length: 50\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Tax percentage. <br  />Decimal (12,2)\",\"oneOf\":[{\"type\":\"number\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Tax calculation code. Common values are *F* (Flat), *P* (Percentage), *FDFP* (Flat Dollar Amount plus Fixed Percentage). <br  />Max length: 10\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"1st address line.<br  /> Max length: 40\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"2nd address line. <br  /> Max length: 40\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"City.<br  /> Max length: 40\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Country.<br  /> Max length: 30\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"County.<br  /> Max length: 30\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Email. <br  />Max length: 50\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Mobile phone number.<br  /> Max length: 12\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Phone number.<br  /> Max length: 12\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Postal code.<br  /> Max length: 10\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"State or province.<br  /> Max length: 2\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Local tax exemptions value.<br  />Decimal (12,2)\",\"oneOf\":[{\"type\":\"number\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Local tax exemptions 2 value.<br  />Decimal (12,2)\",\"oneOf\":[{\"type\":\"number\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee local tax filing status. Must match specific local tax setup. <br  /> Max length: 50\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Resident PSD (political subdivision code) applicable in PA. Must match Company setup.<br  /> Max length: 9\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Local tax code.<br  />Max length: 50\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Work location PSD. Must match Company setup. <br  /> Max length: 9\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Account number, entered without special characters and spaces. <br  />Max length: 17\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Account type. Valid values are *C* (Checking), *S* (Saving), *P* (Pay Card). <br   />Max length: 1\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Indicates if direct deposit should be blocked when special check types such as Bonus are processed.<br /><small>new with Web Link 16.6 release</small>\",\"oneOf\":[{\"type\":\"boolean\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Indicates if account will not pre-note.\",\"oneOf\":[{\"type\":\"boolean\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Name on the bank account. Defaults to employee's name. <br  />Max length: 30<br /><small>new with Web Link 16.6 release</small>\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Date to end the pre-note of the account. Common formats include *MM-DD-CCYY*, *CCYY-MM-DD*.\",\"format\":\"paylocity-date\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ABA Transit Routing Number, entered without dashes or spaces. <br  />Max length: 9\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"State tax code.<br  /> Max length: 50\",\"oneOf\":[{\"type\":\"number\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"State tax exemptions value.<br  />Decimal (12,2)\",\"oneOf\":[{\"type\":\"number\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"State tax exemptions 2 value.<br  />Decimal (12,2)\",\"oneOf\":[{\"type\":\"number\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee state tax filing status. Common values are *S* (Single), *M* (Married).<br  />Max length: 50\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"State Tax percentage. <br  />Decimal (12,2)\",\"oneOf\":[{\"type\":\"number\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Non-primary state tax reciprocity code.<br  /> Max length: 50\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Supplemental check calculation code. Common values are *Blocked* (Taxes blocked on Supplemental checks), *Supp* (Use supplemental Tax Rate-Code). <br  />Max length: 10\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Tax calculation code. Common values are *F* (Flat), *P* (Percentage), *FDFP* (Flat Dollar Amount plus Fixed Percentage). <br  />Max length: 10\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"State tax code.<br  /> Max length: 50\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee annual salary.<br />Decimal (12,2)\",\"oneOf\":[{\"type\":\"number\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee base rate, used for Hourly employees. <br  />Decimal (12,2)\",\"oneOf\":[{\"type\":\"number\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The date of the first check on which the new pay rate will appear. This value is only applicable when updating an existing employee. Common formats include *MM-DD-CCYY*, *CCYY-MM-DD*.\",\"format\":\"paylocity-date\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Pay rate change reason.<br  /> Max length: 30\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee default hours consistently worked. If autoPayType is set to D, employee will be paid hourly base rate for the defaultHours. <br  />Decimal (12,2)\",\"oneOf\":[{\"type\":\"number\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The date the employee's pay rate takes effect. Common formats include *MM-DD-CCYY*, *CCYY-MM-DD*.\",\"format\":\"paylocity-date\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"If set to *True*, employee will be paid automatically using deafultHours.\",\"oneOf\":[{\"type\":\"boolean\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee current pay frequency. Common values are *A (Annual), B (Bi-Weekly), D (Daily), M (Monthly), S (Semi-Monthly), Q (Quarterly), W (Weekly)*. <br  />Max length: 5\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee pay grade. Must match Company setup. <br  /> Max length: 10\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Pay rate notes regarding employee.<br  /> Max length: 250\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee pay type (rate code). Valid values are *Hourly* or *Salary*. <br  />Max length: 10\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee base rate frequency used with payType Hourly. Common values are *Hour, Week*. Default is Hour. <br  />Max length: 10\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee gross salary per pay period used with payType Salary.<br  />Decimal (12,2)\",\"oneOf\":[{\"type\":\"number\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"State tax code.<br  /> Max length: 50\",\"oneOf\":[{\"type\":\"number\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"State tax exemptions value.<br  />Decimal (12,2)\",\"oneOf\":[{\"type\":\"number\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"State tax exemptions 2 value.<br  />Decimal (12,2)\",\"oneOf\":[{\"type\":\"number\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee state tax filing status. Common values are *S* (Single), *M* (Married).<br  />Max length: 50\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"State Tax percentage. <br  />Decimal (12,2)\",\"oneOf\":[{\"type\":\"number\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Supplemental check calculation code. Common values are *Blocked* (Taxes blocked on Supplemental checks), *Supp* (Use supplemental Tax Rate-Code). <br  />Max length: 10\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Tax calculation code. Common values are *F* (Flat), *P* (Percentage), *FDFP* (Flat Dollar Amount plus Fixed Percentage). <br  />Max length: 10\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"State tax code.<br  /> Max length: 50\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Adjusted seniority date. Common formats include *MM-DD-CCYY*, *CCYY-MM-DD*.\",\"format\":\"paylocity-date\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee status change reason. Must match Company setup.<br  /> Max length: 15\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Common formats include *MM-DD-CCYY*, *CCYY-MM-DD*.\",\"format\":\"paylocity-date\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee current work status. Common values are *A* (Active), *L* (Leave of Absence), *T* (Terminated). <br  />Max length: 20\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee hired date. Updates to hire date are not allowed and will be ignored. Common formats include *MM-DD-CCYY*, *CCYY-MM-DD*.\",\"format\":\"paylocity-date\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Indicates if employee eligible for rehire.\",\"oneOf\":[{\"type\":\"boolean\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Rehire date if employee is rehired.  Updates to re-hire date are not allowed and will be ignored. Common formats are *MM-DD-CCYY, CCYY-MM-DD*.\",\"format\":\"paylocity-date\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Notes for FITW exemption.<br  /> Max length: 250\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Reason code for FITW exemption. Common values are *SE* (Statutory employee), *CR* (clergy/Religious). <br  /> Max length: 30\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Notes for FUTA exemption.<br  /> Max length: 250\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Reason code for FUTA exemption. Common values are *501* (5019c)(3) Organization), *IC* (Independent Contractor).<br  /> Max length: 30\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Notes for Medicare exemption.<br  /> Max length: 250\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Reason code for Medicare exemption. Common values are *501* (5019c)(3) Organization), *IC* (Independent Contractor).<br  /> Max length: 30\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Notes for SITW exemption.<br  /> Max length: 250\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Reason code for SITW exemption. Common values are *SE* (Statutory employee), *CR* (clergy/Religious). <br  /> Max length: 30\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Notes for Social Security exemption.<br  /> Max length: 250\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Reason code for Social Security exemption. Common values are *SE* (Statutory employee), *CR* (clergy/Religious). <br  /> Max length: 30\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Notes for SUI exemption.<br  /> Max length: 250\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Reason code for SUI exemption. Common values are *SE* (Statutory employee), *CR* (clergy/Religious). <br  /> Max length: 30\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee SUI (State Unemployment Insurance) state. <br  />Max length: 2\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee 1099R distribution code. Common values are *7* (Normal Distribution), *F* (Charitable Gift Annuity). <br  />Max length: 1\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee tax form for reporting income. Valid values are *W2, 1099M, 1099R*. Default is W2. <br  />Max length: 15\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Badge number usually issued for time and attendance system use. <br  />Max length: 50\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Rate to be charged to third party for time worked by the employee. It is most commonly referenced in the Cost Center Charge, Cost Center Charge vs. Cost Reports, and the Customer Invoice time and attendance reports. <br  />Decimal (12,2)\",\"oneOf\":[{\"type\":\"number\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"If set to true, changes to employee data will be reflected in Web Time.\",\"oneOf\":[{\"type\":\"boolean\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"1st address line.<br  /> Max length: 40\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"2nd address line. <br  /> Max length: 40\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"City.<br  /> Max length: 40\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Country.<br  /> Max length: 30\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"County.<br  /> Max length: 30\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Email. <br  />Max length: 50\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee mail stop.<br  /> Max length: 10\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Mobile phone number.<br  /> Max length: 12\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee pager number.<br  /> Max length: 20\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Phone number.<br  /> Max length: 12\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Phone number extension.<br  /> Max length: 10\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Postal code.<br  /> Max length: 10\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"State or province.<br  /> Max length: 2\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee USCIS or Admission Number. <br  /> Must be 7-10 characters and may begin with an 'A'\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The date the I-9 Verification form was attested by Employer or Authorized representative. Common formats are *MM-DD-CCYY, CCYY-MM-DD*.\",\"format\":\"paylocity-date\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"If Foreign Passport number is provided, provide its country of issuance. Must match Paylocity setup.<br  /> Max length: 30\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Foreign Passport Number.<br  /> Max length: 50\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Form I-94 admission number.<br  /> Must be 11 numeric characters\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Common formats include *MM-DD-CCYY*, *CCYY-MM-DD*.\",\"format\":\"paylocity-date\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Notes regarding employee's i9.<br  /> Max length: 4000\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Indicates if employee I9 is verified.\",\"oneOf\":[{\"type\":\"boolean\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Indicates if employee SSN is verified.\",\"oneOf\":[{\"type\":\"boolean\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The date of employer verification of employee SSN. Common formats include *MM-DD-CCYY*, *CCYY-MM-DD*.\",\"format\":\"paylocity-date\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Notes regarding employee's SSN.<br  /> Max length: 4000\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee Visa type. Must match one of the system coded values.<br  /> Max length: 100\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee work authorization. Must match one of the system coded values.<br  /> Max length: 100\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"End date of employee work eligibility.  Common formats include *MM-DD-CCYY*, *CCYY-MM-DD*.\",\"format\":\"paylocity-date\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee birthdate. Common formats include *MM-DD-CCYY*, *CCYY-MM-DD*.\",\"format\":\"paylocity-date\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Indicates if employee has disability status.\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Leave blank to have Web Pay automatically assign the next available employee ID.<br  /> Max length: 10\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee ethnicity.<br  /> Max length: 10\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee first name. <br  />Max length: 40\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Reason code for FITW exemption. Common values are *SE* (Statutory employee), *CR* (clergy/Religious). <br  /> Max length: 30\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Reason code for FUTA exemption. Common values are *501* (5019c)(3) Organization), *IC* (Independent Contractor).<br  /> Max length: 30\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee gender. Common values *M* (Male), *F* (Female). <br  />Max length: 1\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Indicates if employee in agriculture or farming.\",\"oneOf\":[{\"type\":\"boolean\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Indicates if employee is a smoker.\",\"oneOf\":[{\"type\":\"boolean\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee last name. <br  />Max length: 40\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee marital status. Common values *D (Divorced), M (Married), S (Single), W (Widowed)*. <br  />Max length: 10\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Reason code for Medicare exemption. Common values are *501* (5019c)(3) Organization), *IC* (Independent Contractor).<br  /> Max length: 30\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee middle name.<br  /> Max length: 20\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee preferred display name.<br  /> Max length: 20\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Prior last name if applicable.<br  />Max length: 40\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee preferred salutation. <br  />Max length: 10\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Reason code for SITW exemption. Common values are *SE* (Statutory employee), *CR* (clergy/Religious). <br  /> Max length: 30\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Reason code for Social Security exemption. Common values are *SE* (Statutory employee), *CR* (clergy/Religious). <br  /> Max length: 30\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee social security number. Leave it blank if valid social security number not available. <br  />Max length: 11\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee name suffix. Common values are *Jr, Sr, II*.<br  />Max length: 30\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Reason code for SUI exemption. Common values are *SE* (Statutory employee), *CR* (clergy/Religious). <br  /> Max length: 30\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee SUI (State Unemployment Insurance) state. <br  />Max length: 2\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee 1099R distribution code. Common values are *7* (Normal Distribution), *F* (Charitable Gift Annuity). <br  />Max length: 1\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee tax form for reporting income. Valid values are *W2, 1099M, 1099R*. Default is W2. <br  />Max length: 15\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Indicates if employee is a veteran.\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Account number, entered without special characters and spaces. <br  />Max length: 17<br />\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Account type. Valid values are *C* (Checking), *S* (Saving), *P* (Pay Card). <br   />Max length: 1<br />\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Amount value to be deposited to the account.<br  />Decimal (12,2)<br />\",\"oneOf\":[{\"type\":\"number\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Amount type to indicate the context of the amount. Common values are *F* (FLAT), *F-* (Net Minus), *P* (Percent). <br  /> Max length: 5<br />\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Indicates if account will not pre-note.<br />\",\"oneOf\":[{\"type\":\"boolean\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Date to end the pre-note of the account. Common formats include *MM-DD-CCYY*, *CCYY-MM-DD*.<br />\",\"format\":\"paylocity-date\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ABA Transit Routing Number, entered without dashes or spaces. <br  />Max length: 9<br />\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Benefit Class code. Values are configured in Web Pay Company > Setup > Benefits > Classes.<br  />Max length: 30\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Date when Benefit Class takes effect. Common formats include *MM-DD-CCYY*, *CCYY-MM-DD*.\",\"format\":\"paylocity-date\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Salary used to configure benefits.<br  />Decimal(12,2)\",\"oneOf\":[{\"type\":\"number\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Date when Benefit Salary takes effect. Common formats include *MM-DD-CCYY*, *CCYY-MM-DD*.\",\"format\":\"paylocity-date\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Applicable only for ACA Enhanced clients and Benefit Classes with ACA Employment Type of Full Time.\",\"oneOf\":[{\"type\":\"boolean\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Only valid for ACA Enhanced clients and Benefit Classes that are ACA Employment Type of Full Time.\",\"oneOf\":[{\"type\":\"boolean\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee department/position change reason. Must match Company setup. <br  />Max length: 15\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee clock badge number. Defaults to employeeId. <br  />Max length: 10\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employer defined location, like *branch, division, department*, etc. Must match Company setup. <br  />Max length: 10\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employer defined location, like *branch, division, department*, etc. Must match Company setup. <br  />Max length: 10\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employer defined location, like *branch, division, department*, etc. Must match Company setup. <br  />Max length: 10\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The date the position takes effect. Common formats include *MM-DD-CCYY*, *CCYY-MM-DD*.\",\"format\":\"paylocity-date\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee current employment type. Common values *RFT (Regular Full Time), RPT (Regular Part Time), SNL (Seasonal), TFT (Temporary Full Time), TPT (Temporary Part Time)*. <br  />Max length: 10\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Values are configured in Company > Setup > HR > EEO Classes.<br  /> Max length: 10\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Indicates if employee is exempt from minimum wage.\",\"oneOf\":[{\"type\":\"boolean\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Indicates if employee is exempt from overtime.\",\"oneOf\":[{\"type\":\"boolean\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Indicates if employee is a supervisor or reviewer.\",\"oneOf\":[{\"type\":\"boolean\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Indicates if union dues are collected.\",\"oneOf\":[{\"type\":\"boolean\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Indicates if initiations fees are collected.\",\"oneOf\":[{\"type\":\"boolean\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee current job title. <br  />Max length: 50\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee pay group. Must match Company setup. <br  /> Max length: 20\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee position code. Must match Company setup.<br  />Max length: 20\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee work shift.<br  />Max length: 255\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Supervisor's company number. Defaults to employee company number.<br  />Max length: 9\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"EmployeeId of the supervisor. <br  />Max length: 10\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Indicates if employee receives tips.\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee union affiliation effective date. Common formats include *MM-DD-CCYY*, *CCYY-MM-DD*.\",\"format\":\"paylocity-date\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee union code. Must match Company setup. <br  />Max length: 10\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee union position. Must match Company setup. <br  />Max length: 30\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee worker compensation code. Must match Company setup.<br  /> Max length: 10\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Tax amount. <br  />Decimal (12,2)\",\"oneOf\":[{\"type\":\"number\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Federal tax exemptions value. <br  />Decimal (12,2)\",\"oneOf\":[{\"type\":\"number\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee federal filing status. Common values are *S* (Single), *M* (Married).<br  />Max length: 50\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Tax percentage. <br  />Decimal (12,2)\",\"oneOf\":[{\"type\":\"number\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Tax calculation code. Common values are *F* (Flat), *P* (Percentage), *FDFP* (Flat Dollar Amount plus Fixed Percentage). <br  />Max length: 10\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"1st address line.<br  /> Max length: 40\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"2nd address line. <br  /> Max length: 40\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"City.<br  /> Max length: 40\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Country.<br  /> Max length: 30\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"County.<br  /> Max length: 30\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Email. <br  />Max length: 50\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Mobile phone number.<br  /> Max length: 12\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Phone number.<br  /> Max length: 12\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Postal code.<br  /> Max length: 10\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"State or province.<br  /> Max length: 2\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Account number, entered without special characters and spaces. <br  />Max length: 17\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Account type. Valid values are *C* (Checking), *S* (Saving), *P* (Pay Card). <br   />Max length: 1\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Indicates if account will not pre-note.\",\"oneOf\":[{\"type\":\"boolean\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Date to end the pre-note of the account. Common formats include *MM-DD-CCYY*, *CCYY-MM-DD*.\",\"format\":\"paylocity-date\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"ABA Transit Routing Number, entered without dashes or spaces. <br  />Max length: 9\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"State tax code.<br  /> Max length: 50\",\"oneOf\":[{\"type\":\"number\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"State tax exemptions value.<br  />Decimal (12,2)\",\"oneOf\":[{\"type\":\"number\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"State tax exemptions 2 value.<br  />Decimal (12,2)\",\"oneOf\":[{\"type\":\"number\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee state tax filing status. Common values are *S* (Single), *M* (Married).<br  />Max length: 50\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"State Tax percentage. <br  />Decimal (12,2)\",\"oneOf\":[{\"type\":\"number\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Non-primary state tax reciprocity code.<br  /> Max length: 50\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Supplemental check calculation code. Common values are *Blocked* (Taxes blocked on Supplemental checks), *Supp* (Use supplemental Tax Rate-Code). <br  />Max length: 10\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Tax calculation code. Common values are *F* (Flat), *P* (Percentage), *FDFP* (Flat Dollar Amount plus Fixed Percentage). <br  />Max length: 10\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"State tax code.<br  /> Max length: 50\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee base rate, used for Hourly employees. <br  />Decimal (12,2)\",\"oneOf\":[{\"type\":\"number\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Pay rate change reason.<br  /> Max length: 30\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee default hours consistently worked. If autoPayType is set to D, employee will be paid hourly base rate for the defaultHours. <br  />Decimal (12,2)\",\"oneOf\":[{\"type\":\"number\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The date the employee's pay rate takes effect. Common formats include *MM-DD-CCYY*, *CCYY-MM-DD*.\",\"format\":\"paylocity-date\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"If set to *True*, employee will be paid automatically using deafultHours.\",\"oneOf\":[{\"type\":\"boolean\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee current pay frequency. Common values are *A (Annual), B (Bi-Weekly), D (Daily), M (Monthly), S (Semi-Monthly), Q (Quarterly), W (Weekly)*. <br  />Max length: 5\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee pay grade. Must match Company setup. <br  /> Max length: 10\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee pay type (rate code). Valid values are *Hourly* or *Salary*. <br  />Max length: 10\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee base rate frequency used with payType Hourly. Common values are *Hour, Week*. Default is Hour. <br  />Max length: 10\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee gross salary per pay period used with payType Salary.<br  />Decimal (12,2)\",\"oneOf\":[{\"type\":\"number\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"State tax code.<br  /> Max length: 50\",\"oneOf\":[{\"type\":\"number\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"State tax exemptions value.<br  />Decimal (12,2)\",\"oneOf\":[{\"type\":\"number\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"State tax exemptions 2 value.<br  />Decimal (12,2)\",\"oneOf\":[{\"type\":\"number\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee state tax filing status. Common values are *S* (Single), *M* (Married).<br  />Max length: 50\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"State Tax percentage. <br  />Decimal (12,2)\",\"oneOf\":[{\"type\":\"number\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Supplemental check calculation code. Common values are *Blocked* (Taxes blocked on Supplemental checks), *Supp* (Use supplemental Tax Rate-Code). <br  />Max length: 10\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Tax calculation code. Common values are *F* (Flat), *P* (Percentage), *FDFP* (Flat Dollar Amount plus Fixed Percentage). <br  />Max length: 10\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"State tax code.<br  /> Max length: 50\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Adjusted seniority date. Common formats include *MM-DD-CCYY*, *CCYY-MM-DD*.\",\"format\":\"paylocity-date\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee status change reason. Must match Company setup.<br  /> Max length: 15\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Common formats include *MM-DD-CCYY*, *CCYY-MM-DD*.\",\"format\":\"paylocity-date\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee current work status. Common values are *A* (Active), *L* (Leave of Absence), *T* (Terminated). <br  />Max length: 20\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee hired date. Common formats include *MM-DD-CCYY*, *CCYY-MM-DD*.\",\"format\":\"paylocity-date\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Indicates if employee eligible for rehire.\",\"oneOf\":[{\"type\":\"boolean\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Badge number usually issued for time and attendance system use. <br  />Max length: 50\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Rate to be charged to third party for time worked by the employee. It is most commonly referenced in the Cost Center Charge, Cost Center Charge vs. Cost Reports, and the Customer Invoice time and attendance reports. <br  />Decimal (12,2)\",\"oneOf\":[{\"type\":\"number\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"If set to true, changes to employee data will be reflected in Web Time.\",\"oneOf\":[{\"type\":\"boolean\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"1st address line.<br  /> Max length: 40\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"2nd address line. <br  /> Max length: 40\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"City.<br  /> Max length: 40\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Country.<br  /> Max length: 30\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"County.<br  /> Max length: 30\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Email. <br  />Max length: 50\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Mobile phone number.<br  /> Max length: 12\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee pager number.<br  /> Max length: 20\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Phone number.<br  /> Max length: 12\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Phone number extension.<br  /> Max length: 10\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Postal code.<br  /> Max length: 10\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"State or province.<br  /> Max length: 2\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee USCIS or Admission Number. <br  /> Must be 7-10 characters and may begin with an 'A'\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The date the I-9 Verification form was attested by Employer or Authorized representative. Common formats are *MM-DD-CCYY, CCYY-MM-DD*.\",\"format\":\"paylocity-date\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"If Foreign Passport number is provided, provide its country of issuance. Must match Paylocity setup.<br  /> Max length: 30\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Foreign Passport Number.<br  /> Max length: 50\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Form I-94 admission number.<br  /> Must be 11 numeric characters\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Common formats include *MM-DD-CCYY*, *CCYY-MM-DD*.\",\"format\":\"paylocity-date\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Notes regarding employee's i9.<br  /> Max length: 4000\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Indicates if employee I9 is verified.\",\"oneOf\":[{\"type\":\"boolean\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Indicates if employee SSN is verified.\",\"oneOf\":[{\"type\":\"boolean\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The date of employer verification of employee SSN. Common formats include *MM-DD-CCYY*, *CCYY-MM-DD*.\",\"format\":\"paylocity-date\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Notes regarding employee's SSN.<br  /> Max length: 4000\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee Visa type. Must match one of the system coded values.<br  /> Max length: 100\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Employee work authorization. Must match one of the system coded values.<br  /> Max length: 100\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"End date of employee work eligibility.  Common formats include *MM-DD-CCYY*, *CCYY-MM-DD*.\",\"format\":\"paylocity-date\",\"oneOf\":[{\"type\":\"string\"},{\"type\":\"null\"}]}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 18,
        "numOpsQuery": 8,
        "numOpsMutation": 10,
        "numQueriesCreated": 7,
        "numMutationsCreated": 2
      }
    },
    {
      "name": "Peel Tune-in API",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /hashtag/related' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /hashtag/trendingShows' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /hashtag/tuneinlinks' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /health' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /status/{showID}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 5,
        "numOpsQuery": 5,
        "numOpsMutation": 0,
        "numQueriesCreated": 0,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Polygon",
      "report": {
        "warnings": [],
        "numOps": 10,
        "numOpsQuery": 10,
        "numOpsMutation": 0,
        "numQueriesCreated": 10,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Postmark Account-level",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /servers/{serverid}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 20,
        "numOpsQuery": 6,
        "numOpsMutation": 14,
        "numQueriesCreated": 6,
        "numMutationsCreated": 13
      }
    },
    {
      "name": "Postmark",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The properties of this object will vary based request parameters.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The properties of this object will vary based request parameters.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The properties of this object will vary based request parameters.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The properties of this object will vary based request parameters.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The properties of this object will vary based request parameters.\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The model to be used when rendering test content.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 49,
        "numOpsQuery": 33,
        "numOpsMutation": 16,
        "numQueriesCreated": 33,
        "numMutationsCreated": 16
      }
    },
    {
      "name": "posty_API",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /api/v1/domains.json' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /api/v1/domains.json' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /api/v1/domains/{domain_name}.json' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /api/v1/domains/{domain_name}.json' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /api/v1/domains/{domain_name}.json' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /api/v1/domains/{domain_name}/aliases.json' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /api/v1/domains/{domain_name}/aliases.json' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /api/v1/domains/{domain_name}/aliases/{alias_name}.json' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /api/v1/domains/{domain_name}/aliases/{alias_name}.json' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /api/v1/domains/{domain_name}/aliases/{alias_name}.json' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /api/v1/domains/{domain_name}/users.json' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /api/v1/domains/{domain_name}/users.json' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /api/v1/domains/{domain_name}/users/{user_name}.json' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /api/v1/domains/{domain_name}/users/{user_name}.json' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /api/v1/domains/{domain_name}/users/{user_name}.json' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /api/v1/domains/{domain_name}/users/{user_name}/aliases.json' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /api/v1/domains/{domain_name}/users/{user_name}/aliases.json' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /api/v1/domains/{domain_name}/users/{user_name}/aliases/{alias_name}.json' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /api/v1/domains/{domain_name}/users/{user_name}/aliases/{alias_name}.json' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /api/v1/domains/{domain_name}/users/{user_name}/aliases/{alias_name}.json' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /api/v1/summary.json' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /api/v1/swagger_doc.json' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /api/v1/swagger_doc/{name}.json' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /api/v1/transports.json' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /api/v1/transports.json' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /api/v1/transports/{transport_name}.json' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /api/v1/transports/{transport_name}.json' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /api/v1/transports/{transport_name}.json' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 28,
        "numOpsQuery": 13,
        "numOpsMutation": 15,
        "numQueriesCreated": 0,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Qualpay Payment Gateway",
      "report": {
        "warnings": [],
        "numOps": 10,
        "numOpsQuery": 0,
        "numOpsMutation": 10,
        "numQueriesCreated": 0,
        "numMutationsCreated": 10
      }
    },
    {
      "name": "Request Baskets",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /baskets' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /baskets' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /baskets/{name}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /baskets/{name}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /baskets/{name}/requests' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /baskets/{name}/requests' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /baskets/{name}/requests' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /baskets/{name}/responses/{method}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Collection of header values\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"description\":\"Map of HTTP headers, key represents name, value is array of values\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"description\":\"Collection of header values\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"description\":\"Map of HTTP headers, key represents name, value is array of values\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 9,
        "numOpsQuery": 4,
        "numOpsMutation": 5,
        "numQueriesCreated": 4,
        "numMutationsCreated": 1
      }
    },
    {
      "name": "Refuge Restrooms",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/restrooms.json' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/restrooms/by_date.json' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/restrooms/by_location.json' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/restrooms/search.json' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 4,
        "numOpsQuery": 4,
        "numOpsMutation": 0,
        "numQueriesCreated": 0,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "reverb",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /articles' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /categories' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /categories/flat' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /categories/taxonomy' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /categories/{product_type}/{category}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /categories/{uuid}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /comparison_shopping_pages' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /comparison_shopping_pages/find' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /comparison_shopping_pages/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /comparison_shopping_pages/{id}/listings' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /comparison_shopping_pages/{id}/reviews' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /conversations/{conversation_id}/offer' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /conversations/{id}/offer' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /countries' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /curated_sets/{slug}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /currencies/display' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /currencies/listing' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /feedback/{feedback_id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /handpicked/{slug}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /listing_conditions' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /listings' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /listings' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /listings/all' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /listings/facets/seller_location' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /listings/{id}/negotiation' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /listings/{id}/offer' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /listings/{listing_id}/bump' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /listings/{listing_id}/bump/{budget_type}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /listings/{listing_id}/conversations' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /listings/{listing_id}/images' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /listings/{listing_id}/images/{image_id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /listings/{listing_id}/product_bundle' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /listings/{listing_id}/sales' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /listings/{slug}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /listings/{slug}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /listings/{slug}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /listings/{slug}/edit' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /listings/{slug}/flag' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /listings/{slug}/reviews' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /listings/{slug}/reviews' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /listings/{slug}/similar_listings' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /my/account' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /my/account' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /my/addresses' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /my/addresses' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /my/addresses/{address_id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /my/addresses/{address_id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /my/conversations' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /my/conversations' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /my/conversations/{conversation_id}/messages' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /my/conversations/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /my/conversations/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /my/counts' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /my/curated_set/product/{product_id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /my/curated_set/product/{product_id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /my/feed' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /my/feed/customize' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /my/feed/grid' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /my/feedback/received' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /my/feedback/sent' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /my/follows' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /my/follows/articles' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /my/follows/articles' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /my/follows/brands/{slug}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /my/follows/brands/{slug}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /my/follows/brands/{slug}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /my/follows/categories/{category}/{subcategory}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /my/follows/categories/{category}/{subcategory}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /my/follows/categories/{category}/{subcategory}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /my/follows/categories/{identifier}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /my/follows/categories/{identifier}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /my/follows/categories/{identifier}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /my/follows/collections/{slug}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /my/follows/collections/{slug}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /my/follows/collections/{slug}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /my/follows/handpicked/{slug}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /my/follows/handpicked/{slug}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /my/follows/handpicked/{slug}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /my/follows/search' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /my/follows/search' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /my/follows/shops/{slug}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /my/follows/shops/{slug}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /my/follows/shops/{slug}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /my/follows/{follow_id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /my/follows/{follow_id}/alert' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /my/follows/{follow_id}/alert' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /my/listings' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /my/listings/drafts' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /my/listings/negotiations' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /my/listings/{slug}/state/end' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /my/lists' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /my/negotiations/buying' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /my/negotiations/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /my/negotiations/{id}/accept' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /my/negotiations/{id}/counter' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /my/negotiations/{id}/decline' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /my/orders/awaiting_feedback' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /my/orders/buying/all' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /my/orders/buying/unpaid' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /my/orders/buying/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /my/orders/buying/{id}/mark_received' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /my/orders/selling/all' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /my/orders/selling/awaiting_shipment' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /my/orders/selling/buyer_history/{buyer_id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /my/orders/selling/unpaid' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /my/orders/selling/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /my/orders/selling/{id}/mark_picked_up' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /my/orders/selling/{id}/ship' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /my/orders/selling/{order_id}/refund_requests' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /my/payments/selling' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /my/payments/selling/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /my/payouts' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /my/payouts/{id}/line_items' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /my/refund_requests/selling' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /my/refund_requests/selling/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /my/viewed_listings' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /my/wishlist' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /my/wishlist/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /my/wishlist/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /orders/{order_id}/feedback/buyer' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /orders/{order_id}/feedback/buyer' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /orders/{order_id}/feedback/seller' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /orders/{order_id}/feedback/seller' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /payment_methods' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /priceguide' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /priceguide/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /priceguide/{id}/transactions' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /priceguide/{id}/transactions/summary' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /products/reviews/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /products/reviews/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /products/{slug}/reviews' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /products/{slug}/reviews' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /sales/reverb' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /sales/seller' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /sales/{sale_id}/listings' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /sales/{sale_id}/listings' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /sales/{slug}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /shipping/providers' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /shipping/regions' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /shop' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /shop' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /shop/listing_conditions' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /shop/payment_methods' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /shop/vacation' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /shop/vacation' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /shop/vacation' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /shops/{shop_id}/shipping_profiles' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /shops/{slug}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /shops/{slug}/feedback' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /shops/{slug}/feedback/buyer' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /shops/{slug}/feedback/seller' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /wants' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /wants/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /wants/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /webhooks/registrations' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /webhooks/registrations' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /webhooks/registrations/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /webhooks/registrations/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 158,
        "numOpsQuery": 97,
        "numOpsMutation": 61,
        "numQueriesCreated": 0,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Ritc",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /actions/{action_id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /apps/ext/api/credentials/{channel_id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /apps/{app_id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /channels/{channel_id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /rules/{rule_id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /triggers/{trigger_id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /users/admin/{user_id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /users/{user_id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /users/{user_id}/channels/{channel_id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /users/{user_id}/rules/{rule_id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Type of channel. Choices are 'public' or 'private'. Private channels are only viewable within an account, while public channels are viewable to everyone\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Object containing named Javascript code sets\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Object containing channel-defined action parameters\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Type of channel. Choices are 'public' or 'private'. Private channels are only viewable within an account, while public channels are viewable to everyone in the system\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Object containing named Javascript code sets\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Object containing channel-defined trigger parameters\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Object containing user-defined app user configuration\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 58,
        "numOpsQuery": 29,
        "numOpsMutation": 29,
        "numQueriesCreated": 29,
        "numMutationsCreated": 19
      }
    },
    {
      "name": "RiteKit",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/emoji/auto-emojify' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/emoji/suggestions' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/images/animate' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/images/logo' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/images/quote' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/influencers/hashtag/{hashtag}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/link/cta' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/link/short-link' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/search/trending' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/stats/auto-hashtag?post={post}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/stats/hashtag-suggestions/{topic}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/stats/history/{hashtag}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/stats/multiple-hashtags' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 13,
        "numOpsQuery": 13,
        "numOpsMutation": 0,
        "numQueriesCreated": 0,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Rotten Tomatoes",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /lists.json' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /lists/dvds.json' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /lists/dvds/current_releases.json' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /lists/dvds/new_releases.json' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /lists/dvds/top_rentals.json' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /lists/dvds/upcoming.json' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /lists/movies.json' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /lists/movies/box_office.json' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /lists/movies/in_theaters.json' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /lists/movies/opening.json' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /lists/movies/upcoming.json' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /movie_alias.json' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /movies.json' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /movies/{id}.json' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /movies/{id}/cast.json' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /movies/{id}/clips.json' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /movies/{id}/reviews.json' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /movies/{id}/similar.json' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 18,
        "numOpsQuery": 18,
        "numOpsMutation": 0,
        "numQueriesCreated": 0,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Seldon",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /actions' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /items' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /items' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /items' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /items/type' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /items/{itemId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /js/action/new' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /js/recommendations' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /token' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /users' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /users' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /users' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /users/{userId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /users/{userId}/actions' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /users/{userId}/recommendations' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 15,
        "numOpsQuery": 10,
        "numOpsMutation": 5,
        "numQueriesCreated": 0,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Runscope",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /buckets/{bucketKey}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /buckets/{bucketKey}/environments' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /buckets/{bucketKey}/environments' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /buckets/{bucketKey}/environments/{environmentId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /buckets/{bucketKey}/errors' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /buckets/{bucketKey}/messages' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /buckets/{bucketKey}/messages' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /buckets/{bucketKey}/messages/{messageId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /buckets/{bucketKey}/tests/{testId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /buckets/{bucketKey}/tests/{testId}/environments' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /buckets/{bucketKey}/tests/{testId}/environments/{environmentId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /buckets/{bucketKey}/tests/{testId}/steps' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /buckets/{bucketKey}/tests/{testId}/steps' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /buckets/{bucketKey}/tests/{testId}/steps/{stepId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /buckets/{bucketKey}/tests/{testId}/steps/{stepId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The changes in average response time compared to the last period.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The average response time for different percentiles for the request in the requested timeframe.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 29,
        "numOpsQuery": 15,
        "numOpsMutation": 14,
        "numQueriesCreated": 10,
        "numMutationsCreated": 4
      }
    },
    {
      "name": "SalesLoft Platform",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /v2/accounts/{id}.json' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /v2/cadence_memberships/{id}.json' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /v2/custom_fields/{id}.json' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /v2/imports/{id}.json' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /v2/people/{id}.json' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /v2/person_stages/{id}.json' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Custom fields are defined by the user's team. Only fields with values are presented in the API.\",\"example\":{\"MyField\":\"A Value\",\"Other\":\"Field\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Selected headers that are included if this email used them. Available keys are: cc, bcc\",\"example\":{\"bcc\":\"track@salesforce.com\",\"cc\":\"sb@salesloft.com\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Additional fields that are logged to Salesforce, if mapped by the team at the time of writing to Salesforce\",\"example\":{\"ecorp__Call_Type__c\":\"inbound follow up\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Custom fields are defined by the user's team. Only fields with values are presented in the API.\",\"example\":{\"MyField\":\"A Value\",\"Other\":\"Field\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 52,
        "numOpsQuery": 33,
        "numOpsMutation": 19,
        "numQueriesCreated": 33,
        "numMutationsCreated": 13
      }
    },
    {
      "name": "SchoolDigger API V1",
      "report": {
        "warnings": [],
        "numOps": 6,
        "numOpsQuery": 6,
        "numOpsMutation": 0,
        "numQueriesCreated": 6,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Scrape Website Email API",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/ping.json' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/scrape_emails.json' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/scrape_store_links.json' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 3,
        "numOpsQuery": 3,
        "numOpsMutation": 0,
        "numQueriesCreated": 0,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "SelectPdf HTML To PDF",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /api2/convert' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 1,
        "numOpsQuery": 0,
        "numOpsMutation": 1,
        "numQueriesCreated": 0,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Semantria",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /blacklist.{content_type}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /blacklist.{content_type}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /blacklist.{content_type}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /blacklist.{content_type}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /blacklist.{content_type}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /blacklist.{content_type}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /blacklist.{content_type}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /blacklist.{content_type}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /categories.{content_type}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /categories.{content_type}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /categories.{content_type}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /categories.{content_type}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /categories.{content_type}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /categories.{content_type}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /categories.{content_type}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /categories.{content_type}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /collection.{content_type}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /collection.{content_type}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /collection/processed.{content_type}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /collection/processed.{content_type}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /collection/{collection_id}.{content_type}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /configurations.{content_type}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /configurations.{content_type}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /configurations.{content_type}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /configurations.{content_type}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /configurations.{content_type}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /configurations.{content_type}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /document.{content_type}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /document.{content_type}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /document/batch.{content_type}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /document/batch.{content_type}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /document/processed.{content_type}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /document/processed.{content_type}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /document/{document_id}.{content_type}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /entities.{content_type}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /entities.{content_type}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /entities.{content_type}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /entities.{content_type}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /entities.{content_type}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /entities.{content_type}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /entities.{content_type}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /entities.{content_type}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /phrases.{content_type}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /phrases.{content_type}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /phrases.{content_type}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /phrases.{content_type}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /phrases.{content_type}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /phrases.{content_type}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /phrases.{content_type}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /phrases.{content_type}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /queries.{content_type}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /queries.{content_type}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /queries.{content_type}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /queries.{content_type}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /queries.{content_type}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /queries.{content_type}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /queries.{content_type}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /queries.{content_type}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /taxonomy.{content_type}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /taxonomy.{content_type}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /taxonomy.{content_type}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /taxonomy.{content_type}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /taxonomy.{content_type}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /taxonomy.{content_type}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /taxonomy.{content_type}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /taxonomy.{content_type}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 41,
        "numOpsQuery": 15,
        "numOpsMutation": 26,
        "numQueriesCreated": 15,
        "numMutationsCreated": 17
      }
    },
    {
      "name": "ShipStation Developer Portal",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /accounts/listtags' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /accounts/registeraccount' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /carriers' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /carriers/addfunds' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /carriers/getcarrier?carrierCode={carrierCode}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /carriers/listpackages?carrierCode={carrierCode}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /carriers/listservices?carrierCode={carrierCode}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /customers/{customerId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /customers?stateCode={stateCode}&countryCode={countryCode}&tagId={tagId}&marketplaceId={marketplaceId}&sortBy={sortBy}&sortDir={sortDir}&page={page}&pageSize={pageSize}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /fulfillments' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /fulfillments?fulfillmentId={fulfillmentId}&orderId={orderId}&orderNumber={orderNumber}&trackingNumber={trackingNumber}&recipientName={recipientName}&createDateStart={createDateStart}&createDateEnd={createDateEnd}&shipDateStart={shipDateStart}&shipDateEnd={shipDateEnd}&sortBy={sortBy}&sortDir={sortDir}&page={page}&pageSize={pageSize}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /orders' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /orders/addtag' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /orders/assignuser' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /orders/createlabelfororder' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /orders/createorder' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /orders/createorders' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /orders/holduntil' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /orders/listbytag?orderStatus={orderStatus}&tagId={tagId}&page={page}&pageSize={pageSize}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /orders/markasshipped' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /orders/removetag' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /orders/restorefromhold' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /orders/unassignuser' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /orders/{orderId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /orders/{orderId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /orders?customerName={customerName}&itemKeyword={itemKeyword}&createDateStart={createDateStart}&createDateEnd={createDateEnd}&modifyDateStart={modifyDateStart}&modifyDateEnd={modifyDateEnd}&orderDateStart={orderDateStart}&orderDateEnd={orderDateEnd}&orderNumber={orderNumber}&orderStatus={orderStatus}&paymentDateStart={paymentDateStart}&paymentDateEnd={paymentDateEnd}&storeId={storeId}&sortBy={sortBy}&sortDir={sortDir}&page={page}&pageSize={pageSize}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /products' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /products/{productId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /products/{productId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /products?sku={sku}&name={name}&productCategoryId={productCategoryId}&productTypeId={productTypeId}&tagId={tagId}&startDate={startDate}&endDate={endDate}&showInactive={showInactive}&sortBy={sortBy}&sortDir={sortDir}&page={page}&pageSize={pageSize}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /shipments' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /shipments/createlabel' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /shipments/getrates' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /shipments/voidlabel' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /shipments?recipientName={recipientName}&recipientCountryCode={recipientCountryCode}&orderNumber={orderNumber}&orderId={orderId}&carrierCode={carrierCode}&serviceCode={serviceCode}&trackingNumber={trackingNumber}&createDateStart={createDateStart}&createDateEnd={createDateEnd}&shipDateStart={shipDateStart}&shipDateEnd={shipDateEnd}&voidDateStart={voidDateStart}&voidDateEnd={voidDateEnd}&includeShipmentItems={includeShipmentItems}&sortBy={sortBy}&sortDir={sortDir}&page={page}&pageSize={pageSize}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /stores/deactivate' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /stores/getrefreshstatus?storeId={storeId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /stores/marketplaces' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /stores/reactivate' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /stores/refreshstore?storeId={storeId}&refreshDate={refreshDate}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /stores/{storeId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /stores/{storeId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /stores?showInactive={showInactive}&marketplaceId={marketplaceId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /users?showInactive={showInactive}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /warehouses' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /warehouses/createwarehouse' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /warehouses/{warehouseId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /warehouses/{warehouseId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /webhooks' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /webhooks/subscribe' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /webhooks/{webhookId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 51,
        "numOpsQuery": 26,
        "numOpsMutation": 25,
        "numQueriesCreated": 0,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "SlideRoom API V2",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"example\":{\"name1\":\"Value1\",\"name2\":\"Value2\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"example\":{\"name1\":\"Value1\",\"name2\":\"Value2\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 11,
        "numOpsQuery": 5,
        "numOpsMutation": 6,
        "numQueriesCreated": 5,
        "numMutationsCreated": 6
      }
    },
    {
      "name": "smart-me",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /api/Actions' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /api/MeterFolderInformation' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 32,
        "numOpsQuery": 22,
        "numOpsMutation": 10,
        "numQueriesCreated": 22,
        "numMutationsCreated": 8
      }
    },
    {
      "name": "Solar VPS",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /contacts' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /dns/{domain}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /dns/{domain}/add' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /dns/{domain}/delete' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /dns/{domain}/update' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /domains' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /domains/add' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /domains/delete' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /key/generate' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /key/get' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /pods' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /pods/{podId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /pods/{podId}/ping' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /pods/{podId}/{action}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /solarray' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /solarray/critical' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /tickets' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /tickets/{department}/add' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /tickets/{ticketId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /tickets/{ticketid}/update' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 20,
        "numOpsQuery": 13,
        "numOpsMutation": 7,
        "numQueriesCreated": 0,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "SpectroCoin Merchant",
      "report": {
        "warnings": [],
        "numOps": 1,
        "numOpsQuery": 0,
        "numOpsMutation": 1,
        "numQueriesCreated": 0,
        "numMutationsCreated": 1
      }
    },
    {
      "name": "Article Rewriter and Article Extractor",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /api/article' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /api/spinner' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /api/spintax' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 4,
        "numOpsQuery": 1,
        "numOpsMutation": 3,
        "numQueriesCreated": 1,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Square Connect",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 96,
        "numOpsQuery": 38,
        "numOpsMutation": 58,
        "numQueriesCreated": 38,
        "numMutationsCreated": 58
      }
    },
    {
      "name": "api.ecota.co v2",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /accounts' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /accounts' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /accounts' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /accounts/password' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /accounts/payment_methods' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /accounts/settings' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /accounts/sign_in' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /accounts/update_password' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /addresses/places_autocomplete' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /addresses/places_details' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /catchement_areas' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /catchement_areas/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /credit_cards' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /credit_cards/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /products' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /products/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /promotional_codes' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /promotional_codes' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /rides/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /rides/{id}/cancel' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /rides/{id}/cancel_fees' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /rides/{id}/estimate' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /rides/{id}/reserve' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /rides?page={page}&per_page={per_page}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /rides?page={page}&per_page={per_page}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /{version}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 27,
        "numOpsQuery": 16,
        "numOpsMutation": 11,
        "numQueriesCreated": 0,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "StatSocial Platform",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 17,
        "numOpsQuery": 9,
        "numOpsMutation": 8,
        "numQueriesCreated": 9,
        "numMutationsCreated": 8
      }
    },
    {
      "name": "Storecove",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /shop_account_requests/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /shop_accounts/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 12,
        "numOpsQuery": 6,
        "numOpsMutation": 6,
        "numQueriesCreated": 6,
        "numMutationsCreated": 4
      }
    },
    {
      "name": "Stripe",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"title\":\"LightAccountLogout\",\"type\":\"object\",\"x-expandableFields\":[],\"x-resourceId\":\"light_account_logout\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"title\":\"LightAccountLogout\",\"type\":\"object\",\"x-expandableFields\":[],\"x-resourceId\":\"light_account_logout\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Set of key/value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Set of key/value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Set of key/value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Set of key/value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Set of key/value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Set of key/value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Hash with information on fraud assessments for the charge. Assessments reported by you have the key `user_report` and, if set, possible values of `safe` and `fraudulent`. Assessments from Stripe have the key `stripe_report` and, if set, the value `fraudulent`.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Set of key/value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Set of key/value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Set of key/value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Currencies that can be accepted in the specific country (for transfers).\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Lists the types of verification data needed to keep an account open. Includes 'minimum' fields, which every account must eventually provide, as well as a 'additional' fields, which are only required for some users.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Set of key/value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Set of key/value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Set of key/value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Set of key/value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Set of key/value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Set of key/value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Object containing the API resource relevant to the event. For example, an `invoice.created` event will have a full [invoice object](#invoice_object) as the value of the object key.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Object containing the names of the attributes that have changed and their previous values (only sent along with *.updated events)\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Hash where the keys are supported currencies and the values are the exchange rate at which the base id currency converts to the key currency.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Set of key/value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Set of key/value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Set of key/value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"The period this `line_item` covers. For subscription line items, this is the subscription period. For prorations, this starts when the proration was calculated, and ends at the period end of the subscription. For invoice items, this is the time at which the invoice item was created, so the period start and end are the same time.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Set of key/value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Set of key/value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Set of key/value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Set of key/value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A dictionary of attributes and values for the attributes defined by the product. If, for example, a product's attributes are `[\\\"size\\\", \\\"gender\\\"]`, a valid SKU has the following dictionary of attributes: `{\\\"size\\\": \\\"Medium\\\", \\\"gender\\\": \\\"Unisex\\\"}`.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Set of key/value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Set of key/value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Set of key/value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Set of key/value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"A set of key/value pairs that you can attach to a transfer object. It can be useful for storing additional information about the transfer in a structured format.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Set of key/value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Set of key/value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"Set of key/value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format.\",\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 192,
        "numOpsQuery": 86,
        "numOpsMutation": 106,
        "numQueriesCreated": 86,
        "numMutationsCreated": 106
      }
    },
    {
      "name": "Swagger Generator",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /gen/download/{fileId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/CliOption\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"$ref\":\"#/components/schemas/CliOption\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 7,
        "numOpsQuery": 5,
        "numOpsMutation": 2,
        "numQueriesCreated": 4,
        "numMutationsCreated": 2
      }
    },
    {
      "name": "SwaggerHub Registry",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /apis' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /apis/{owner}/{api}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /apis/{owner}/{api}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /apis/{owner}/{api}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /apis/{owner}/{api}/.collaboration' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /apis/{owner}/{api}/.collaboration' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /apis/{owner}/{api}/{version}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /domains' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /domains/{owner}/{domain}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /domains/{owner}/{domain}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /domains/{owner}/{domain}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /domains/{owner}/{domain}/{version}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 22,
        "numOpsQuery": 14,
        "numOpsMutation": 8,
        "numQueriesCreated": 12,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "SYNQ Video",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /video/stream' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /video/uploader' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 7,
        "numOpsQuery": 0,
        "numOpsMutation": 7,
        "numQueriesCreated": 0,
        "numMutationsCreated": 5
      }
    },
    {
      "name": "taggun.io",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 10,
        "numOpsQuery": 0,
        "numOpsMutation": 10,
        "numQueriesCreated": 0,
        "numMutationsCreated": 10
      }
    },
    {
      "name": "Taxamo",
      "report": {
        "warnings": [],
        "numOps": 36,
        "numOpsQuery": 24,
        "numOpsMutation": 12,
        "numQueriesCreated": 24,
        "numMutationsCreated": 12
      }
    },
    {
      "name": "Taxrates.io",
      "report": {
        "warnings": [],
        "numOps": 6,
        "numOpsQuery": 5,
        "numOpsMutation": 1,
        "numQueriesCreated": 5,
        "numMutationsCreated": 1
      }
    },
    {
      "name": "Transport for London Unified",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"properties\":{},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 84,
        "numOpsQuery": 84,
        "numOpsMutation": 0,
        "numQueriesCreated": 84,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "The Noun Project",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /collection/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /collection/{id}/icons' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /collection/{slug}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /collection/{slug}/icons' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /collections' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /icon/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /icon/{term}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /icons/recent_uploads' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /icons/{term}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /oauth/usage' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /user/{user_id}/collections' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /user/{user_id}/collections/{slug}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /user/{username}/uploads' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 13,
        "numOpsQuery": 13,
        "numOpsMutation": 0,
        "numQueriesCreated": 0,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "The SMS Works",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /auth/getApiKey' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /auth/token' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /batch/schedule' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /batch/send' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /batch/{batchid}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /batches/schedule/{batchid}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /message/schedule' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /message/send' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /messages' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /messages/schedule/{messageid}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /messages/{messageid}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /utils/hello' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 12,
        "numOpsQuery": 4,
        "numOpsMutation": 8,
        "numQueriesCreated": 0,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "TheTVDB API v2",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'HEAD /series/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 30,
        "numOpsQuery": 24,
        "numOpsMutation": 6,
        "numQueriesCreated": 24,
        "numMutationsCreated": 5
      }
    },
    {
      "name": "Airports API v2",
      "report": {
        "warnings": [],
        "numOps": 5,
        "numOpsQuery": 5,
        "numOpsMutation": 0,
        "numQueriesCreated": 10,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Trello",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /actions/{idAction}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /actions/{idAction}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /actions/{idAction}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /actions/{idAction}/board' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /actions/{idAction}/board/{field}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /actions/{idAction}/card' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /actions/{idAction}/card/{field}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /actions/{idAction}/display' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /actions/{idAction}/entities' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /actions/{idAction}/list' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /actions/{idAction}/list/{field}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /actions/{idAction}/member' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /actions/{idAction}/member/{field}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /actions/{idAction}/memberCreator' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /actions/{idAction}/memberCreator/{field}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /actions/{idAction}/organization' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /actions/{idAction}/organization/{field}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /actions/{idAction}/text' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /actions/{idAction}/{field}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /batch' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /boards' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /boards/{idBoard}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /boards/{idBoard}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /boards/{idBoard}/actions' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /boards/{idBoard}/boardStars' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /boards/{idBoard}/calendarKey/generate' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /boards/{idBoard}/cards' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /boards/{idBoard}/cards/{filter}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /boards/{idBoard}/cards/{idCard}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /boards/{idBoard}/checklists' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /boards/{idBoard}/checklists' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /boards/{idBoard}/closed' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /boards/{idBoard}/deltas' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /boards/{idBoard}/desc' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /boards/{idBoard}/emailKey/generate' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /boards/{idBoard}/idOrganization' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /boards/{idBoard}/labelNames/blue' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /boards/{idBoard}/labelNames/green' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /boards/{idBoard}/labelNames/orange' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /boards/{idBoard}/labelNames/purple' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /boards/{idBoard}/labelNames/red' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /boards/{idBoard}/labelNames/yellow' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /boards/{idBoard}/labels' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /boards/{idBoard}/labels' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /boards/{idBoard}/labels/{idLabel}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /boards/{idBoard}/lists' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /boards/{idBoard}/lists' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /boards/{idBoard}/lists/{filter}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /boards/{idBoard}/markAsViewed' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /boards/{idBoard}/members' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /boards/{idBoard}/members' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /boards/{idBoard}/members/{filter}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /boards/{idBoard}/members/{idMember}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /boards/{idBoard}/members/{idMember}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /boards/{idBoard}/members/{idMember}/cards' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /boards/{idBoard}/membersInvited' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /boards/{idBoard}/membersInvited/{field}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /boards/{idBoard}/memberships' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /boards/{idBoard}/memberships/{idMembership}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /boards/{idBoard}/memberships/{idMembership}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /boards/{idBoard}/myPrefs' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /boards/{idBoard}/myPrefs/emailPosition' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /boards/{idBoard}/myPrefs/idEmailList' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /boards/{idBoard}/myPrefs/showListGuide' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /boards/{idBoard}/myPrefs/showSidebar' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /boards/{idBoard}/myPrefs/showSidebarActivity' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /boards/{idBoard}/myPrefs/showSidebarBoardActions' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /boards/{idBoard}/myPrefs/showSidebarMembers' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /boards/{idBoard}/name' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /boards/{idBoard}/organization' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /boards/{idBoard}/organization/{field}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /boards/{idBoard}/powerUps' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /boards/{idBoard}/powerUps/{powerUp}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /boards/{idBoard}/prefs/background' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /boards/{idBoard}/prefs/calendarFeedEnabled' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /boards/{idBoard}/prefs/cardAging' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /boards/{idBoard}/prefs/cardCovers' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /boards/{idBoard}/prefs/comments' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /boards/{idBoard}/prefs/invitations' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /boards/{idBoard}/prefs/permissionLevel' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /boards/{idBoard}/prefs/selfJoin' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /boards/{idBoard}/prefs/voting' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /boards/{idBoard}/subscribed' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /boards/{idBoard}/{field}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /cards' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /cards/{idCard}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /cards/{idCard}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /cards/{idCard}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /cards/{idCard}/actions' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /cards/{idCard}/actions/comments' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /cards/{idCard}/actions/{idAction}/comments' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /cards/{idCard}/actions/{idAction}/comments' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /cards/{idCard}/attachments' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /cards/{idCard}/attachments' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /cards/{idCard}/attachments/{idAttachment}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /cards/{idCard}/attachments/{idAttachment}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /cards/{idCard}/board' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /cards/{idCard}/board/{field}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /cards/{idCard}/checkItemStates' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /cards/{idCard}/checklist/{idChecklistCurrent}/checkItem/{idCheckItem}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /cards/{idCard}/checklist/{idChecklist}/checkItem' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/convertToCard' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/name' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/pos' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/state' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /cards/{idCard}/checklists' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /cards/{idCard}/checklists' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /cards/{idCard}/checklists/{idChecklist}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /cards/{idCard}/closed' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /cards/{idCard}/desc' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /cards/{idCard}/due' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /cards/{idCard}/idAttachmentCover' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /cards/{idCard}/idBoard' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /cards/{idCard}/idLabels' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /cards/{idCard}/idLabels/{idLabel}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /cards/{idCard}/idList' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /cards/{idCard}/idMembers' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /cards/{idCard}/idMembers' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /cards/{idCard}/idMembers/{idMember}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /cards/{idCard}/labels' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /cards/{idCard}/labels' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /cards/{idCard}/labels/{color}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /cards/{idCard}/list' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /cards/{idCard}/list/{field}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /cards/{idCard}/markAssociatedNotificationsRead' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /cards/{idCard}/members' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /cards/{idCard}/membersVoted' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /cards/{idCard}/membersVoted' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /cards/{idCard}/membersVoted/{idMember}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /cards/{idCard}/name' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /cards/{idCard}/pos' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /cards/{idCard}/stickers' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /cards/{idCard}/stickers' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /cards/{idCard}/stickers/{idSticker}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /cards/{idCard}/stickers/{idSticker}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /cards/{idCard}/stickers/{idSticker}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /cards/{idCard}/subscribed' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /cards/{idCard}/{field}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /checklists' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /checklists/{idChecklist}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /checklists/{idChecklist}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /checklists/{idChecklist}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /checklists/{idChecklist}/board' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /checklists/{idChecklist}/board/{field}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /checklists/{idChecklist}/cards' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /checklists/{idChecklist}/cards/{filter}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /checklists/{idChecklist}/checkItems' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /checklists/{idChecklist}/checkItems' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /checklists/{idChecklist}/checkItems/{idCheckItem}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /checklists/{idChecklist}/checkItems/{idCheckItem}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /checklists/{idChecklist}/idCard' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /checklists/{idChecklist}/name' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /checklists/{idChecklist}/pos' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /checklists/{idChecklist}/{field}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /labels' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /labels/{idLabel}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /labels/{idLabel}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /labels/{idLabel}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /labels/{idLabel}/board' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /labels/{idLabel}/board/{field}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /labels/{idLabel}/color' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /labels/{idLabel}/name' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /lists' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /lists/{idList}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /lists/{idList}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /lists/{idList}/actions' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /lists/{idList}/archiveAllCards' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /lists/{idList}/board' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /lists/{idList}/board/{field}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /lists/{idList}/cards' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /lists/{idList}/cards' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /lists/{idList}/cards/{filter}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /lists/{idList}/closed' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /lists/{idList}/idBoard' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /lists/{idList}/moveAllCards' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /lists/{idList}/name' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /lists/{idList}/pos' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /lists/{idList}/subscribed' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /lists/{idList}/{field}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /members/{idMember}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /members/{idMember}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /members/{idMember}/actions' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /members/{idMember}/avatar' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /members/{idMember}/avatarSource' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /members/{idMember}/bio' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /members/{idMember}/boardBackgrounds' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /members/{idMember}/boardBackgrounds' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /members/{idMember}/boardBackgrounds/{idBoardBackground}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /members/{idMember}/boardBackgrounds/{idBoardBackground}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /members/{idMember}/boardBackgrounds/{idBoardBackground}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /members/{idMember}/boardStars' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /members/{idMember}/boardStars' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /members/{idMember}/boardStars/{idBoardStar}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /members/{idMember}/boardStars/{idBoardStar}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /members/{idMember}/boardStars/{idBoardStar}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /members/{idMember}/boardStars/{idBoardStar}/idBoard' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /members/{idMember}/boardStars/{idBoardStar}/pos' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /members/{idMember}/boards' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /members/{idMember}/boards/{filter}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /members/{idMember}/boardsInvited' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /members/{idMember}/boardsInvited/{field}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /members/{idMember}/cards' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /members/{idMember}/cards/{filter}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /members/{idMember}/customBoardBackgrounds' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /members/{idMember}/customBoardBackgrounds' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /members/{idMember}/customBoardBackgrounds/{idBoardBackground}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /members/{idMember}/customBoardBackgrounds/{idBoardBackground}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /members/{idMember}/customBoardBackgrounds/{idBoardBackground}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /members/{idMember}/customEmoji' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /members/{idMember}/customEmoji' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /members/{idMember}/customEmoji/{idCustomEmoji}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /members/{idMember}/customStickers' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /members/{idMember}/customStickers' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /members/{idMember}/customStickers/{idCustomSticker}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /members/{idMember}/customStickers/{idCustomSticker}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /members/{idMember}/deltas' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /members/{idMember}/fullName' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /members/{idMember}/initials' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /members/{idMember}/notifications' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /members/{idMember}/notifications/{filter}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /members/{idMember}/oneTimeMessagesDismissed' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /members/{idMember}/organizations' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /members/{idMember}/organizations/{filter}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /members/{idMember}/organizationsInvited' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /members/{idMember}/organizationsInvited/{field}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /members/{idMember}/prefs/colorBlind' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /members/{idMember}/prefs/locale' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /members/{idMember}/prefs/minutesBetweenSummaries' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /members/{idMember}/savedSearches' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /members/{idMember}/savedSearches' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /members/{idMember}/savedSearches/{idSavedSearch}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /members/{idMember}/savedSearches/{idSavedSearch}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /members/{idMember}/savedSearches/{idSavedSearch}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /members/{idMember}/savedSearches/{idSavedSearch}/name' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /members/{idMember}/savedSearches/{idSavedSearch}/pos' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /members/{idMember}/savedSearches/{idSavedSearch}/query' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /members/{idMember}/tokens' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /members/{idMember}/username' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /members/{idMember}/{field}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /notifications/all/read' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /notifications/{idNotification}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /notifications/{idNotification}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /notifications/{idNotification}/board' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /notifications/{idNotification}/board/{field}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /notifications/{idNotification}/card' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /notifications/{idNotification}/card/{field}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /notifications/{idNotification}/display' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /notifications/{idNotification}/entities' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /notifications/{idNotification}/list' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /notifications/{idNotification}/list/{field}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /notifications/{idNotification}/member' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /notifications/{idNotification}/member/{field}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /notifications/{idNotification}/memberCreator' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /notifications/{idNotification}/memberCreator/{field}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /notifications/{idNotification}/organization' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /notifications/{idNotification}/organization/{field}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /notifications/{idNotification}/unread' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /notifications/{idNotification}/{field}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /organizations' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /organizations/{idOrg}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /organizations/{idOrg}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /organizations/{idOrg}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /organizations/{idOrg}/actions' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /organizations/{idOrg}/boards' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /organizations/{idOrg}/boards/{filter}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /organizations/{idOrg}/deltas' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /organizations/{idOrg}/desc' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /organizations/{idOrg}/displayName' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /organizations/{idOrg}/logo' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /organizations/{idOrg}/logo' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /organizations/{idOrg}/members' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /organizations/{idOrg}/members' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /organizations/{idOrg}/members/{filter}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /organizations/{idOrg}/members/{idMember}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /organizations/{idOrg}/members/{idMember}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /organizations/{idOrg}/members/{idMember}/all' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /organizations/{idOrg}/members/{idMember}/cards' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /organizations/{idOrg}/members/{idMember}/deactivated' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /organizations/{idOrg}/membersInvited' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /organizations/{idOrg}/membersInvited/{field}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /organizations/{idOrg}/memberships' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /organizations/{idOrg}/memberships/{idMembership}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /organizations/{idOrg}/memberships/{idMembership}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /organizations/{idOrg}/name' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /organizations/{idOrg}/prefs/associatedDomain' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /organizations/{idOrg}/prefs/associatedDomain' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /organizations/{idOrg}/prefs/boardVisibilityRestrict/org' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /organizations/{idOrg}/prefs/boardVisibilityRestrict/private' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /organizations/{idOrg}/prefs/boardVisibilityRestrict/public' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /organizations/{idOrg}/prefs/externalMembersDisabled' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /organizations/{idOrg}/prefs/googleAppsVersion' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /organizations/{idOrg}/prefs/orgInviteRestrict' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /organizations/{idOrg}/prefs/orgInviteRestrict' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /organizations/{idOrg}/prefs/permissionLevel' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /organizations/{idOrg}/website' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /organizations/{idOrg}/{field}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /search' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /search/members' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /sessions' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /sessions/socket' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /sessions/{idSession}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /sessions/{idSession}/status' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /tokens/{token}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /tokens/{token}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /tokens/{token}/member' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /tokens/{token}/member/{field}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /tokens/{token}/webhooks' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /tokens/{token}/webhooks' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /tokens/{token}/webhooks' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /tokens/{token}/webhooks/{idWebhook}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /tokens/{token}/webhooks/{idWebhook}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /tokens/{token}/{field}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /types/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /webhooks' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /webhooks/' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /webhooks/{idWebhook}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /webhooks/{idWebhook}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /webhooks/{idWebhook}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /webhooks/{idWebhook}/active' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /webhooks/{idWebhook}/callbackURL' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /webhooks/{idWebhook}/description' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /webhooks/{idWebhook}/idModel' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /webhooks/{idWebhook}/{field}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 324,
        "numOpsQuery": 143,
        "numOpsMutation": 181,
        "numQueriesCreated": 0,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Twilio",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /Accounts/{AccountSid}/Applications/{ApplicationSid}{mediaTypeExtension}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /Accounts/{AccountSid}/Applications/{ApplicationSid}{mediaTypeExtension}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /Accounts/{AccountSid}/Applications/{ApplicationSid}{mediaTypeExtension}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /Accounts/{AccountSid}/Applications/{ApplicationSid}{mediaTypeExtension}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /Accounts/{AccountSid}/Applications{mediaTypeExtension}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /Accounts/{AccountSid}/Applications{mediaTypeExtension}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /Accounts/{AccountSid}/Applications{mediaTypeExtension}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /Accounts/{AccountSid}/AuthorizedConnectApps/{ConnectAppSid}{mediaTypeExtension}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /Accounts/{AccountSid}/AuthorizedConnectApps{mediaTypeExtension}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /Accounts/{AccountSid}/AvailablePhoneNumbers/{IsoCountryCode}/Local{mediaTypeExtension}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /Accounts/{AccountSid}/AvailablePhoneNumbers/{IsoCountryCode}/Mobile{mediaTypeExtension}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /Accounts/{AccountSid}/AvailablePhoneNumbers/{IsoCountryCode}/TollFree{mediaTypeExtension}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /Accounts/{AccountSid}/AvailablePhoneNumbers{mediaTypeExtension}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /Accounts/{AccountSid}/Calls/{CallSid}/Notifications{mediaTypeExtension}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /Accounts/{AccountSid}/Calls/{CallSid}/Recordings{mediaTypeExtension}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /Accounts/{AccountSid}/Calls/{CallSid}{mediaTypeExtension}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /Accounts/{AccountSid}/Calls/{CallSid}{mediaTypeExtension}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /Accounts/{AccountSid}/Calls/{CallSid}{mediaTypeExtension}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /Accounts/{AccountSid}/Calls{mediaTypeExtension}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /Accounts/{AccountSid}/Calls{mediaTypeExtension}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /Accounts/{AccountSid}/Calls{mediaTypeExtension}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /Accounts/{AccountSid}/Conferences/{ConferenceSid}/Participants/{CallSid}{mediaTypeExtension}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /Accounts/{AccountSid}/Conferences/{ConferenceSid}/Participants/{CallSid}{mediaTypeExtension}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /Accounts/{AccountSid}/Conferences/{ConferenceSid}/Participants/{CallSid}{mediaTypeExtension}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /Accounts/{AccountSid}/Conferences/{ConferenceSid}/Participants/{CallSid}{mediaTypeExtension}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /Accounts/{AccountSid}/Conferences/{ConferenceSid}/Participants{mediaTypeExtension}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /Accounts/{AccountSid}/Conferences/{ConferenceSid}{mediaTypeExtension}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /Accounts/{AccountSid}/Conferences{mediaTypeExtension}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /Accounts/{AccountSid}/ConnectApps/{ConnectAppSid}{mediaTypeExtension}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /Accounts/{AccountSid}/ConnectApps/{ConnectAppSid}{mediaTypeExtension}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /Accounts/{AccountSid}/ConnectApps/{ConnectAppSid}{mediaTypeExtension}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /Accounts/{AccountSid}/ConnectApps{mediaTypeExtension}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /Accounts/{AccountSid}/IncomingPhoneNumbers/Local{mediaTypeExtension}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /Accounts/{AccountSid}/IncomingPhoneNumbers/Local{mediaTypeExtension}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /Accounts/{AccountSid}/IncomingPhoneNumbers/Mobile{mediaTypeExtension}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /Accounts/{AccountSid}/IncomingPhoneNumbers/Mobile{mediaTypeExtension}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /Accounts/{AccountSid}/IncomingPhoneNumbers/TollFree{mediaTypeExtension}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /Accounts/{AccountSid}/IncomingPhoneNumbers/TollFree{mediaTypeExtension}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /Accounts/{AccountSid}/IncomingPhoneNumbers/{IncomingPhoneNumberSid}{mediaTypeExtension}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /Accounts/{AccountSid}/IncomingPhoneNumbers/{IncomingPhoneNumberSid}{mediaTypeExtension}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /Accounts/{AccountSid}/IncomingPhoneNumbers/{IncomingPhoneNumberSid}{mediaTypeExtension}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /Accounts/{AccountSid}/IncomingPhoneNumbers/{IncomingPhoneNumberSid}{mediaTypeExtension}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /Accounts/{AccountSid}/IncomingPhoneNumbers/{IncomingPhoneNumberSid}{mediaTypeExtension}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /Accounts/{AccountSid}/IncomingPhoneNumbers/{IncomingPhoneNumberSid}{mediaTypeExtension}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /Accounts/{AccountSid}/IncomingPhoneNumbers{mediaTypeExtension}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /Accounts/{AccountSid}/IncomingPhoneNumbers{mediaTypeExtension}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /Accounts/{AccountSid}/IncomingPhoneNumbers{mediaTypeExtension}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /Accounts/{AccountSid}/Messages/{MessageSid}/Media/{MediaSid}{mediaTypeExtension}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /Accounts/{AccountSid}/Messages/{MessageSid}/Media{mediaTypeExtension}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /Accounts/{AccountSid}/Messages/{MessageSid}{mediaTypeExtension}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /Accounts/{AccountSid}/Messages{mediaTypeExtension}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /Accounts/{AccountSid}/Messages{mediaTypeExtension}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /Accounts/{AccountSid}/Messages{mediaTypeExtension}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /Accounts/{AccountSid}/Notifications/{NotificationSid}{mediaTypeExtension}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /Accounts/{AccountSid}/Notifications/{NotificationSid}{mediaTypeExtension}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /Accounts/{AccountSid}/Notifications{mediaTypeExtension}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /Accounts/{AccountSid}/OutgoingCallerIds/{OutgoingCallerIdSid}{mediaTypeExtension}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /Accounts/{AccountSid}/OutgoingCallerIds/{OutgoingCallerIdSid}{mediaTypeExtension}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /Accounts/{AccountSid}/OutgoingCallerIds/{OutgoingCallerIdSid}{mediaTypeExtension}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /Accounts/{AccountSid}/OutgoingCallerIds/{OutgoingCallerIdSid}{mediaTypeExtension}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /Accounts/{AccountSid}/OutgoingCallerIds/{OutgoingCallerIdSid}{mediaTypeExtension}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /Accounts/{AccountSid}/OutgoingCallerIds/{OutgoingCallerIdSid}{mediaTypeExtension}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /Accounts/{AccountSid}/OutgoingCallerIds{mediaTypeExtension}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /Accounts/{AccountSid}/OutgoingCallerIds{mediaTypeExtension}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /Accounts/{AccountSid}/OutgoingCallerIds{mediaTypeExtension}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /Accounts/{AccountSid}/Queues/{QueueSid}/Members/Front{mediaTypeExtension}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /Accounts/{AccountSid}/Queues/{QueueSid}/Members/Front{mediaTypeExtension}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /Accounts/{AccountSid}/Queues/{QueueSid}/Members/Front{mediaTypeExtension}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /Accounts/{AccountSid}/Queues/{QueueSid}/Members/{CallSid}{mediaTypeExtension}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /Accounts/{AccountSid}/Queues/{QueueSid}/Members/{CallSid}{mediaTypeExtension}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /Accounts/{AccountSid}/Queues/{QueueSid}/Members/{CallSid}{mediaTypeExtension}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /Accounts/{AccountSid}/Queues/{QueueSid}/Members{mediaTypeExtension}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /Accounts/{AccountSid}/Queues/{QueueSid}{mediaTypeExtension}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /Accounts/{AccountSid}/Queues/{QueueSid}{mediaTypeExtension}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /Accounts/{AccountSid}/Queues/{QueueSid}{mediaTypeExtension}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /Accounts/{AccountSid}/Queues/{QueueSid}{mediaTypeExtension}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /Accounts/{AccountSid}/Queues{mediaTypeExtension}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /Accounts/{AccountSid}/Queues{mediaTypeExtension}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /Accounts/{AccountSid}/Queues{mediaTypeExtension}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /Accounts/{AccountSid}/Recordings/{RecordingSid}/Transcriptions{mediaTypeExtension}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /Accounts/{AccountSid}/Recordings/{RecordingSid}{mediaTypeExtension}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /Accounts/{AccountSid}/Recordings/{RecordingSid}{mediaTypeExtension}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /Accounts/{AccountSid}/Recordings{mediaTypeExtension}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /Accounts/{AccountSid}/SIP/CredentialLists/{CLSid}/Credentials/{CredentialSid}{mediaTypeExtension}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /Accounts/{AccountSid}/SIP/CredentialLists/{CLSid}/Credentials/{CredentialSid}{mediaTypeExtension}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /Accounts/{AccountSid}/SIP/CredentialLists/{CLSid}/Credentials/{CredentialSid}{mediaTypeExtension}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /Accounts/{AccountSid}/SIP/CredentialLists/{CLSid}/Credentials/{CredentialSid}{mediaTypeExtension}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /Accounts/{AccountSid}/SIP/CredentialLists/{CLSid}/Credentials{mediaTypeExtension}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /Accounts/{AccountSid}/SIP/CredentialLists/{CLSid}/Credentials{mediaTypeExtension}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /Accounts/{AccountSid}/SIP/CredentialLists/{CLSid}/Credentials{mediaTypeExtension}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /Accounts/{AccountSid}/SIP/CredentialLists/{CLSid}{mediaTypeExtension}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /Accounts/{AccountSid}/SIP/CredentialLists/{CLSid}{mediaTypeExtension}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /Accounts/{AccountSid}/SIP/CredentialLists/{CLSid}{mediaTypeExtension}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /Accounts/{AccountSid}/SIP/CredentialLists/{CLSid}{mediaTypeExtension}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /Accounts/{AccountSid}/SIP/CredentialLists{mediaTypeExtension}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /Accounts/{AccountSid}/SIP/CredentialLists{mediaTypeExtension}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /Accounts/{AccountSid}/SIP/CredentialLists{mediaTypeExtension}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /Accounts/{AccountSid}/SIP/Domains/{SipDomainSid}/CredentialListMappings/{CLSid}{mediaTypeExtension}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /Accounts/{AccountSid}/SIP/Domains/{SipDomainSid}/CredentialListMappings{mediaTypeExtension}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /Accounts/{AccountSid}/SIP/Domains/{SipDomainSid}/CredentialListMappings{mediaTypeExtension}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /Accounts/{AccountSid}/SIP/Domains/{SipDomainSid}/CredentialListMappings{mediaTypeExtension}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /Accounts/{AccountSid}/SIP/Domains/{SipDomainSid}/IpAccessControlListMappings/{ALSid}{mediaTypeExtension}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /Accounts/{AccountSid}/SIP/Domains/{SipDomainSid}/IpAccessControlListMappings/{ALSid}{mediaTypeExtension}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /Accounts/{AccountSid}/SIP/Domains/{SipDomainSid}/IpAccessControlListMappings{mediaTypeExtension}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /Accounts/{AccountSid}/SIP/Domains/{SipDomainSid}/IpAccessControlListMappings{mediaTypeExtension}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /Accounts/{AccountSid}/SIP/Domains/{SipDomainSid}{mediaTypeExtension}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /Accounts/{AccountSid}/SIP/Domains/{SipDomainSid}{mediaTypeExtension}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /Accounts/{AccountSid}/SIP/Domains/{SipDomainSid}{mediaTypeExtension}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /Accounts/{AccountSid}/SIP/Domains/{SipDomainSid}{mediaTypeExtension}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /Accounts/{AccountSid}/SIP/Domains{mediaTypeExtension}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /Accounts/{AccountSid}/SIP/Domains{mediaTypeExtension}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /Accounts/{AccountSid}/SIP/Domains{mediaTypeExtension}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /Accounts/{AccountSid}/SIP/IpAccessControlLists/{IpAccessControlListSid}/IpAddresses/{IpAddressSid}{mediaTypeExtension}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /Accounts/{AccountSid}/SIP/IpAccessControlLists/{IpAccessControlListSid}/IpAddresses/{IpAddressSid}{mediaTypeExtension}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /Accounts/{AccountSid}/SIP/IpAccessControlLists/{IpAccessControlListSid}/IpAddresses/{IpAddressSid}{mediaTypeExtension}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /Accounts/{AccountSid}/SIP/IpAccessControlLists/{IpAccessControlListSid}/IpAddresses/{IpAddressSid}{mediaTypeExtension}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /Accounts/{AccountSid}/SIP/IpAccessControlLists/{IpAccessControlListSid}/IpAddresses{mediaTypeExtension}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /Accounts/{AccountSid}/SIP/IpAccessControlLists/{IpAccessControlListSid}/IpAddresses{mediaTypeExtension}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /Accounts/{AccountSid}/SIP/IpAccessControlLists/{IpAccessControlListSid}/IpAddresses{mediaTypeExtension}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /Accounts/{AccountSid}/SIP/IpAccessControlLists/{IpAccessControlListSid}{mediaTypeExtension}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /Accounts/{AccountSid}/SIP/IpAccessControlLists/{IpAccessControlListSid}{mediaTypeExtension}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /Accounts/{AccountSid}/SIP/IpAccessControlLists/{IpAccessControlListSid}{mediaTypeExtension}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /Accounts/{AccountSid}/SIP/IpAccessControlLists/{IpAccessControlListSid}{mediaTypeExtension}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /Accounts/{AccountSid}/SIP/IpAccessControlLists{mediaTypeExtension}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /Accounts/{AccountSid}/SIP/IpAccessControlLists{mediaTypeExtension}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /Accounts/{AccountSid}/SMS/ShortCodes/{ShortCodeSid}{mediaTypeExtension}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /Accounts/{AccountSid}/SMS/ShortCodes/{ShortCodeSid}{mediaTypeExtension}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /Accounts/{AccountSid}/SMS/ShortCodes/{ShortCodeSid}{mediaTypeExtension}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /Accounts/{AccountSid}/SMS/ShortCodes{mediaTypeExtension}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /Accounts/{AccountSid}/Transcriptions/{TranscriptionSid}{mediaTypeExtension}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /Accounts/{AccountSid}/Transcriptions/{TranscriptionSid}{mediaTypeExtension}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /Accounts/{AccountSid}/Transcriptions{mediaTypeExtension}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /Accounts/{AccountSid}/Usage/Records/{Subresource}{mediaTypeExtension}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /Accounts/{AccountSid}/Usage/Records{mediaTypeExtension}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /Accounts/{AccountSid}/Usage/Triggers/{UsageTriggerSid}{mediaTypeExtension}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /Accounts/{AccountSid}/Usage/Triggers/{UsageTriggerSid}{mediaTypeExtension}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /Accounts/{AccountSid}/Usage/Triggers/{UsageTriggerSid}{mediaTypeExtension}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /Accounts/{AccountSid}/Usage/Triggers/{UsageTriggerSid}{mediaTypeExtension}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /Accounts/{AccountSid}/Usage/Triggers{mediaTypeExtension}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /Accounts/{AccountSid}/Usage/Triggers{mediaTypeExtension}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /Accounts/{AccountSid}/Usage/Triggers{mediaTypeExtension}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /Accounts/{AccountSid}{mediaTypeExtension}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /Accounts/{AccountSid}{mediaTypeExtension}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /Accounts/{AccountSid}{mediaTypeExtension}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /Accounts/{AccountSid}{mediaTypeExtension}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /Accounts/{AccountSid}{mediaTypeExtension}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /Accounts{mediaTypeExtension}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /Accounts{mediaTypeExtension}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /Accounts{mediaTypeExtension}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 116,
        "numOpsQuery": 62,
        "numOpsMutation": 54,
        "numQueriesCreated": 0,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Twine",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /action' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /action/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /bundle' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /bundle/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /calendar_event' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /calendar_event/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /coach/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /email_history' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /email_history/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /group' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /group' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /group/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /health_profile' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /health_profile/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /health_profile_answer' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /health_profile_answer/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /health_profile_question/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /health_question_definition' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /health_question_definition/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /oauth/token' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /oauth/token/{id}/groups' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /oauth/token/{id}/organization' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /organization/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /patient' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /patient' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /patient/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /patient/{id}/coaches' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /patient/{id}/groups' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /patient_health_metric' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /patient_health_metric' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /patient_health_metric/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /patient_plan_summary' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /patient_plan_summary/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /reward' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /reward' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /reward/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /reward_earning' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /reward_earning' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /reward_earning/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /reward_earning_fulfillment' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /reward_earning_fulfillment' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /reward_earning_fulfillment/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /reward_program' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /reward_program' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /reward_program/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /reward_program/{id}/group' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /reward_program_activation' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /reward_program_activation' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /reward_program_activation/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 49,
        "numOpsQuery": 38,
        "numOpsMutation": 11,
        "numQueriesCreated": 0,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "uebermaps API endpoints",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"example\":{\"large\":{\"h\":860,\"w\":1024}},\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 49,
        "numOpsQuery": 28,
        "numOpsMutation": 21,
        "numQueriesCreated": 28,
        "numMutationsCreated": 21
      }
    },
    {
      "name": "VAT API",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /invoice/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /vat-number-check' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 11,
        "numOpsQuery": 8,
        "numOpsMutation": 3,
        "numQueriesCreated": 7,
        "numMutationsCreated": 2
      }
    },
    {
      "name": "Available API endpoints",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /github' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /github/hook/{project_id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /github/sync' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /github/{repo_key}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /github/{repo_key}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /github/{repo_key}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /me' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /me/comments' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /me/favorites' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /me/notifications' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /organisations' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /organisations/{orga_name}/inventory' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /organisations/{orga_name}/inventory_diff' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /organisations/{orga_name}/inventory_diff' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /organisations/{orga_name}/projects' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /organisations/{orga_name}/teams' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /products/search/{q}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /products/sha/{sha}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /products/{lang}/{prod_key}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /products/{lang}/{prod_key}/follow' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /products/{lang}/{prod_key}/follow' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /products/{lang}/{prod_key}/follow' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /products/{lang}/{prod_key}/references' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /products/{lang}/{prod_key}/versions' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /products/{lang}/{prod_key}/{prod_version}/license' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /products/{lang}/{prod_key}/{prod_version}/scm_changes' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /projects' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /projects' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /projects/{group_id}/{artifact_id}/merge_ga/{child_id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /projects/{parent_id}/merge/{child_id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /projects/{parent_id}/unmerge/{child_id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /projects/{project_key}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /projects/{project_key}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /projects/{project_key}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /projects/{project_key}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /projects/{project_key}/dependencies' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /projects/{project_key}/licenses' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /security' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /services/ping' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /sessions' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /sessions' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /sessions' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /sessions/login' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /users/{username}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /users/{username}/comments' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /users/{username}/favorites' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 46,
        "numOpsQuery": 31,
        "numOpsMutation": 15,
        "numQueriesCreated": 0,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Vestorly",
      "report": {
        "warnings": [],
        "numOps": 33,
        "numOpsQuery": 19,
        "numOpsMutation": 14,
        "numQueriesCreated": 19,
        "numMutationsCreated": 14
      }
    },
    {
      "name": "VictorOps",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /api-public/v1/team/{team}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /api-public/v1/team/{team}/members/{user}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /api-public/v1/user/{user}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"$ref\":\"#/components/schemas/TeamDetail\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"$ref\":\"#/components/schemas/TeamDetail\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"$ref\":\"#/components/schemas/TeamDetail\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"$ref\":\"#/components/schemas/V1User\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"$ref\":\"#/components/schemas/V1User\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"$ref\":\"#/components/schemas/V1User\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 41,
        "numOpsQuery": 26,
        "numOpsMutation": 15,
        "numQueriesCreated": 26,
        "numMutationsCreated": 12
      }
    },
    {
      "name": "VisageCloud",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /rest/v1.1/account/changePassword' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /rest/v1.1/account/changePassword' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /rest/v1.1/account/login' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /rest/v1.1/account/login' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /rest/v1.1/analysis/detection' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /rest/v1.1/analysis/detection' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /rest/v1.1/analysis/recognition' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /rest/v1.1/analysis/recognition' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /rest/v1.1/analytics/presence/timeseries' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /rest/v1.1/analytics/presence/timeseries' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /rest/v1.1/analytics/presence/total' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /rest/v1.1/analytics/presence/total' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /rest/v1.1/classifier/svm' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /rest/v1.1/classifier/svm' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /rest/v1.1/classifier/svm' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /rest/v1.1/classifier/svm' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /rest/v1.1/collection/' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /rest/v1.1/collection/' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /rest/v1.1/collection/collection' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /rest/v1.1/collection/collection' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /rest/v1.1/collection/collection' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /rest/v1.1/collection/collection' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /rest/v1.1/collection/export/csv' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /rest/v1.1/collection/purpose' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /rest/v1.1/collection/purpose' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /rest/v1.1/collection/{id}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /rest/v1.1/collection/{id}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /rest/v1.1/collection/{id}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /rest/v1.1/collection/{id}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /rest/v1.1/counting/count' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /rest/v1.1/counting/count' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /rest/v1.1/profile/classificationAttributes' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /rest/v1.1/profile/classificationAttributes' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /rest/v1.1/profile/classificationAttributes' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /rest/v1.1/profile/classificationAttributes' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /rest/v1.1/profile/map' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /rest/v1.1/profile/map' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /rest/v1.1/profile/map' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /rest/v1.1/profile/map' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /rest/v1.1/profile/profile' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /rest/v1.1/profile/profile' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /rest/v1.1/profile/profile' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /rest/v1.1/profile/profile' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /rest/v1.1/profile/{id}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /rest/v1.1/profile/{id}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /rest/v1.1/stream/frameImage' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /rest/v1.1/stream/stream' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /rest/v1.1/stream/stream' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /rest/v1.1/stream/{id}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /rest/v1.1/stream/{id}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 46,
        "numOpsQuery": 22,
        "numOpsMutation": 24,
        "numQueriesCreated": 20,
        "numMutationsCreated": 24
      }
    },
    {
      "name": "Voodoo Manufacturing",
      "report": {
        "warnings": [],
        "numOps": 11,
        "numOpsQuery": 7,
        "numOpsMutation": 4,
        "numQueriesCreated": 7,
        "numMutationsCreated": 4
      }
    },
    {
      "name": "CitySDK Linked Data",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /layers' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /layers' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /layers/{layer}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /layers/{layer}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /layers/{layer}/context' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /layers/{layer}/context' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /layers/{layer}/fields' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /layers/{layer}/fields' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /layers/{layer}/fields/{field}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /layers/{layer}/fields/{field}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /layers/{layer}/fields/{field}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /layers/{layer}/objects' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /layers/{layer}/objects' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /layers/{layer}/objects' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /layers/{layer}/objects/{cdk_id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /layers/{layer}/owners' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /ngsi10/contextEntities/{entity}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /ngsi10/contextEntities/{entity}/attributes' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /ngsi10/contextEntities/{entity}/attributes/{attribute}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /ngsi10/contextEntityTypes/{cetype}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /ngsi10/contextEntityTypes/{cetype}/attributes/{attribute}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /ngsi10/queryContext' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /ngsi10/subscribeContext' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /ngsi10/unsubscribeContext' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /ngsi10/updateContext' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /ngsi10/updateContextSubscription' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /objects' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /objects/{cdk_id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /objects/{cdk_id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /objects/{cdk_id}/layers' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /objects/{cdk_id}/layers/{layer}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /objects/{cdk_id}/layers/{layer}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /objects/{cdk_id}/layers/{layer}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /objects/{cdk_id}/layers/{layer}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /owners' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /owners' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /owners/{owner}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /owners/{owner}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /owners/{owner}/layers' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /session' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /session' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 41,
        "numOpsQuery": 20,
        "numOpsMutation": 21,
        "numQueriesCreated": 0,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Wavecell.Sms.Api",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /sms/v1/status' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /sms/v1/{subAccountId}/many' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /sms/v1/{subAccountId}/many' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /sms/v1/{subAccountId}/many/compact' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /sms/v1/{subAccountId}/many/compact' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /sms/v1/{subAccountId}/single' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /sms/v1/{subAccountId}/single' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          }
        ],
        "numOps": 4,
        "numOpsQuery": 1,
        "numOpsMutation": 3,
        "numQueriesCreated": 0,
        "numMutationsCreated": 3
      }
    },
    {
      "name": "Wealthport",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /folders/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /folders/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /folders/{id}/sources' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /jobs/{id}/result' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /jobs/{id}/result' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /jobs/{id}/status' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /jobs/{id}/status' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /orders/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /orders/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /orders/{id}/submit' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /recipes/{id}/instructions' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /sources/upload' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /sources/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /sources/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /sources/{id}/download' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 26,
        "numOpsQuery": 13,
        "numOpsMutation": 13,
        "numQueriesCreated": 20,
        "numMutationsCreated": 6
      }
    },
    {
      "name": "Weatherbit.io - Weather",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /bulk/{file}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 51,
        "numOpsQuery": 51,
        "numOpsMutation": 0,
        "numQueriesCreated": 50,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Accounts",
      "report": {
        "warnings": [],
        "numOps": 5,
        "numOpsQuery": 4,
        "numOpsMutation": 1,
        "numQueriesCreated": 4,
        "numMutationsCreated": 1
      }
    },
    {
      "name": "Bets",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /bet/complex' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /bet/complex' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /bet/single' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /bet/single' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /freebets' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'GET /freebets' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          }
        ],
        "numOps": 6,
        "numOpsQuery": 2,
        "numOpsMutation": 4,
        "numQueriesCreated": 2,
        "numMutationsCreated": 4
      }
    },
    {
      "name": "Locations",
      "report": {
        "warnings": [],
        "numOps": 5,
        "numOpsQuery": 5,
        "numOpsMutation": 0,
        "numQueriesCreated": 5,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Numbers",
      "report": {
        "warnings": [],
        "numOps": 1,
        "numOpsQuery": 1,
        "numOpsMutation": 0,
        "numQueriesCreated": 1,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Sessions",
      "report": {
        "warnings": [],
        "numOps": 4,
        "numOpsQuery": 2,
        "numOpsMutation": 2,
        "numQueriesCreated": 2,
        "numMutationsCreated": 2
      }
    },
    {
      "name": "SportsData",
      "report": {
        "warnings": [],
        "numOps": 13,
        "numOpsQuery": 13,
        "numOpsMutation": 0,
        "numQueriesCreated": 13,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Wikimedia",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /media/math/check/{type}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /media/math/formula/{hash}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /media/math/render/{format}/{hash}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 28,
        "numOpsQuery": 25,
        "numOpsMutation": 3,
        "numQueriesCreated": 23,
        "numMutationsCreated": 2
      }
    },
    {
      "name": "BatchService",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /certificates' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /certificates(thumbprintAlgorithm={thumbprintAlgorithm},thumbprint={thumbprint})' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /certificates(thumbprintAlgorithm={thumbprintAlgorithm},thumbprint={thumbprint})/canceldelete' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /jobs' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /jobs/{jobId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /jobs/{jobId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /jobs/{jobId}/disable' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /jobs/{jobId}/enable' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /jobs/{jobId}/tasks' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /jobs/{jobId}/tasks/{taskId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /jobs/{jobId}/tasks/{taskId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /jobs/{jobId}/tasks/{taskId}/files/{fileName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /jobs/{jobId}/tasks/{taskId}/files/{fileName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'HEAD /jobs/{jobId}/tasks/{taskId}/files/{fileName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /jobs/{jobId}/tasks/{taskId}/terminate' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /jobs/{jobId}/terminate' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /jobschedules' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /jobschedules/{jobScheduleId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'HEAD /jobschedules/{jobScheduleId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /jobschedules/{jobScheduleId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /jobschedules/{jobScheduleId}/disable' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /jobschedules/{jobScheduleId}/enable' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /jobschedules/{jobScheduleId}/terminate' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /pools' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /pools/{poolId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'HEAD /pools/{poolId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /pools/{poolId}/disableautoscale' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /pools/{poolId}/enableautoscale' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /pools/{poolId}/nodes/{nodeId}/disablescheduling' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /pools/{poolId}/nodes/{nodeId}/enablescheduling' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /pools/{poolId}/nodes/{nodeId}/files/{fileName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /pools/{poolId}/nodes/{nodeId}/files/{fileName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'HEAD /pools/{poolId}/nodes/{nodeId}/files/{fileName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /pools/{poolId}/nodes/{nodeId}/rdp' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /pools/{poolId}/nodes/{nodeId}/reboot' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /pools/{poolId}/nodes/{nodeId}/reimage' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /pools/{poolId}/nodes/{nodeId}/users' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /pools/{poolId}/nodes/{nodeId}/users/{userName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /pools/{poolId}/nodes/{nodeId}/users/{userName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /pools/{poolId}/removenodes' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /pools/{poolId}/resize' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /pools/{poolId}/stopresize' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /pools/{poolId}/updateproperties' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /pools/{poolId}/upgradeos' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 67,
        "numOpsQuery": 25,
        "numOpsMutation": 42,
        "numQueriesCreated": 22,
        "numMutationsCreated": 1
      }
    },
    {
      "name": "BatchService",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /certificates' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /certificates(thumbprintAlgorithm={thumbprintAlgorithm},thumbprint={thumbprint})' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /certificates(thumbprintAlgorithm={thumbprintAlgorithm},thumbprint={thumbprint})/canceldelete' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /jobs' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /jobs/{jobId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /jobs/{jobId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /jobs/{jobId}/disable' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /jobs/{jobId}/enable' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /jobs/{jobId}/tasks' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /jobs/{jobId}/tasks/{taskId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /jobs/{jobId}/tasks/{taskId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /jobs/{jobId}/tasks/{taskId}/files/{fileName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /jobs/{jobId}/tasks/{taskId}/files/{fileName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'HEAD /jobs/{jobId}/tasks/{taskId}/files/{fileName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /jobs/{jobId}/tasks/{taskId}/terminate' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /jobs/{jobId}/terminate' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /jobschedules' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /jobschedules/{jobScheduleId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'HEAD /jobschedules/{jobScheduleId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /jobschedules/{jobScheduleId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /jobschedules/{jobScheduleId}/disable' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /jobschedules/{jobScheduleId}/enable' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /jobschedules/{jobScheduleId}/terminate' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /pools' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /pools/{poolId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'HEAD /pools/{poolId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /pools/{poolId}/disableautoscale' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /pools/{poolId}/enableautoscale' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /pools/{poolId}/nodes/{nodeId}/disablescheduling' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /pools/{poolId}/nodes/{nodeId}/enablescheduling' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /pools/{poolId}/nodes/{nodeId}/files/{fileName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /pools/{poolId}/nodes/{nodeId}/files/{fileName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'HEAD /pools/{poolId}/nodes/{nodeId}/files/{fileName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /pools/{poolId}/nodes/{nodeId}/rdp' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /pools/{poolId}/nodes/{nodeId}/reboot' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /pools/{poolId}/nodes/{nodeId}/reimage' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /pools/{poolId}/nodes/{nodeId}/users' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /pools/{poolId}/nodes/{nodeId}/users/{userName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /pools/{poolId}/nodes/{nodeId}/users/{userName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /pools/{poolId}/removenodes' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /pools/{poolId}/resize' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /pools/{poolId}/stopresize' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /pools/{poolId}/updateproperties' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /pools/{poolId}/upgradeos' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 70,
        "numOpsQuery": 27,
        "numOpsMutation": 43,
        "numQueriesCreated": 24,
        "numMutationsCreated": 2
      }
    },
    {
      "name": "BatchService",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /certificates' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /certificates(thumbprintAlgorithm={thumbprintAlgorithm},thumbprint={thumbprint})' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /certificates(thumbprintAlgorithm={thumbprintAlgorithm},thumbprint={thumbprint})/canceldelete' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /jobs' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /jobs/{jobId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /jobs/{jobId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /jobs/{jobId}/disable' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /jobs/{jobId}/enable' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /jobs/{jobId}/tasks' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /jobs/{jobId}/tasks/{taskId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /jobs/{jobId}/tasks/{taskId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /jobs/{jobId}/tasks/{taskId}/files/{fileName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /jobs/{jobId}/tasks/{taskId}/files/{fileName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'HEAD /jobs/{jobId}/tasks/{taskId}/files/{fileName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /jobs/{jobId}/tasks/{taskId}/reactivate' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /jobs/{jobId}/tasks/{taskId}/terminate' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /jobs/{jobId}/terminate' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /jobschedules' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /jobschedules/{jobScheduleId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'HEAD /jobschedules/{jobScheduleId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /jobschedules/{jobScheduleId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /jobschedules/{jobScheduleId}/disable' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /jobschedules/{jobScheduleId}/enable' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /jobschedules/{jobScheduleId}/terminate' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /pools' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /pools/{poolId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'HEAD /pools/{poolId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /pools/{poolId}/disableautoscale' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /pools/{poolId}/enableautoscale' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /pools/{poolId}/nodes/{nodeId}/disablescheduling' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /pools/{poolId}/nodes/{nodeId}/enablescheduling' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /pools/{poolId}/nodes/{nodeId}/files/{fileName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /pools/{poolId}/nodes/{nodeId}/files/{fileName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'HEAD /pools/{poolId}/nodes/{nodeId}/files/{fileName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /pools/{poolId}/nodes/{nodeId}/rdp' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /pools/{poolId}/nodes/{nodeId}/reboot' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /pools/{poolId}/nodes/{nodeId}/reimage' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /pools/{poolId}/nodes/{nodeId}/users' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /pools/{poolId}/nodes/{nodeId}/users/{userName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /pools/{poolId}/nodes/{nodeId}/users/{userName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /pools/{poolId}/removenodes' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /pools/{poolId}/resize' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /pools/{poolId}/stopresize' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /pools/{poolId}/updateproperties' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /pools/{poolId}/upgradeos' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 71,
        "numOpsQuery": 27,
        "numOpsMutation": 44,
        "numQueriesCreated": 24,
        "numMutationsCreated": 2
      }
    },
    {
      "name": "BatchService",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /certificates' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /certificates(thumbprintAlgorithm={thumbprintAlgorithm},thumbprint={thumbprint})' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /certificates(thumbprintAlgorithm={thumbprintAlgorithm},thumbprint={thumbprint})/canceldelete' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /jobs' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /jobs/{jobId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /jobs/{jobId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /jobs/{jobId}/disable' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /jobs/{jobId}/enable' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /jobs/{jobId}/tasks' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /jobs/{jobId}/tasks/{taskId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /jobs/{jobId}/tasks/{taskId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /jobs/{jobId}/tasks/{taskId}/files/{filePath}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /jobs/{jobId}/tasks/{taskId}/files/{filePath}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'HEAD /jobs/{jobId}/tasks/{taskId}/files/{filePath}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /jobs/{jobId}/tasks/{taskId}/reactivate' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /jobs/{jobId}/tasks/{taskId}/terminate' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /jobs/{jobId}/terminate' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /jobschedules' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /jobschedules/{jobScheduleId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'HEAD /jobschedules/{jobScheduleId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /jobschedules/{jobScheduleId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /jobschedules/{jobScheduleId}/disable' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /jobschedules/{jobScheduleId}/enable' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /jobschedules/{jobScheduleId}/terminate' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /pools' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /pools/{poolId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'HEAD /pools/{poolId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /pools/{poolId}/disableautoscale' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /pools/{poolId}/enableautoscale' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /pools/{poolId}/nodes/{nodeId}/disablescheduling' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /pools/{poolId}/nodes/{nodeId}/enablescheduling' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /pools/{poolId}/nodes/{nodeId}/files/{filePath}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /pools/{poolId}/nodes/{nodeId}/files/{filePath}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'HEAD /pools/{poolId}/nodes/{nodeId}/files/{filePath}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /pools/{poolId}/nodes/{nodeId}/rdp' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /pools/{poolId}/nodes/{nodeId}/reboot' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /pools/{poolId}/nodes/{nodeId}/reimage' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /pools/{poolId}/nodes/{nodeId}/users' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /pools/{poolId}/nodes/{nodeId}/users/{userName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /pools/{poolId}/nodes/{nodeId}/users/{userName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /pools/{poolId}/removenodes' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /pools/{poolId}/resize' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /pools/{poolId}/stopresize' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /pools/{poolId}/updateproperties' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /pools/{poolId}/upgradeos' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 71,
        "numOpsQuery": 27,
        "numOpsMutation": 44,
        "numQueriesCreated": 24,
        "numMutationsCreated": 2
      }
    },
    {
      "name": "BatchService",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /certificates' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /certificates(thumbprintAlgorithm={thumbprintAlgorithm},thumbprint={thumbprint})' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /certificates(thumbprintAlgorithm={thumbprintAlgorithm},thumbprint={thumbprint})/canceldelete' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /jobs' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /jobs/{jobId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /jobs/{jobId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /jobs/{jobId}/disable' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /jobs/{jobId}/enable' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /jobs/{jobId}/tasks' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /jobs/{jobId}/tasks/{taskId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /jobs/{jobId}/tasks/{taskId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /jobs/{jobId}/tasks/{taskId}/files/{filePath}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /jobs/{jobId}/tasks/{taskId}/files/{filePath}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'HEAD /jobs/{jobId}/tasks/{taskId}/files/{filePath}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /jobs/{jobId}/tasks/{taskId}/reactivate' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /jobs/{jobId}/tasks/{taskId}/terminate' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /jobs/{jobId}/terminate' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /jobschedules' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /jobschedules/{jobScheduleId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'HEAD /jobschedules/{jobScheduleId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /jobschedules/{jobScheduleId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /jobschedules/{jobScheduleId}/disable' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /jobschedules/{jobScheduleId}/enable' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /jobschedules/{jobScheduleId}/terminate' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /pools' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /pools/{poolId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'HEAD /pools/{poolId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /pools/{poolId}/disableautoscale' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /pools/{poolId}/enableautoscale' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /pools/{poolId}/nodes/{nodeId}/disablescheduling' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /pools/{poolId}/nodes/{nodeId}/enablescheduling' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /pools/{poolId}/nodes/{nodeId}/files/{filePath}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /pools/{poolId}/nodes/{nodeId}/files/{filePath}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'HEAD /pools/{poolId}/nodes/{nodeId}/files/{filePath}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /pools/{poolId}/nodes/{nodeId}/rdp' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /pools/{poolId}/nodes/{nodeId}/reboot' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /pools/{poolId}/nodes/{nodeId}/reimage' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /pools/{poolId}/nodes/{nodeId}/users' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /pools/{poolId}/nodes/{nodeId}/users/{userName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /pools/{poolId}/nodes/{nodeId}/users/{userName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /pools/{poolId}/removenodes' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /pools/{poolId}/resize' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /pools/{poolId}/stopresize' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /pools/{poolId}/updateproperties' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /pools/{poolId}/upgradeos' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 71,
        "numOpsQuery": 27,
        "numOpsMutation": 44,
        "numQueriesCreated": 24,
        "numMutationsCreated": 2
      }
    },
    {
      "name": "BatchService",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /certificates' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /certificates(thumbprintAlgorithm={thumbprintAlgorithm},thumbprint={thumbprint})' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /certificates(thumbprintAlgorithm={thumbprintAlgorithm},thumbprint={thumbprint})/canceldelete' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /jobs' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /jobs/{jobId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /jobs/{jobId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /jobs/{jobId}/disable' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /jobs/{jobId}/enable' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /jobs/{jobId}/tasks' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /jobs/{jobId}/tasks/{taskId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /jobs/{jobId}/tasks/{taskId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /jobs/{jobId}/tasks/{taskId}/files/{filePath}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /jobs/{jobId}/tasks/{taskId}/files/{filePath}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'HEAD /jobs/{jobId}/tasks/{taskId}/files/{filePath}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /jobs/{jobId}/tasks/{taskId}/reactivate' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /jobs/{jobId}/tasks/{taskId}/terminate' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /jobs/{jobId}/terminate' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /jobschedules' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /jobschedules/{jobScheduleId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'HEAD /jobschedules/{jobScheduleId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /jobschedules/{jobScheduleId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /jobschedules/{jobScheduleId}/disable' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /jobschedules/{jobScheduleId}/enable' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /jobschedules/{jobScheduleId}/terminate' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /pools' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /pools/{poolId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'HEAD /pools/{poolId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /pools/{poolId}/disableautoscale' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /pools/{poolId}/enableautoscale' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /pools/{poolId}/nodes/{nodeId}/disablescheduling' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /pools/{poolId}/nodes/{nodeId}/enablescheduling' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /pools/{poolId}/nodes/{nodeId}/files/{filePath}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /pools/{poolId}/nodes/{nodeId}/files/{filePath}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'HEAD /pools/{poolId}/nodes/{nodeId}/files/{filePath}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /pools/{poolId}/nodes/{nodeId}/rdp' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /pools/{poolId}/nodes/{nodeId}/reboot' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /pools/{poolId}/nodes/{nodeId}/reimage' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /pools/{poolId}/nodes/{nodeId}/users' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /pools/{poolId}/nodes/{nodeId}/users/{userName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /pools/{poolId}/nodes/{nodeId}/users/{userName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /pools/{poolId}/removenodes' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /pools/{poolId}/resize' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /pools/{poolId}/stopresize' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /pools/{poolId}/updateproperties' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /pools/{poolId}/upgradeos' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 72,
        "numOpsQuery": 28,
        "numOpsMutation": 44,
        "numQueriesCreated": 25,
        "numMutationsCreated": 2
      }
    },
    {
      "name": "BatchService",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /certificates' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /certificates(thumbprintAlgorithm={thumbprintAlgorithm},thumbprint={thumbprint})' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /certificates(thumbprintAlgorithm={thumbprintAlgorithm},thumbprint={thumbprint})/canceldelete' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /jobs' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /jobs/{jobId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /jobs/{jobId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /jobs/{jobId}/disable' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /jobs/{jobId}/enable' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /jobs/{jobId}/tasks' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /jobs/{jobId}/tasks/{taskId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /jobs/{jobId}/tasks/{taskId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /jobs/{jobId}/tasks/{taskId}/files/{filePath}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /jobs/{jobId}/tasks/{taskId}/files/{filePath}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'HEAD /jobs/{jobId}/tasks/{taskId}/files/{filePath}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /jobs/{jobId}/tasks/{taskId}/reactivate' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /jobs/{jobId}/tasks/{taskId}/terminate' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /jobs/{jobId}/terminate' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /jobschedules' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /jobschedules/{jobScheduleId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'HEAD /jobschedules/{jobScheduleId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /jobschedules/{jobScheduleId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /jobschedules/{jobScheduleId}/disable' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /jobschedules/{jobScheduleId}/enable' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /jobschedules/{jobScheduleId}/terminate' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /pools' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /pools/{poolId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'HEAD /pools/{poolId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /pools/{poolId}/disableautoscale' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /pools/{poolId}/enableautoscale' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /pools/{poolId}/nodes/{nodeId}/disablescheduling' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /pools/{poolId}/nodes/{nodeId}/enablescheduling' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /pools/{poolId}/nodes/{nodeId}/files/{filePath}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /pools/{poolId}/nodes/{nodeId}/files/{filePath}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'HEAD /pools/{poolId}/nodes/{nodeId}/files/{filePath}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /pools/{poolId}/nodes/{nodeId}/rdp' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /pools/{poolId}/nodes/{nodeId}/reboot' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /pools/{poolId}/nodes/{nodeId}/reimage' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /pools/{poolId}/nodes/{nodeId}/users' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /pools/{poolId}/nodes/{nodeId}/users/{userName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /pools/{poolId}/nodes/{nodeId}/users/{userName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /pools/{poolId}/removenodes' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /pools/{poolId}/resize' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /pools/{poolId}/stopresize' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /pools/{poolId}/updateproperties' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /pools/{poolId}/upgradeos' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 72,
        "numOpsQuery": 28,
        "numOpsMutation": 44,
        "numQueriesCreated": 25,
        "numMutationsCreated": 2
      }
    },
    {
      "name": "Winning Email",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"type\":\"object\"}",
            "mitigation": "Fall back to type 'GraphQL String'"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 3,
        "numOpsQuery": 2,
        "numOpsMutation": 1,
        "numQueriesCreated": 2,
        "numMutationsCreated": 1
      }
    },
    {
      "name": "Real-Time Bus Predictions",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /Predictions' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /json/jPredictions' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 2,
        "numOpsQuery": 2,
        "numOpsMutation": 0,
        "numQueriesCreated": 0,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Bus Route and Stop Methods",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /BusPositions' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /RouteDetails' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /RouteSchedule' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /Routes' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /StopSchedule' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /Stops' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /json/jBusPositions' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /json/jRouteDetails' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /json/jRouteSchedule' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /json/jRoutes' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /json/jStopSchedule' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /json/jStops' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 12,
        "numOpsQuery": 12,
        "numOpsMutation": 0,
        "numQueriesCreated": 0,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Incidents",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /BusIncidents' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /ElevatorIncidents' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /Incidents' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /json/BusIncidents' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /json/ElevatorIncidents' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /json/Incidents' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 6,
        "numOpsQuery": 6,
        "numOpsMutation": 0,
        "numQueriesCreated": 0,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Real-Time Rail Predictions",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /GetPrediction/{StationCodes}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /json/GetPrediction/{StationCodes}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 2,
        "numOpsQuery": 2,
        "numOpsMutation": 0,
        "numQueriesCreated": 0,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Rail Station Information",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /Lines' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /Path' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /SrcStationToDstStationInfo' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /StationEntrances' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /StationInfo' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /StationParking' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /StationTimes' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /Stations' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /json/jLines' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /json/jPath' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /json/jSrcStationToDstStationInfo' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /json/jStationEntrances' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /json/jStationInfo' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /json/jStationParking' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /json/jStationTimes' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /json/jStations' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 16,
        "numOpsQuery": 16,
        "numOpsMutation": 0,
        "numQueriesCreated": 0,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Word Associations",
      "report": {
        "warnings": [],
        "numOps": 2,
        "numOpsQuery": 1,
        "numOpsMutation": 1,
        "numQueriesCreated": 1,
        "numMutationsCreated": 1
      }
    },
    {
      "name": "Wordnik",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /wordList.json/{permalink}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /wordList.json/{permalink}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /wordList.json/{permalink}/deleteWords' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /wordList.json/{permalink}/words' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 28,
        "numOpsQuery": 22,
        "numOpsMutation": 6,
        "numQueriesCreated": 22,
        "numMutationsCreated": 2
      }
    },
    {
      "name": "Transform",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /jsontoxml' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /xmltojson' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 2,
        "numOpsQuery": 0,
        "numOpsMutation": 2,
        "numQueriesCreated": 0,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Accounting",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /Accounts/{AccountID}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /Accounts/{AccountID}/Attachments/{FileName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /BankTransactions/{BankTransactionID}/Attachments/{FileName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /BankTransfers/{BankTransferID}/Attachments/{FileName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /ContactGroups/{ContactGroupID}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /ContactGroups/{ContactGroupID}/Contacts' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /ContactGroups/{ContactGroupID}/Contacts/{ContactID}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /Contacts/{ContactID}/Attachments/{FileName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /CreditNotes/{CreditNoteID}/Attachments/{FileName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /Invoices/{InvoiceID}/Attachments/{FileName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /Items/{ItemID}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /LinkedTransactions/{LinkedTransactionID}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /ManualJournals/{ManualJournalID}/Attachments/{FileName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /PurchaseOrders/{PurchaseOrderID}/Attachments/{FileName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /Receipts/{ReceiptID}/Attachments/{FileName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /RepeatingInvoices/{RepeatingInvoiceID}/Attachments/{FileName}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /TrackingCategories/{TrackingCategoryID}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /TrackingCategories/{TrackingCategoryID}/Options/{TrackingOptionID}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"Bills\":{\"properties\":{\"Days\":{\"example\":1,\"type\":\"string\"},\"Type\":{\"enum\":[\"DAYSAFTERBILLDATE\",\"DAYSAFTERBILLMONTH\",\"OFCURRENTMONTH\",\"OFFOLLOWINGMONTH\"],\"example\":\"OFFOLLOWINGMONTH\",\"type\":\"string\"}},\"type\":\"object\"},\"Sales\":{\"properties\":{\"Days\":{\"example\":30,\"type\":\"string\"},\"Type\":{\"enum\":[\"DAYSAFTERBILLDATE\",\"DAYSAFTERBILLMONTH\",\"OFCURRENTMONTH\",\"OFFOLLOWINGMONTH\"],\"example\":\"DAYSAFTERBILLDATE\",\"type\":\"string\"}},\"type\":\"object\"}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 151,
        "numOpsQuery": 80,
        "numOpsMutation": 71,
        "numQueriesCreated": 70,
        "numMutationsCreated": 63
      }
    },
    {
      "name": "XKCD",
      "report": {
        "warnings": [],
        "numOps": 2,
        "numOpsQuery": 2,
        "numOpsMutation": 0,
        "numQueriesCreated": 2,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Yunbi",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v2/addresses/{address}.json' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v2/deposit.json' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v2/deposit_address.json' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v2/deposits.json' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v2/depth.json' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v2/k.json' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v2/k_with_pending_trades.json' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v2/markets.json' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v2/members/me.json' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v2/order.json' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /v2/order/delete.json' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v2/order_book.json' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v2/orders.json' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /v2/orders.json' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /v2/orders/clear.json' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /v2/orders/multi.json' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v2/partners/orders/{id}/trades.json' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v2/tickers.json' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v2/tickers/{market}.json' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v2/timestamp.json' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v2/trades.json' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v2/trades/my.json' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 22,
        "numOpsQuery": 18,
        "numOpsMutation": 4,
        "numQueriesCreated": 0,
        "numMutationsCreated": 0
      }
    },
    {
      "name": "Zappiti Player",
      "report": {
        "warnings": [],
        "numOps": 7,
        "numOpsQuery": 0,
        "numOpsMutation": 7,
        "numQueriesCreated": 0,
        "numMutationsCreated": 7
      }
    },
    {
      "name": "Zoom Connect",
      "report": {
        "warnings": [
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /api/rest/v1/account/transfer' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /api/rest/v1/account/transfer' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /api/rest/v1/account/user' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /api/rest/v1/account/user' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /api/rest/v1/account/user/{userId}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /api/rest/v1/account/user/{userId}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /api/rest/v1/contacts/create' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /api/rest/v1/contacts/create' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /api/rest/v1/contacts/{contactId}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /api/rest/v1/contacts/{contactId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /api/rest/v1/contacts/{contactId}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /api/rest/v1/contacts/{contactId}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /api/rest/v1/contacts/{contactId}/addFromGroup/{groupId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /api/rest/v1/contacts/{contactId}/addFromGroup/{groupId}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /api/rest/v1/contacts/{contactId}/addFromGroup/{groupId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /api/rest/v1/contacts/{contactId}/addToGroup/{groupId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /api/rest/v1/contacts/{contactId}/addToGroup/{groupId}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /api/rest/v1/contacts/{contactId}/addToGroup/{groupId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /api/rest/v1/context/lookup' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /api/rest/v1/context/lookup' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /api/rest/v1/groups/create' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /api/rest/v1/groups/create' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /api/rest/v1/groups/{groupId}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /api/rest/v1/groups/{groupId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /api/rest/v1/groups/{groupId}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /api/rest/v1/groups/{groupId}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /api/rest/v1/groups/{groupId}/addContact/{contactId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /api/rest/v1/groups/{groupId}/addContact/{contactId}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /api/rest/v1/groups/{groupId}/addContact/{contactId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /api/rest/v1/groups/{groupId}/removeContact/{contactId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /api/rest/v1/groups/{groupId}/removeContact/{contactId}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /api/rest/v1/groups/{groupId}/removeContact/{contactId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /api/rest/v1/messages/{messageId}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /api/rest/v1/messages/{messageId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /api/rest/v1/messages/{messageId}/markRead' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /api/rest/v1/messages/{messageId}/markRead' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /api/rest/v1/messages/{messageId}/markRead' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /api/rest/v1/messages/{messageId}/markRead' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /api/rest/v1/messages/{messageId}/markUnread' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /api/rest/v1/messages/{messageId}/markUnread' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /api/rest/v1/messages/{messageId}/markUnread' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'PUT /api/rest/v1/messages/{messageId}/markUnread' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /api/rest/v1/sms/send' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /api/rest/v1/sms/send' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /api/rest/v1/sms/send-bulk' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /api/rest/v1/sms/send-bulk' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /api/rest/v1/sms/send-url-parameters' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /api/rest/v1/sms/send-url-parameters' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /api/rest/v1/sms/send-url/{token}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /api/rest/v1/sms/send-url/{token}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /api/rest/v1/templates/{templateId}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /api/rest/v1/templates/{templateId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /api/rest/v1/voice/single-audio' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /api/rest/v1/voice/single-audio' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /api/rest/v1/voice/single-text' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'POST /api/rest/v1/voice/single-text' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MultipleResponses",
            "message": "Operation 'DELETE /api/rest/v1/voice/{messageId}' has more than one success status codes (200 - 299).",
            "mitigation": "Will select response for status code '200'"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /api/rest/v1/voice/{messageId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 49,
        "numOpsQuery": 22,
        "numOpsMutation": 27,
        "numQueriesCreated": 18,
        "numMutationsCreated": 18
      }
    },
    {
      "name": "Zuora API Reference",
      "report": {
        "warnings": [
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /oauth/token' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /payment-runs' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /payment-runs/{paymentRunId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/accounting-codes' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /v1/accounting-codes' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /v1/accounting-codes/{ac-id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/accounting-codes/{ac-id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /v1/accounting-codes/{ac-id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /v1/accounting-codes/{ac-id}/activate' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /v1/accounting-codes/{ac-id}/deactivate' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/accounting-periods' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /v1/accounting-periods' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /v1/accounting-periods/{ap-id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/accounting-periods/{ap-id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /v1/accounting-periods/{ap-id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /v1/accounting-periods/{ap-id}/close' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /v1/accounting-periods/{ap-id}/pending-close' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /v1/accounting-periods/{ap-id}/reopen' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /v1/accounting-periods/{ap-id}/run-trial-balance' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /v1/accounts' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/accounts/{account-key}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /v1/accounts/{account-key}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/accounts/{account-key}/summary' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /v1/accounts/{id}/billing-documents/generate' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /v1/action/amend' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /v1/action/create' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /v1/action/delete' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /v1/action/execute' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /v1/action/generate' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /v1/action/query' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /v1/action/queryMore' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /v1/action/subscribe' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /v1/action/update' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/amendments/subscriptions/{subscription-id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/amendments/{amendment-key}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /v1/attachments' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /v1/attachments/{attachment-id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/attachments/{attachment-id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /v1/attachments/{attachment-id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/attachments/{object-type}/{object-key}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /v1/bill-runs/{billRunId}/emails' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/billing-documents' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /v1/billing-preview-runs' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/billing-preview-runs/{billingPreviewRunId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /v1/bulk' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/bulk/{bulk-key}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /v1/bulk/{bulk-key}/stop' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/catalog/products' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /v1/catalog/products/{product-id}/share' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/charge-revenue-summaries/subscription-charges/{charge-key}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/charge-revenue-summaries/{crs-number}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /v1/connections' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/creditmemos' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /v1/creditmemos' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /v1/creditmemos/{creditMemoId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/creditmemos/{creditMemoId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /v1/creditmemos/{creditMemoId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /v1/creditmemos/{creditMemoId}/apply' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /v1/creditmemos/{creditMemoId}/cancel' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /v1/creditmemos/{creditMemoId}/emails' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/creditmemos/{creditMemoId}/items' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/creditmemos/{creditMemoId}/items/{cmitemid}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/creditmemos/{creditMemoId}/parts' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/creditmemos/{creditMemoId}/parts/{partid}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/creditmemos/{creditMemoId}/parts/{partid}/itemparts' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/creditmemos/{creditMemoId}/parts/{partid}/itemparts/{itempartid}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /v1/creditmemos/{creditMemoId}/pdfs' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /v1/creditmemos/{creditMemoId}/post' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /v1/creditmemos/{creditMemoId}/taxationitems' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /v1/creditmemos/{creditMemoId}/unapply' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/creditmemos/{creditMemoNumber}/amountBreakdownByOrder' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /v1/creditmemos/{creditmemoId}/refunds' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/custom-exchange-rates/{currency}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/debitmemos' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /v1/debitmemos' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /v1/debitmemos' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /v1/debitmemos/{debitMemoId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/debitmemos/{debitMemoId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /v1/debitmemos/{debitMemoId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /v1/debitmemos/{debitMemoId}/cancel' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /v1/debitmemos/{debitMemoId}/emails' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/debitmemos/{debitMemoId}/items' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/debitmemos/{debitMemoId}/items/{dmitemid}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /v1/debitmemos/{debitMemoId}/pdfs' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /v1/debitmemos/{debitMemoId}/post' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /v1/debitmemos/{debitMemoId}/taxationitems' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/describe/{object}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/entities' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /v1/entities' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /v1/entities/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/entities/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /v1/entities/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /v1/entities/{id}/provision' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/entity-connections' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /v1/entity-connections' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /v1/entity-connections/{connection-id}/accept' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /v1/entity-connections/{connection-id}/deny' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /v1/entity-connections/{connection-id}/disconnect' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/files/{file-id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /v1/hmac-signatures' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/hostedpages' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /v1/invoices' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /v1/invoices/{invoiceId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /v1/invoices/{invoiceId}/creditmemos' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /v1/invoices/{invoiceId}/debitmemos' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /v1/invoices/{invoiceId}/emails' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /v1/invoices/{invoiceId}/reverse' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/invoices/{invoiceNumber}/amountBreakdownByOrder' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /v1/journal-entries' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/journal-entries/journal-runs/{jr-number}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /v1/journal-entries/{je-number}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/journal-entries/{je-number}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /v1/journal-entries/{je-number}/basic-information' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /v1/journal-entries/{je-number}/cancel' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /v1/journal-runs' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /v1/journal-runs/{jr-number}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/journal-runs/{jr-number}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /v1/journal-runs/{jr-number}/cancel' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/notification-history/callout' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/notification-history/email' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /v1/object/account' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /v1/object/account/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/object/account/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /v1/object/account/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /v1/object/amendment' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /v1/object/amendment/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/object/amendment/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /v1/object/amendment/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /v1/object/bill-run' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /v1/object/bill-run/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/object/bill-run/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /v1/object/bill-run/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/object/communication-profile/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /v1/object/contact' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /v1/object/contact/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/object/contact/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /v1/object/contact/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/object/credit-balance-adjustment/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /v1/object/export' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/object/export/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /v1/object/feature/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/object/feature/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /v1/object/import' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/object/import/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /v1/object/invoice-adjustment' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /v1/object/invoice-adjustment/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/object/invoice-adjustment/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /v1/object/invoice-adjustment/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /v1/object/invoice-item-adjustment/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/object/invoice-item-adjustment/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/object/invoice-item/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /v1/object/invoice-payment' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/object/invoice-payment/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /v1/object/invoice-payment/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/object/invoice-split-item/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/object/invoice-split/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /v1/object/invoice/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/object/invoice/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /v1/object/invoice/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /v1/object/payment' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /v1/object/payment-method' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/object/payment-method-snapshot/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/object/payment-method-transaction-log/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /v1/object/payment-method/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/object/payment-method/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /v1/object/payment-method/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/object/payment-transaction-log/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /v1/object/payment/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/object/payment/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /v1/object/payment/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /v1/object/product' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /v1/object/product-feature/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/object/product-feature/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /v1/object/product-rate-plan' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/object/product-rate-plan-charge-tier/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /v1/object/product-rate-plan-charge/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/object/product-rate-plan-charge/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /v1/object/product-rate-plan/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/object/product-rate-plan/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /v1/object/product-rate-plan/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /v1/object/product/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/object/product/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /v1/object/product/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/object/rate-plan-charge-tier/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/object/rate-plan-charge/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/object/rate-plan/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /v1/object/refund' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/object/refund-invoice-payment/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/object/refund-transaction-log/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /v1/object/refund/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/object/refund/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /v1/object/refund/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/object/subscription-product-feature/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /v1/object/subscription/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/object/subscription/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /v1/object/subscription/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /v1/object/taxation-item' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /v1/object/taxation-item/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/object/taxation-item/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /v1/object/taxation-item/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /v1/object/unit-of-measure' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /v1/object/unit-of-measure/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/object/unit-of-measure/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /v1/object/unit-of-measure/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /v1/object/usage' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /v1/object/usage/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/object/usage/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /v1/object/usage/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /v1/operations/billing-preview' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /v1/operations/invoice-collect' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/orders' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /v1/orders' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/orders/invoiceOwner/{accountNumber}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /v1/orders/preview' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/orders/subscription/{subscriptionNumber}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/orders/subscriptionOwner/{accountNumber}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/orders/term/{subscriptionNumber}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /v1/orders/{orderNumber}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/orders/{orderNumber}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/orders/{orderNumber}/billingInfo' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /v1/orders/{orderNumber}/customFields' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/orders/{orderNumber}/evergreenMetrics/{subscriptionNumber}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/orders/{orderNumber}/ratedResults' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /v1/payment-methods/credit-cards' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/payment-methods/credit-cards/accounts/{account-key}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /v1/payment-methods/credit-cards/{payment-method-id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /v1/payment-methods/decryption' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /v1/payment-methods/{payment-method-id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /v1/payment-methods/{payment-method-id}/verify' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/paymentgateways' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/payments' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /v1/payments' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /v1/payments/{paymentId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/payments/{paymentId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /v1/payments/{paymentId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /v1/payments/{paymentId}/apply' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /v1/payments/{paymentId}/cancel' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/payments/{paymentId}/parts' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/payments/{paymentId}/parts/{partid}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/payments/{paymentId}/parts/{partid}/itemparts' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/payments/{paymentId}/parts/{partid}/itemparts/{itempartid}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /v1/payments/{paymentId}/refunds' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /v1/payments/{paymentId}/transfer' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /v1/payments/{paymentId}/unapply' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /v1/quotes/document' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/refunds' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /v1/refunds/{refundId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/refunds/{refundId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /v1/refunds/{refundId}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /v1/refunds/{refundId}/cancel' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/refunds/{refundId}/parts' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/refunds/{refundId}/parts/{refundpartid}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/refunds/{refundId}/parts/{refundpartid}/itemparts' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/refunds/{refundId}/parts/{refundpartid}/itemparts/{itempartid}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/revenue-events/revenue-schedules/{rs-number}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/revenue-events/{event-number}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/revenue-items/charge-revenue-summaries/{crs-number}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/revenue-items/revenue-events/{event-number}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /v1/revenue-items/revenue-events/{event-number}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/revenue-items/revenue-schedules/{rs-number}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /v1/revenue-items/revenue-schedules/{rs-number}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/revenue-recognition-rules/product-charges/{charge-key}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/revenue-recognition-rules/subscription-charges/{charge-key}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/revenue-schedules/credit-memo-items/{cmi-id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /v1/revenue-schedules/credit-memo-items/{cmi-id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /v1/revenue-schedules/credit-memo-items/{cmi-id}/distribute-revenue-with-date-range' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/revenue-schedules/debit-memo-items/{dmi-id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /v1/revenue-schedules/debit-memo-items/{dmi-id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /v1/revenue-schedules/debit-memo-items/{dmi-id}/distribute-revenue-with-date-range' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/revenue-schedules/invoice-item-adjustments/{invoice-item-adj-id}/' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /v1/revenue-schedules/invoice-item-adjustments/{invoice-item-adj-key}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /v1/revenue-schedules/invoice-item-adjustments/{invoice-item-adj-key}/distribute-revenue-with-date-range' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/revenue-schedules/invoice-items/{invoice-item-id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /v1/revenue-schedules/invoice-items/{invoice-item-id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /v1/revenue-schedules/invoice-items/{invoice-item-id}/distribute-revenue-with-date-range' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/revenue-schedules/product-charges/{charge-key}/{account-key}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/revenue-schedules/subscription-charges/{charge-key}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /v1/revenue-schedules/subscription-charges/{charge-key}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /v1/revenue-schedules/{rs-number}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/revenue-schedules/{rs-number}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /v1/revenue-schedules/{rs-number}/basic-information' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /v1/revenue-schedules/{rs-number}/distribute-revenue-across-accounting-periods' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /v1/revenue-schedules/{rs-number}/distribute-revenue-on-specific-date' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /v1/revenue-schedules/{rs-number}/distribute-revenue-with-date-range' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /v1/rsa-signatures' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /v1/rsa-signatures/decrypt' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/settings/finance/revenue-automation-start-date' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /v1/subscriptions' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/subscriptions/accounts/{account-key}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /v1/subscriptions/preview' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/subscriptions/{subscription-key}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /v1/subscriptions/{subscription-key}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /v1/subscriptions/{subscription-key}/cancel' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /v1/subscriptions/{subscription-key}/renew' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /v1/subscriptions/{subscription-key}/resume' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /v1/subscriptions/{subscription-key}/suspend' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/subscriptions/{subscription-key}/versions/{version}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /v1/subscriptions/{subscriptionNumber}/customFields' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'DELETE /v1/taxationitems/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/taxationitems/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /v1/taxationitems/{id}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/transactions/invoices/accounts/{account-key}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/transactions/payments/accounts/{account-key}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'POST /v1/usage' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/usage/accounts/{account-key}' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /v1/users/{username}/accept-access' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'GET /v1/users/{username}/accessible-entities' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /v1/users/{username}/deny-access' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          },
          {
            "type": "MissingResponseSchema",
            "message": "Operation 'PUT /v1/users/{username}/request-access' has no (valid) response schema.",
            "mitigation": "Ignore operation"
          }
        ],
        "numOps": 313,
        "numOpsQuery": 128,
        "numOpsMutation": 185,
        "numQueriesCreated": 3,
        "numMutationsCreated": 1
      }
    },
    {
      "name": "APIs.guru",
      "report": {
        "warnings": [
          {
            "type": "InvalidSchemaType",
            "message": "Request / response schema has no (valid) type: {\"description\":\"List of API details.\\nIt is a JSON object with API IDs(`<provider>[:<service>]`) as keys.\\n\",\"type\":\"object\",\"additionalProperties\":{\"$ref\":\"#/components/schemas/API\"},\"minProperties\":1,\"example\":{\"googleapis.com:drive\":{\"added\":\"2015-02-22T20:00:45.000Z\",\"preferred\":\"v3\",\"versions\":{\"v2\":{\"added\":\"2015-02-22T20:00:45.000Z\",\"info\":{\"title\":\"Drive\",\"version\":\"v2\",\"x-apiClientRegistration\":{\"url\":\"https://console.developers.google.com\"},\"x-logo\":{\"url\":\"https://api.apis.guru/v2/cache/logo/https_www.gstatic.com_images_icons_material_product_2x_drive_32dp.png\"},\"x-origin\":{\"format\":\"google\",\"url\":\"https://www.googleapis.com/discovery/v1/apis/drive/v2/rest\",\"version\":\"v1\"},\"x-preferred\":false,\"x-providerName\":\"googleapis.com\",\"x-serviceName\":\"drive\"},\"swaggerUrl\":\"https://api.apis.guru/v2/specs/googleapis.com/drive/v2/swagger.json\",\"swaggerYamlUrl\":\"https://api.apis.guru/v2/specs/googleapis.com/drive/v2/swagger.yaml\",\"updated\":\"2016-06-17T00:21:44.000Z\"},\"v3\":{\"added\":\"2015-12-12T00:25:13.000Z\",\"info\":{\"title\":\"Drive\",\"version\":\"v3\",\"x-apiClientRegistration\":{\"url\":\"https://console.developers.google.com\"},\"x-logo\":{\"url\":\"https://api.apis.guru/v2/cache/logo/https_www.gstatic.com_images_icons_material_product_2x_drive_32dp.png\"},\"x-origin\":{\"format\":\"google\",\"url\":\"https://www.googleapis.com/discovery/v1/apis/drive/v3/rest\",\"version\":\"v1\"},\"x-preferred\":true,\"x-providerName\":\"googleapis.com\",\"x-serviceName\":\"drive\"},\"swaggerUrl\":\"https://api.apis.guru/v2/specs/googleapis.com/drive/v3/swagger.json\",\"swaggerYamlUrl\":\"https://api.apis.guru/v2/specs/googleapis.com/drive/v3/swagger.yaml\",\"updated\":\"2016-06-17T00:21:44.000Z\"}}}}}",
            "mitigation": "Fall back to type 'GraphQL String'"
          }
        ],
        "numOps": 2,
        "numOpsQuery": 2,
        "numOpsMutation": 0,
        "numQueriesCreated": 2,
        "numMutationsCreated": 0
      }
    }
  ],
  "errors": [
    {
      "name": "AWS CloudFormation",
      "error": "Name \"true\" can not be used as an Enum value.",
      "path": "tmp/APIs/amazonaws.com/cloudformation/2010-05-15/swagger.yaml"
    },
    {
      "name": "Apacta",
      "error": "Cannot beautify \"true\" of type \"boolean\"",
      "path": "tmp/APIs/apacta.com/0.0.1/swagger.yaml"
    },
    {
      "name": "AppVeyor",
      "error": "allOf will overwrite a preexisting property 'build: {\"$ref\":\"#/components/schemas/BuildLookupModel\"}' with 'build: {\"$ref\":\"#/components/schemas/Build\"}' in schema '{\"type\":\"object\",\"properties\":{\"build\":{\"$ref\":\"#/components/schemas/BuildLookupModel\"},\"deploymentId\":{\"minimum\":0,\"type\":\"integer\"},\"finished\":{\"format\":\"date-time\",\"type\":\"string\"},\"started\":{\"format\":\"date-time\",\"type\":\"string\"},\"status\":{\"$ref\":\"#/components/schemas/Status\"},\"created\":{\"format\":\"date-time\",\"readOnly\":true,\"type\":\"string\"},\"updated\":{\"format\":\"date-time\",\"readOnly\":true,\"type\":\"string\"}}}",
      "path": "tmp/APIs/appveyor.com/0.20170106.0/swagger.yaml"
    },
    {
      "name": "Business Registries",
      "error": "(Patchable) $ref object cannot be extended: #/responses/FailedPrecondition",
      "path": "tmp/APIs/ato.gov.au/0.0.6/swagger.yaml"
    },
    {
      "name": "ApiManagementClient",
      "error": "allOf will overwrite a preexisting property 'url: {\"description\":\"WebProxy Server AbsoluteUri property which includes the entire URI stored in the Uri instance, including all fragments and query strings.\",\"maxLength\":2000,\"minLength\":1,\"type\":\"string\"}' with 'url: {\"description\":\"Runtime Url of the Backend.\",\"maxLength\":2000,\"minLength\":1,\"type\":\"string\"}' in schema '{\"description\":\"The Backend entity in API Management represents a backend service that is configured to skip certification chain validation when using a self-signed certificate to test mutual certificate authentication.\",\"properties\":{\"id\":{\"description\":\"Uniquely identifies the backend within the current API Management service instance. The value is a valid relative URL in the format of /backends/{backendId} where {backendId} is a backend identifier.\",\"readOnly\":true,\"type\":\"string\"},\"parameter\":{\"description\":\"Authentication Parameter value.\",\"maxLength\":300,\"minLength\":1,\"type\":\"string\"},\"scheme\":{\"description\":\"Authentication Scheme name.\",\"maxLength\":100,\"minLength\":1,\"type\":\"string\"},\"certificate\":{\"description\":\"List of Client Certificate Thumbprint.\",\"items\":{\"type\":\"string\"},\"maxItems\":32,\"type\":\"array\"},\"header\":{\"additionalProperties\":{\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"description\":\"Header Parameter description.\",\"type\":\"object\"},\"query\":{\"additionalProperties\":{\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"description\":\"Query Parameter description.\",\"type\":\"object\"},\"password\":{\"description\":\"Password to connect to the WebProxy Server\",\"type\":\"string\"},\"url\":{\"description\":\"WebProxy Server AbsoluteUri property which includes the entire URI stored in the Uri instance, including all fragments and query strings.\",\"maxLength\":2000,\"minLength\":1,\"type\":\"string\"},\"username\":{\"description\":\"Username to connect to the WebProxy server\",\"type\":\"string\"},\"description\":{\"description\":\"Backend Description.\",\"maxLength\":2000,\"minLength\":1,\"type\":\"string\"},\"properties\":{\"$ref\":\"#/components/schemas/BackendProperties\"},\"resourceId\":{\"description\":\"Management Uri of the Resource in External System. This url can be the Arm Resource Id of Logic Apps, Function Apps or Api Apps.\",\"maxLength\":2000,\"minLength\":1,\"type\":\"string\"},\"title\":{\"description\":\"Backend Title.\",\"maxLength\":300,\"minLength\":1,\"type\":\"string\"},\"protocol\":{\"description\":\"Backend communication protocol.\",\"enum\":[\"http\",\"soap\"],\"type\":\"string\",\"x-ms-enum\":{\"modelAsString\":true,\"name\":\"BackendProtocol\"}}},\"type\":\"object\"}",
      "path": "tmp/APIs/azure.com/apimanagement-apimbackends/2016-10-10/swagger.yaml"
    },
    {
      "name": "Update Management",
      "error": "Could not resolve reference \"./definitions.json#/definitions/softwareUpdateConfigurationCollectionItem\"",
      "path": "tmp/APIs/azure.com/automation-softwareUpdateConfiguration/2017-05-15-preview/swagger.yaml"
    },
    {
      "name": "Update Management",
      "error": "Could not resolve reference \"./definitions.json#/definitions/softwareUpdateConfigurationMachineRun\"",
      "path": "tmp/APIs/azure.com/automation-softwareUpdateConfigurationMachineRun/2017-05-15-preview/swagger.yaml"
    },
    {
      "name": "ContainerServiceClient",
      "error": "Cannot beautify \"1\" of type \"number\"",
      "path": "tmp/APIs/azure.com/compute-containerService/2015-11-01-preview/swagger.yaml"
    },
    {
      "name": "ContainerServiceClient",
      "error": "Cannot beautify \"1\" of type \"number\"",
      "path": "tmp/APIs/azure.com/compute-containerService/2016-03-30/swagger.yaml"
    },
    {
      "name": "ContainerServiceClient",
      "error": "Cannot beautify \"1\" of type \"number\"",
      "path": "tmp/APIs/azure.com/compute-containerService/2016-09-30/swagger.yaml"
    },
    {
      "name": "ContainerServiceClient",
      "error": "Cannot beautify \"1\" of type \"number\"",
      "path": "tmp/APIs/azure.com/compute-containerService/2017-01-31/swagger.yaml"
    },
    {
      "name": "ContainerServiceClient",
      "error": "Cannot beautify \"1\" of type \"number\"",
      "path": "tmp/APIs/azure.com/containerservices-containerService/2017-07-01/swagger.yaml"
    },
    {
      "name": "LogicManagementClient",
      "error": "content fields must be an object with field names as keys or a function which returns such an object.",
      "path": "tmp/APIs/azure.com/logic/2016-06-01/swagger.yaml"
    },
    {
      "name": "MySQLManagementClient",
      "error": "allOf will overwrite a preexisting property 'name: {\"description\":\"The name of the log file.\",\"type\":\"string\"}' with 'name: {\"description\":\"Resource name.\",\"readOnly\":true,\"type\":\"string\"}' in schema '{\"description\":\"Represents a log file.\",\"properties\":{\"name\":{\"description\":\"The name of the log file.\",\"type\":\"string\"},\"properties\":{\"$ref\":\"#/components/schemas/LogFileProperties\"},\"id\":{\"description\":\"Resource ID\",\"readOnly\":true,\"type\":\"string\"}},\"type\":\"object\"}",
      "path": "tmp/APIs/azure.com/mysql/2017-04-30-preview/swagger.yaml"
    },
    {
      "name": "NetworkManagementClient",
      "error": "Could not resolve reference \"./routeFilter.json#/definitions/RouteFilter\"",
      "path": "tmp/APIs/azure.com/network-expressRouteCircuit/2017-03-01/swagger.yaml"
    },
    {
      "name": "NetworkManagementClient",
      "error": "Could not resolve reference \"./routeFilter.json#/definitions/RouteFilter\"",
      "path": "tmp/APIs/azure.com/network-expressRouteCircuit/2017-06-01/swagger.yaml"
    },
    {
      "name": "NetworkManagementClient",
      "error": "Could not resolve reference \"./routeFilter.json#/definitions/RouteFilter\"",
      "path": "tmp/APIs/azure.com/network-expressRouteCircuit/2017-08-01/swagger.yaml"
    },
    {
      "name": "NetworkManagementClient",
      "error": "Could not resolve reference \"./routeFilter.json#/definitions/RouteFilter\"",
      "path": "tmp/APIs/azure.com/network-expressRouteCircuit/2017-09-01/swagger.yaml"
    },
    {
      "name": "NetworkManagementClient",
      "error": "Could not resolve reference \"./routeFilter.json#/definitions/RouteFilter\"",
      "path": "tmp/APIs/azure.com/network-expressRouteCircuit/2017-10-01/swagger.yaml"
    },
    {
      "name": "PostgreSQLManagementClient",
      "error": "allOf will overwrite a preexisting property 'name: {\"description\":\"The name of the log file.\",\"type\":\"string\"}' with 'name: {\"description\":\"Resource name.\",\"readOnly\":true,\"type\":\"string\"}' in schema '{\"description\":\"Represents a log file.\",\"properties\":{\"name\":{\"description\":\"The name of the log file.\",\"type\":\"string\"},\"properties\":{\"$ref\":\"#/components/schemas/LogFileProperties\"},\"id\":{\"description\":\"Resource ID\",\"readOnly\":true,\"type\":\"string\"}},\"type\":\"object\"}",
      "path": "tmp/APIs/azure.com/postgresql/2017-04-30-preview/swagger.yaml"
    },
    {
      "name": "ServiceBusManagementClient",
      "error": "allOf will overwrite a preexisting property 'location: {\"description\":\"Resource location.\",\"type\":\"string\"}' with 'location: {\"description\":\"Resource location\",\"type\":\"string\"}' in schema '{\"description\":\"Description of a namespace resource.\",\"properties\":{\"properties\":{\"$ref\":\"#/components/schemas/NamespaceProperties\"},\"sku\":{\"$ref\":\"#/components/schemas/Sku\"},\"id\":{\"description\":\"Resource Id\",\"readOnly\":true,\"type\":\"string\"},\"location\":{\"description\":\"Resource location.\",\"type\":\"string\"},\"name\":{\"description\":\"Resource name\",\"readOnly\":true,\"type\":\"string\"},\"type\":{\"description\":\"Resource type\",\"readOnly\":true,\"type\":\"string\"}},\"type\":\"object\"}",
      "path": "tmp/APIs/azure.com/servicebus/2014-09-01/swagger.yaml"
    },
    {
      "name": "ServiceBusManagementClient",
      "error": "allOf will overwrite a preexisting property 'location: {\"description\":\"Resource location.\",\"type\":\"string\"}' with 'location: {\"description\":\"Resource location\",\"type\":\"string\"}' in schema '{\"description\":\"Description of a namespace resource.\",\"properties\":{\"properties\":{\"$ref\":\"#/components/schemas/NamespaceProperties\"},\"sku\":{\"$ref\":\"#/components/schemas/Sku\"},\"id\":{\"description\":\"Resource Id\",\"readOnly\":true,\"type\":\"string\"},\"location\":{\"description\":\"Resource location.\",\"type\":\"string\"},\"name\":{\"description\":\"Resource name\",\"readOnly\":true,\"type\":\"string\"},\"type\":{\"description\":\"Resource type\",\"readOnly\":true,\"type\":\"string\"}},\"type\":\"object\"}",
      "path": "tmp/APIs/azure.com/servicebus/2015-08-01/swagger.yaml"
    },
    {
      "name": "Azure SQL Database",
      "error": "valueListItem fields must be an object with field names as keys or a function which returns such an object.",
      "path": "tmp/APIs/azure.com/sql-deprecated/2014-04-01/swagger.yaml"
    },
    {
      "name": "Azure SQL Database server firewall rules",
      "error": "allOf will overwrite a preexisting property 'type: {\"description\":\"Type of resource this is.\",\"readOnly\":true,\"type\":\"string\"}' with 'type: {\"description\":\"Resource type.\",\"readOnly\":true,\"type\":\"string\"}' in schema '{\"description\":\"Represents a server firewall rule.\",\"properties\":{\"kind\":{\"description\":\"Kind of server that contains this firewall rule.\",\"readOnly\":true,\"type\":\"string\"},\"location\":{\"description\":\"Location of the server that contains this firewall rule.\",\"readOnly\":true,\"type\":\"string\"},\"properties\":{\"$ref\":\"#/components/schemas/FirewallRuleProperties\"},\"type\":{\"description\":\"Type of resource this is.\",\"readOnly\":true,\"type\":\"string\"},\"id\":{\"description\":\"Resource ID.\",\"readOnly\":true,\"type\":\"string\"},\"name\":{\"description\":\"Resource name.\",\"readOnly\":true,\"type\":\"string\"}},\"type\":\"object\"}",
      "path": "tmp/APIs/azure.com/sql-firewallRules/2014-04-01/swagger.yaml"
    },
    {
      "name": "Azure SQL Database replication links",
      "error": "allOf will overwrite a preexisting property 'type: {\"description\":\"Type of resource this is.\",\"readOnly\":true,\"type\":\"string\"}' with 'type: {\"description\":\"Resource type.\",\"readOnly\":true,\"type\":\"string\"}' in schema '{\"description\":\"Represents a database replication link.\",\"properties\":{\"location\":{\"description\":\"Location of the server that contains this firewall rule.\",\"readOnly\":true,\"type\":\"string\"},\"properties\":{\"$ref\":\"#/components/schemas/ReplicationLinkProperties\"},\"type\":{\"description\":\"Type of resource this is.\",\"readOnly\":true,\"type\":\"string\"},\"id\":{\"description\":\"Resource ID.\",\"readOnly\":true,\"type\":\"string\"},\"name\":{\"description\":\"Resource name.\",\"readOnly\":true,\"type\":\"string\"}},\"type\":\"object\"}",
      "path": "tmp/APIs/azure.com/sql-replicationLinks/2014-04-01/swagger.yaml"
    },
    {
      "name": "BBC Nitro",
      "error": "Name \"true\" can not be used as an Enum value.",
      "path": "tmp/APIs/bbc.com/1.0.0/swagger.yaml"
    },
    {
      "name": "BeezUP",
      "error": "allOf will overwrite a preexisting property 'links: {\"$ref\":\"#/components/schemas/orderHeaderLinks\"}' with 'links: {\"$ref\":\"#/components/schemas/orderLinks\"}' in schema '{\"type\":\"object\",\"properties\":{\"accountId\":{\"$ref\":\"#/components/schemas/accountId\"},\"beezUPOrderId\":{\"$ref\":\"#/components/schemas/beezUPOrderId\"},\"beezUPOrderUrl\":{\"$ref\":\"#/components/schemas/BeezUP.Common.HttpUrl\"},\"etag\":{\"$ref\":\"#/components/schemas/etag\"},\"links\":{\"$ref\":\"#/components/schemas/orderHeaderLinks\"},\"marketplaceBusinessCode\":{\"$ref\":\"#/components/schemas/BeezUP.Common.MarketplaceBusinessCode\"},\"marketplaceTechnicalCode\":{\"$ref\":\"#/components/schemas/BeezUP.Common.MarketplaceTechnicalCode\"},\"order_Buyer_Name\":{\"$ref\":\"#/components/schemas/order_Buyer_Name\"},\"order_CurrencyCode\":{\"$ref\":\"#/components/schemas/BeezUP.Common.CurrencyCode\"},\"order_LastModificationUtcDate\":{\"description\":\"The last modification UTC date done by BeezUP of this order\",\"example\":\"2017-04-16T10:30:23Z\",\"format\":\"date-time\",\"type\":\"string\"},\"order_MarketplaceLastModificationUtcDate\":{\"description\":\"The last modification UTC date done by the marketplace on this order\",\"example\":\"2017-04-16T10:25:23Z\",\"format\":\"date-time\",\"type\":\"string\"},\"order_MarketplaceOrderId\":{\"$ref\":\"#/components/schemas/marketplaceOrderId\"},\"order_MerchantECommerceSoftwareName\":{\"$ref\":\"#/components/schemas/order_MerchantECommerceSoftwareName\"},\"order_MerchantECommerceSoftwareVersion\":{\"$ref\":\"#/components/schemas/order_MerchantECommerceSoftwareVersion\"},\"order_MerchantOrderId\":{\"$ref\":\"#/components/schemas/order_MerchantOrderId\"},\"order_PurchaseUtcDate\":{\"description\":\"The purchase date of this order\",\"example\":\"2017-03-31T21:30:23Z\",\"format\":\"date-time\",\"type\":\"string\"},\"order_Status_BeezUPOrderStatus\":{\"$ref\":\"#/components/schemas/beezUPOrderStatus\"},\"order_Status_MarketplaceOrderStatus\":{\"$ref\":\"#/components/schemas/marketplaceOrderStatus\"},\"order_TotalPrice\":{\"description\":\"The total price of this order (corresponding to the amount paid by the customer)\",\"example\":101.42,\"format\":\"decimal\",\"type\":\"number\"},\"processing\":{\"$ref\":\"#/components/schemas/processing\"}}}",
      "path": "tmp/APIs/beezup.com/2.0/swagger.yaml"
    },
    {
      "name": "CallFire",
      "error": "allOf will overwrite a preexisting property 'items: {\"description\":\"A list of returned items\",\"items\":{\"properties\":{},\"type\":\"object\"},\"type\":\"array\"}' with 'items: {\"items\":{\"$ref\":\"#/components/schemas/Call\"},\"type\":\"array\"}' in schema '{\"description\":\"~\",\"type\":\"object\",\"properties\":{\"items\":{\"description\":\"A list of returned items\",\"items\":{\"properties\":{},\"type\":\"object\"},\"type\":\"array\"},\"limit\":{\"description\":\"A maximum number of returned items. If items.size() < limit assume no more items\",\"format\":\"int64\",\"type\":\"integer\"},\"offset\":{\"description\":\"An offset from a start of paging source\",\"format\":\"int64\",\"type\":\"integer\"},\"totalCount\":{\"description\":\"Total count of available results. -1 if unknown\",\"format\":\"int64\",\"type\":\"integer\"}}}",
      "path": "tmp/APIs/callfire.com/V2/swagger.yaml"
    },
    {
      "name": "GoToMeeting",
      "error": "Cannot beautify \"true\" of type \"boolean\"",
      "path": "tmp/APIs/citrixonline.com/gotomeeting/1.0.0/swagger.yaml"
    },
    {
      "name": "Data2CRM.API",
      "error": "Name \"false\" can not be used as an Enum value.",
      "path": "tmp/APIs/data2crm.com/1/swagger.yaml"
    },
    {
      "name": "U.S. EPA Enforcement and Compliance History Online (ECHO) - Clean Air Act",
      "error": "Cannot beautify \"1\" of type \"number\"",
      "path": "tmp/APIs/epa.gov/air/0.0.0/swagger.yaml"
    },
    {
      "name": "U.S. EPA Enforcement and Compliance History Online (ECHO) - Clean Water Act (CWA) Rest Services",
      "error": "Cannot beautify \"1\" of type \"number\"",
      "path": "tmp/APIs/epa.gov/cwa/0.0.0/swagger.yaml"
    },
    {
      "name": "U.S. EPA Enforcement and Compliance History Online (ECHO) - All Data",
      "error": "Cannot beautify \"1\" of type \"number\"",
      "path": "tmp/APIs/epa.gov/echo/1.0.0/swagger.yaml"
    },
    {
      "name": "U.S. EPA Enforcement and Compliance History Online (ECHO) - Resource Conservation and Recovery Act ",
      "error": "Cannot beautify \"1\" of type \"number\"",
      "path": "tmp/APIs/epa.gov/rcra/0.0.0/swagger.yaml"
    },
    {
      "name": "U.S. EPA Enforcement and Compliance History Online (ECHO) - Safe Drinking Water Act",
      "error": "Cannot beautify \"1\" of type \"number\"",
      "path": "tmp/APIs/epa.gov/sdw/0.0.0/swagger.yaml"
    },
    {
      "name": "Flat",
      "error": "allOf will overwrite a preexisting property 'id: {\"description\":\"The user unique identifier\",\"type\":\"string\"}' with 'id: {\"description\":\"Identifier of the user\",\"type\":\"string\"}' in schema '{\"description\":\"User details\",\"type\":\"object\",\"properties\":{\"id\":{\"description\":\"The user unique identifier\",\"type\":\"string\"},\"isPowerUser\":{\"description\":\"User license status. 'True' if user is an individual Power user\",\"type\":\"boolean\"},\"name\":{\"description\":\"A displayable name for the user\",\"type\":\"string\"},\"picture\":{\"description\":\"User pictue\",\"type\":\"string\"},\"printableName\":{\"description\":\"The name that can be directly printed (name or username)\",\"type\":\"string\"},\"username\":{\"description\":\"The user name (unique for the organization)\",\"type\":\"string\"},\"classRole\":{\"$ref\":\"#/components/schemas/ClassRoles\"},\"htmlUrl\":{\"description\":\"Link to user profile (for Indiv. users only)\",\"type\":\"string\"},\"organization\":{\"description\":\"Organization ID (for Edu users only)\",\"type\":\"string\"},\"organizationRole\":{\"$ref\":\"#/components/schemas/OrganizationRoles\"},\"bio\":{\"description\":\"User's biography\",\"type\":\"string\"},\"followersCount\":{\"description\":\"Number of followers the user have\",\"type\":\"integer\"},\"followingCount\":{\"description\":\"Number of people the user follow\",\"type\":\"integer\"},\"instruments\":{\"$ref\":\"#/components/schemas/UserInstruments\"},\"likedScoresCount\":{\"description\":\"Number of the scores liked by the user\",\"type\":\"integer\"},\"ownedPublicScoresCount\":{\"description\":\"Number of public scores the user have\",\"type\":\"integer\"},\"profileTheme\":{\"description\":\"Theme (background) for the profile\",\"type\":\"string\"},\"registrationDate\":{\"description\":\"Date the user signed up\",\"format\":\"date-time\",\"type\":\"string\"}}}",
      "path": "tmp/APIs/flat.io/2.5.0/swagger.yaml"
    },
    {
      "name": "YouTube Data",
      "error": "Name \"true\" can not be used as an Enum value.",
      "path": "tmp/APIs/googleapis.com/youtube/v3/swagger.yaml"
    },
    {
      "name": "Custom Search",
      "error": "Name \"true\" can not be used as an Enum value.",
      "path": "tmp/APIs/microsoft.com/cognitiveservices-CustomSearch/1.0/swagger.yaml"
    },
    {
      "name": "Entity Search",
      "error": "Name \"true\" can not be used as an Enum value.",
      "path": "tmp/APIs/microsoft.com/cognitiveservices-EntitySearch/1.0/swagger.yaml"
    },
    {
      "name": "Image Search",
      "error": "Name \"true\" can not be used as an Enum value.",
      "path": "tmp/APIs/microsoft.com/cognitiveservices-ImageSearch/1.0/swagger.yaml"
    },
    {
      "name": "News Search",
      "error": "Name \"true\" can not be used as an Enum value.",
      "path": "tmp/APIs/microsoft.com/cognitiveservices-NewsSearch/1.0/swagger.yaml"
    },
    {
      "name": "Spell Check",
      "error": "Name \"true\" can not be used as an Enum value.",
      "path": "tmp/APIs/microsoft.com/cognitiveservices-SpellCheck/1.0/swagger.yaml"
    },
    {
      "name": "Video Search",
      "error": "Name \"true\" can not be used as an Enum value.",
      "path": "tmp/APIs/microsoft.com/cognitiveservices-VideoSearch/1.0/swagger.yaml"
    },
    {
      "name": "Web Search",
      "error": "Name \"true\" can not be used as an Enum value.",
      "path": "tmp/APIs/microsoft.com/cognitiveservices-WebSearch/1.0/swagger.yaml"
    },
    {
      "name": "Labs64 NetLicensing RESTful API Test Center",
      "error": "(Patchable) collectionFormat is only applicable to param.type array",
      "path": "tmp/APIs/netlicensing.io/2.x/swagger.yaml"
    },
    {
      "name": "NPR One API Reference",
      "error": "allOf will overwrite a preexisting property 'attributes: {\"type\":\"object\"}' with 'attributes: {\"$ref\":\"#/components/schemas/UserData\"}' in schema '{\"type\":\"object\",\"properties\":{\"attributes\":{\"type\":\"object\"},\"errors\":{\"description\":\"A list of encountered errors, ignored on POST, PUT\",\"items\":{\"type\":\"null\"},\"type\":\"array\"},\"href\":{\"description\":\"A URL representation of the resource; should generally be ignored by clients unless noted otherwise\",\"type\":\"string\"},\"items\":{\"items\":{\"type\":\"null\"},\"type\":\"array\"},\"links\":{\"type\":\"object\"},\"version\":{\"default\":\"1.0\",\"description\":\"The version of the Collection.Doc+JSON spec being used\",\"type\":\"string\"}}}",
      "path": "tmp/APIs/npr.org/Calcium/swagger.yaml"
    },
    {
      "name": "Geographic",
      "error": "Cannot beautify \"0\" of type \"number\"",
      "path": "tmp/APIs/nytimes.com/geo_api/1.0.0/swagger.yaml"
    },
    {
      "name": "PI Web API 2017 Swagger Spec",
      "error": "Cannot beautify \"100\" of type \"number\"",
      "path": "tmp/APIs/osisoft.com/1.9.0.266/swagger.yaml"
    },
    {
      "name": "PayRun.IO",
      "error": "typeListItemInput fields must be an object with field names as keys or a function which returns such an object.",
      "path": "tmp/APIs/payrun.io/17.18.6.131/swagger.yaml"
    },
    {
      "name": "PTV Timetable API - Version 3",
      "error": "Cannot beautify \"0\" of type \"number\"",
      "path": "tmp/APIs/ptv.vic.gov.au/v3/swagger.yaml"
    },
    {
      "name": "Rebilly",
      "error": "(Patchable) $ref object cannot be extended: #/responses/Conflict",
      "path": "tmp/APIs/rebilly.com/2.1/swagger.yaml"
    },
    {
      "name": "SendGrid v3",
      "error": "Cannot beautify \"true\" of type \"boolean\"",
      "path": "tmp/APIs/sendgrid.com/3.0/swagger.yaml"
    },
    {
      "name": "SimplyRETS",
      "error": "(Patchable) collectionFormat is only applicable to param.type array",
      "path": "tmp/APIs/simplyrets.com/1.0.0/swagger.yaml"
    },
    {
      "name": "Slack",
      "error": "Cannot beautify \"true\" of type \"boolean\"",
      "path": "tmp/APIs/slack.com/1.0.3/swagger.yaml"
    },
    {
      "name": "StackExchange",
      "error": "Cannot beautify \"true\" of type \"boolean\"",
      "path": "tmp/APIs/stackexchange.com/2.0/swagger.yaml"
    },
    {
      "name": "traccar",
      "error": "(Patchable) collectionFormat is only applicable to param.type array",
      "path": "tmp/APIs/traccar.org/3.15/swagger.yaml"
    },
    {
      "name": "TVmaze user",
      "error": "Cannot beautify \"0\" of type \"number\"",
      "path": "tmp/APIs/tvmaze.com/1.0/swagger.yaml"
    },
    {
      "name": "GraphRbacManagementClient",
      "error": "Cannot beautify \"false\" of type \"boolean\"",
      "path": "tmp/APIs/windows.net/graphrbac/1.6/swagger.yaml"
    },
    {
      "name": "Wowza Streaming Cloud REST API Reference Documentation",
      "error": "Cannot beautify \"2\" of type \"number\"",
      "path": "tmp/APIs/wowza.com/1/swagger.yaml"
    },
    {
      "name": "Zalando Shop",
      "error": "(Patchable) collectionFormat is only applicable to param.type array",
      "path": "tmp/APIs/zalando.com/v1.0/swagger.yaml"
    }
  ]
}
